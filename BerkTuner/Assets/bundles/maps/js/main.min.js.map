{"version":3,"sources":["Assets/resources/js/core/tuner.js","Assets/vendors/bootstrap/js/bootstrap.js","Assets/vendors/bootbox.js/js/bootbox.js","Assets/vendors/modernizr/js/modernizr.js","Assets/vendors/respond/js/respond.src.js","Assets/vendors/signalr/js/jquery.signalR.js"],"names":["showOverlayLoader","$","show","hideOverlayLoader","hide","root","factory","define","amd","exports","module","require","bootbox","jQuery","this","init","undefined","_t","key","locale","locales","defaults","en","processCallback","e","dialog","callback","stopPropagation","preventDefault","preserveDialog","isFunction","call","modal","getKeyLength","obj","k","t","each","collection","iterator","index","value","sanitize","options","buttons","total","Error","message","extend","button","type","label","className","mapArguments","args","properties","argn","length","mergeArguments","mergeDialogOptions","labels","baseOptions","createLabels","apply","validateButtons","i","j","arguments","argument","toLowerCase","toUpperCase","allowedButtons","join","templates","header","footer","closeButton","form","inputs","text","textarea","email","select","checkbox","date","time","number","password","backdrop","animate","container","alert","ok","onEscape","confirm","cancel","prompt","input","shouldShow","inputOptions","inputType","val","checkedItems","find","_","item","push","title","groups","isArray","option","elem","group","attr","append","values","prop","placeholder","pattern","maxlength","on","click","off","focus","innerDialog","body","buttonStr","callbacks","fn","html","addClass","size","before","prepend","css","prependTo","after","target","remove","children","currentTarget","get","trigger","callbackKey","data","which","keyboard","setDefaults","hideAll","bg_BG","OK","CANCEL","CONFIRM","br","cs","da","de","el","es","et","fa","fi","fr","he","hu","hr","id","it","ja","lt","lv","nl","no","pl","pt","ru","sq","sv","th","tr","zh_CN","zh_TW","addLocale","name","v","removeLocale","setLocale","_$","version","jquery","split","transitionEnd","document","createElement","transEndEventNames","WebkitTransition","MozTransition","OTransition","transition","style","end","emulateTransitionEnd","duration","called","$el","one","support","setTimeout","event","special","bsTransitionEnd","bindType","delegateType","handle","is","handleObj","handler","Plugin","$this","Alert","dismiss","close","VERSION","TRANSITION_DURATION","prototype","removeElement","$parent","detach","selector","replace","closest","Event","isDefaultPrevented","removeClass","hasClass","old","Constructor","noConflict","Button","toggle","setState","element","$element","DEFAULTS","isLoading","loadingText","state","d","resetText","proxy","removeAttr","changed","$input","toggleClass","$btn","first","test","Carousel","action","slide","to","interval","pause","cycle","$indicators","paused","sliding","$active","$items","keydown","documentElement","wrap","tagName","prev","next","clearInterval","setInterval","getItemIndex","parent","getItemForDirection","direction","active","activeIndex","willWrap","delta","itemIndex","eq","pos","that","$next","isCycling","relatedTarget","slideEvent","$nextIndicator","slidEvent","offsetWidth","carousel","clickHandler","href","$target","slideIndex","window","$carousel","getTargetFromTrigger","$trigger","Collapse","transitioning","getParent","addAriaAndCollapsedClass","dimension","hasWidth","activesData","actives","startEvent","complete","scrollSize","camelCase","offsetHeight","isOpen","collapse","clearMenus","contains","Dropdown","isActive","insertAfter","desc","dropdown","_relatedTarget","Modal","$body","$dialog","$backdrop","isShown","originalBodyPad","scrollbarWidth","ignoreBackdropClick","remote","load","BACKDROP_TRANSITION_DURATION","checkScrollbar","setScrollbar","escape","resize","appendTo","scrollTop","adjustDialog","enforceFocus","hideModal","has","handleUpdate","resetAdjustments","resetScrollbar","removeBackdrop","doAnimate","callbackRemove","modalIsOverflowing","scrollHeight","clientHeight","paddingLeft","bodyIsOverflowing","paddingRight","fullWindowWidth","innerWidth","documentElementRect","getBoundingClientRect","right","Math","abs","left","clientWidth","measureScrollbar","bodyPad","parseInt","scrollDiv","removeChild","showEvent","Tooltip","enabled","timeout","hoverState","inState","animation","placement","template","delay","viewport","padding","getOptions","$viewport","hover","constructor","triggers","eventIn","eventOut","enter","leave","_options","fixTitle","getDefaults","getDelegateOptions","self","tip","clearTimeout","isInStateTrue","hasContent","inDom","ownerDocument","$tip","tipId","getUID","setContent","autoToken","autoPlace","top","display","getPosition","actualWidth","actualHeight","orgPlacement","viewportDim","bottom","width","calculatedOffset","getCalculatedOffset","applyPlacement","prevHoverState","offset","height","marginTop","marginLeft","isNaN","setOffset","using","props","round","getViewportAdjustedDelta","isVertical","arrowDelta","arrowOffsetPosition","replaceArrow","arrow","getTitle","$e","isBody","elRect","isSvg","SVGElement","elOffset","scroll","outerDims","viewportPadding","viewportDimensions","topEdgeOffset","bottomEdgeOffset","leftEdgeOffset","rightEdgeOffset","o","prefix","random","getElementById","$arrow","enable","disable","toggleEnabled","destroy","removeData","tooltip","Popover","content","getContent","popover","ScrollSpy","$scrollElement","offsets","targets","activeTarget","process","refresh","getScrollHeight","max","offsetMethod","offsetBase","isWindow","map","$href","sort","a","b","maxScroll","activate","clear","parents","parentsUntil","scrollspy","$spy","Tab","$ul","$previous","hideEvent","tab","Affix","checkPosition","checkPositionWithEventLoop","affixed","unpin","pinnedOffset","RESET","getState","offsetTop","offsetBottom","position","targetHeight","initializing","colliderTop","colliderHeight","getPinnedOffset","affix","affixType","Modernizr","setCss","str","mStyle","cssText","setCssAll","str1","str2","prefixes","substr","indexOf","testProps","prefixed","testDOMProps","bind","testPropsAll","ucProp","charAt","slice","cssomPrefixes","webforms","len","attrs","inputElem","list","HTMLDataListElement","bool","inputElemType","defaultView","setAttribute","smile","WebkitAppearance","docElement","appendChild","getComputedStyle","checkValidity","featureName","hasOwnProp","enableClasses","mod","modElem","toString","omPrefixes","domPrefixes","ns","svg","tests","classes","injectElementWithStyles","rule","nodes","testnames","ret","node","docOverflow","div","fakeBody","innerHTML","background","overflow","parentNode","testMediaQuery","mq","matchMedia","msMatchMedia","matches","currentStyle","isEventSupported","eventName","TAGNAMES","isSupported","removeAttribute","change","submit","reset","error","abort","_hasOwnProperty","hasOwnProperty","object","property","Function","TypeError","bound","F","result","concat","Object","getContext","fillText","WebGLRenderingContext","DocumentTouch","navigator","postMessage","openDatabase","documentMode","history","pushState","backgroundColor","textShadow","opacity","str3","backgroundImage","offsetLeft","sheet","styleSheet","cssRules","canPlayType","Boolean","ogg","h264","webm","mp3","wav","m4a","localStorage","setItem","removeItem","sessionStorage","Worker","applicationCache","createElementNS","createSVGRect","firstChild","namespaceURI","feature","addTest","addStyleSheet","p","getElementsByTagName","insertBefore","lastChild","getElements","elements","html5","getExpandoData","expandoData","expando","expanID","nodeName","supportsUnknownElements","cache","cloneNode","saveClones","createElem","canHaveChildren","reSkip","tagUrn","frag","createDocumentFragment","clone","elems","l","shivMethods","createFrag","shivDocument","shivCSS","supportsHtml5Styles","hasCSS","childNodes","_version","_prefixes","_domPrefixes","_cssomPrefixes","hasEvent","testProp","testAllProps","testStyles","w","doc","docElem","refNode","firstElementChild","q","media","callMedia","applyMedia","respond","update","requestQueue","xmlHttp","xmlhttpmethod","XMLHttpRequest","ActiveXObject","ajax","url","req","open","onreadystatechange","readyState","status","responseText","send","queue","regex","keyframes","urls","findStyles","only","minw","maxw","mediaQueriesSupported","lastCall","resizeDefer","eminpx","mediastyles","rules","appendedEls","parsedSheets","resizeThrottle","head","base","links","getEmValue","originalHTMLFontSize","fontSize","originalBodyFontSize","fakeUsed","parseFloat","fromResize","docElemProp","currWidth","compatMode","styleBlocks","lastLink","now","Date","getTime","thisstyle","min","minnull","maxnull","em","hasquery","ss","nextSibling","createTextNode","translate","styles","qs","match","ql","substring","lastIndexOf","repUrls","useMedia","fullq","thisq","eachq","eql","RegExp","$1","$2","makeRequests","thisRequest","shift","ripCSS","isCSS","rel","rawCssText","location","host","protocol","addEventListener","attachEvent","validateTransport","requestedTransport","connection","transport","signalR","transports","log","splice","ieVersion","getDefaultPort","addDefaultPort","ConnectingMessageBuffer","drainCallback","buffer","tryBuffer","connectionState","connecting","drain","connected","resources","nojQuery","noTransportOnInit","errorOnNegotiate","stoppedWhileLoading","stoppedWhileNegotiating","errorParsingNegotiateResponse","errorDuringStartRequest","stoppedDuringStartRequest","errorParsingStartResponse","invalidStartResponse","protocolIncompatible","sendFailed","parseFailed","longPollFailed","eventSourceFailedToConnect","eventSourceError","webSocketClosed","pingServerFailedInvalidResponse","pingServerFailed","pingServerFailedStatusCode","pingServerFailedParse","noConnectionTransport","webSocketsInvalidState","reconnectTimeout","reconnectWindowTimeout","_connection","_pageLoaded","_pageWindow","_negotiateAbortText","events","onStart","onStarting","onReceived","onError","onConnectionSlow","onReconnecting","onReconnect","onStateChanged","onDisconnect","ajaxDefaults","processData","async","global","msg","logging","m","toTimeString","console","debug","changeState","expectedState","newState","triggerHandler","oldState","isDisconnecting","disconnected","supportsKeepAlive","keepAliveData","activated","configureStopReconnectingTimeout","stopReconnectingTimeout","onReconnectTimeout","configuredStopReconnectingTimeout","format","disconnectTimeout","stop","reconnecting","stateChanged","defaultContentType","appName","exec","userAgent","source","context","transportError","s","firefoxMajorVersion","configurePingInterval","config","onFail","pingIntervalId","pingInterval","_logic","pingServer","fail","hub","start","$connection","lastError","connectingMessageBuffer","lastMessageAt","lastActiveAt","beatInterval","beatHandle","totalTransportConnectTimeout","_parseResponse","response","json","parse","_originalJson","JSON","isCrossDomain","against","link","trim","ajaxDataType","contentType","clientProtocol","reconnectDelay","transportConnectTimeout","reconnectWindow","keepAliveWarnAt","initialize","waitForPageLoad","jsonp","deferred","_deferral","Deferred","parser","deferredStartHandler","promise","resolve","baseUrl","wsProtocol","withCredentials","cors","initHandler","noTransportError","reject","transportName","onFallback","isFirefox11OrGreater","asyncAbort","monitorKeepAlive","startHeartbeat","onFailed","err","negotiateRequest","prepareQueryString","statusText","success","res","protocolError","supportedTransports","appRelativeUrl","Url","ConnectionId","token","ConnectionToken","webSocketServerUrl","WebSocketServerUrl","pollTimeout","ConnectionTimeout","DisconnectTimeout","TransportConnectTimeout","KeepAliveTimeout","timeoutWarning","ProtocolVersion","TryWebSockets","inArray","starting","received","errorData","sendData","connectionSlow","reconnected","notifyServer","deferral","unbind","stopMonitoringKeepAlive","messageId","groupsToken","beat","monitoring","checkIfAlive","transportLogic","markActive","timeElapsed","lostConnection","userNotified","getAjaxUrl","path","InitHandler","startRequested","startCompleted","connectionStopped","startAbortText","onSuccess","failCalled","initReceived","transportFailed","transportTimeoutHandle","tryAbortStartRequest","ajaxStart","wrappedError","xhrFields","dataType","xhr","addQs","Response","preparedUrl","encodeURIComponent","firstChar","appender","param","getUrl","poll","ajaxPost","floor","maximizePersistentResponse","minPersistentResponse","MessageId","C","Messages","M","Initialized","ShouldReconnect","LongPollDelay","L","GroupsToken","G","updateGroups","stringifySend","stringify","ajaxSend","payload","triggerReceived","textStatus","ajaxAbort","rejectDeferred","triggerStartError","startRequest","tryInitialize","persistentResponse","onInitialized","processMessages","minData","markLastMessage","reconnectKeepAliveUpdate","verifyLastActive","isConnectedOrReconnecting","ensureReconnectingState","clearReconnectTimeout","reconnect","handleParseFailure","foreverFrame","count","connections","webSockets","socket","ex","opened","WebSocket","onopen","onclose","wasClean","reason","onmessage","isEmptyObject","clearReconnectAttemptTimeout","reconnectAttemptTimeoutHandle","serverSentEvents","timeOut","eventSource","EventSource","Message","OPEN","eventPhase","CLOSED","createFrame","frame","loadPreventer","loadingFixIntervalId","loadingFixInterval","attachedTo","prevent","tempFrame","iframeClearThreshold","frameId","frameLoadHandler","src","receive","cw","frameMessageCount","contentWindow","contentDocument","execCommand","getConnection","started","longPolling","fireConnect","noop","tryFailConnect","privateData","reconnectErrors","fireReconnected","instance","reconnectTimeoutId","maxFireReconnectedTimeout","pollXhr","pollTimeoutId","raiseReconnect","connect","polling","postData","onprogress","shouldReconnect","pow","makeEventName","eventNamespace","arr","fun","thisp","getArgValue","hasMembers","clearInvocationCallbacks","invocationCallbacks","invocationCallbackId","callbackId","method","scope","E","hubProxy","hubConnection","hubName","settings","useDefaultPath","callbackMap","hasSubscriptions","callbackSpace","invoke","methodName","makeArray","argValues","H","A","I","minResult","_maximizeHubResponse","State","Progress","notifyWith","Data","progressjQueryVersionLogged","StackTrace","IsHubException","ErrorData","rejectWith","resolveWith","Result","S","minHubResponse","R","P","Id","D","T","proxies","dataCallbackId","_maximizeClientHubInvocation","Method","Hub","Args","errData","origData","minClientHubInvocation","_registerSubscribedHubs","_subscribedToHubs","subscribedHubs","createHubProxy","ajaxSetup","beforeSend","MESSAGES","uncaughtError"],"mappings":"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","file":"../../../../../js/main.min.js","sourcesContent":["$(function () {\r\n    //Set defaults\r\n    $.ajaxSetup({\r\n        beforeSend: function () {\r\n            showOverlayLoader();\r\n        },\r\n        error: function (err) {\r\n            bootbox.alert(MESSAGES.uncaughtError);\r\n        },\r\n        complete: function () {\r\n            hideOverlayLoader();\r\n        }\r\n    });\r\n});\r\n\r\nfunction showOverlayLoader() {\r\n    $('.overlay,.loader').show();\r\n}\r\n\r\nfunction hideOverlayLoader() {\r\n    $('.overlay,.loader').hide();\r\n}","/*!\n * Bootstrap v3.3.7 (http://getbootstrap.com)\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under the MIT license\n */\n\nif (typeof jQuery === 'undefined') {\n  throw new Error('Bootstrap\\'s JavaScript requires jQuery')\n}\n\n+function ($) {\n  'use strict';\n  var version = $.fn.jquery.split(' ')[0].split('.')\n  if ((version[0] < 2 && version[1] < 9) || (version[0] == 1 && version[1] == 9 && version[2] < 1) || (version[0] > 3)) {\n    throw new Error('Bootstrap\\'s JavaScript requires jQuery version 1.9.1 or higher, but lower than version 4')\n  }\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: transition.js v3.3.7\n * http://getbootstrap.com/javascript/#transitions\n * ========================================================================\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // CSS TRANSITION SUPPORT (Shoutout: http://www.modernizr.com/)\n  // ============================================================\n\n  function transitionEnd() {\n    var el = document.createElement('bootstrap')\n\n    var transEndEventNames = {\n      WebkitTransition : 'webkitTransitionEnd',\n      MozTransition    : 'transitionend',\n      OTransition      : 'oTransitionEnd otransitionend',\n      transition       : 'transitionend'\n    }\n\n    for (var name in transEndEventNames) {\n      if (el.style[name] !== undefined) {\n        return { end: transEndEventNames[name] }\n      }\n    }\n\n    return false // explicit for ie8 (  ._.)\n  }\n\n  // http://blog.alexmaccaw.com/css-transitions\n  $.fn.emulateTransitionEnd = function (duration) {\n    var called = false\n    var $el = this\n    $(this).one('bsTransitionEnd', function () { called = true })\n    var callback = function () { if (!called) $($el).trigger($.support.transition.end) }\n    setTimeout(callback, duration)\n    return this\n  }\n\n  $(function () {\n    $.support.transition = transitionEnd()\n\n    if (!$.support.transition) return\n\n    $.event.special.bsTransitionEnd = {\n      bindType: $.support.transition.end,\n      delegateType: $.support.transition.end,\n      handle: function (e) {\n        if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments)\n      }\n    }\n  })\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: alert.js v3.3.7\n * http://getbootstrap.com/javascript/#alerts\n * ========================================================================\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // ALERT CLASS DEFINITION\n  // ======================\n\n  var dismiss = '[data-dismiss=\"alert\"]'\n  var Alert   = function (el) {\n    $(el).on('click', dismiss, this.close)\n  }\n\n  Alert.VERSION = '3.3.7'\n\n  Alert.TRANSITION_DURATION = 150\n\n  Alert.prototype.close = function (e) {\n    var $this    = $(this)\n    var selector = $this.attr('data-target')\n\n    if (!selector) {\n      selector = $this.attr('href')\n      selector = selector && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\n    }\n\n    var $parent = $(selector === '#' ? [] : selector)\n\n    if (e) e.preventDefault()\n\n    if (!$parent.length) {\n      $parent = $this.closest('.alert')\n    }\n\n    $parent.trigger(e = $.Event('close.bs.alert'))\n\n    if (e.isDefaultPrevented()) return\n\n    $parent.removeClass('in')\n\n    function removeElement() {\n      // detach from parent, fire event then clean up data\n      $parent.detach().trigger('closed.bs.alert').remove()\n    }\n\n    $.support.transition && $parent.hasClass('fade') ?\n      $parent\n        .one('bsTransitionEnd', removeElement)\n        .emulateTransitionEnd(Alert.TRANSITION_DURATION) :\n      removeElement()\n  }\n\n\n  // ALERT PLUGIN DEFINITION\n  // =======================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this)\n      var data  = $this.data('bs.alert')\n\n      if (!data) $this.data('bs.alert', (data = new Alert(this)))\n      if (typeof option == 'string') data[option].call($this)\n    })\n  }\n\n  var old = $.fn.alert\n\n  $.fn.alert             = Plugin\n  $.fn.alert.Constructor = Alert\n\n\n  // ALERT NO CONFLICT\n  // =================\n\n  $.fn.alert.noConflict = function () {\n    $.fn.alert = old\n    return this\n  }\n\n\n  // ALERT DATA-API\n  // ==============\n\n  $(document).on('click.bs.alert.data-api', dismiss, Alert.prototype.close)\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: button.js v3.3.7\n * http://getbootstrap.com/javascript/#buttons\n * ========================================================================\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // BUTTON PUBLIC CLASS DEFINITION\n  // ==============================\n\n  var Button = function (element, options) {\n    this.$element  = $(element)\n    this.options   = $.extend({}, Button.DEFAULTS, options)\n    this.isLoading = false\n  }\n\n  Button.VERSION  = '3.3.7'\n\n  Button.DEFAULTS = {\n    loadingText: 'loading...'\n  }\n\n  Button.prototype.setState = function (state) {\n    var d    = 'disabled'\n    var $el  = this.$element\n    var val  = $el.is('input') ? 'val' : 'html'\n    var data = $el.data()\n\n    state += 'Text'\n\n    if (data.resetText == null) $el.data('resetText', $el[val]())\n\n    // push to event loop to allow forms to submit\n    setTimeout($.proxy(function () {\n      $el[val](data[state] == null ? this.options[state] : data[state])\n\n      if (state == 'loadingText') {\n        this.isLoading = true\n        $el.addClass(d).attr(d, d).prop(d, true)\n      } else if (this.isLoading) {\n        this.isLoading = false\n        $el.removeClass(d).removeAttr(d).prop(d, false)\n      }\n    }, this), 0)\n  }\n\n  Button.prototype.toggle = function () {\n    var changed = true\n    var $parent = this.$element.closest('[data-toggle=\"buttons\"]')\n\n    if ($parent.length) {\n      var $input = this.$element.find('input')\n      if ($input.prop('type') == 'radio') {\n        if ($input.prop('checked')) changed = false\n        $parent.find('.active').removeClass('active')\n        this.$element.addClass('active')\n      } else if ($input.prop('type') == 'checkbox') {\n        if (($input.prop('checked')) !== this.$element.hasClass('active')) changed = false\n        this.$element.toggleClass('active')\n      }\n      $input.prop('checked', this.$element.hasClass('active'))\n      if (changed) $input.trigger('change')\n    } else {\n      this.$element.attr('aria-pressed', !this.$element.hasClass('active'))\n      this.$element.toggleClass('active')\n    }\n  }\n\n\n  // BUTTON PLUGIN DEFINITION\n  // ========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.button')\n      var options = typeof option == 'object' && option\n\n      if (!data) $this.data('bs.button', (data = new Button(this, options)))\n\n      if (option == 'toggle') data.toggle()\n      else if (option) data.setState(option)\n    })\n  }\n\n  var old = $.fn.button\n\n  $.fn.button             = Plugin\n  $.fn.button.Constructor = Button\n\n\n  // BUTTON NO CONFLICT\n  // ==================\n\n  $.fn.button.noConflict = function () {\n    $.fn.button = old\n    return this\n  }\n\n\n  // BUTTON DATA-API\n  // ===============\n\n  $(document)\n    .on('click.bs.button.data-api', '[data-toggle^=\"button\"]', function (e) {\n      var $btn = $(e.target).closest('.btn')\n      Plugin.call($btn, 'toggle')\n      if (!($(e.target).is('input[type=\"radio\"], input[type=\"checkbox\"]'))) {\n        // Prevent double click on radios, and the double selections (so cancellation) on checkboxes\n        e.preventDefault()\n        // The target component still receive the focus\n        if ($btn.is('input,button')) $btn.trigger('focus')\n        else $btn.find('input:visible,button:visible').first().trigger('focus')\n      }\n    })\n    .on('focus.bs.button.data-api blur.bs.button.data-api', '[data-toggle^=\"button\"]', function (e) {\n      $(e.target).closest('.btn').toggleClass('focus', /^focus(in)?$/.test(e.type))\n    })\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: carousel.js v3.3.7\n * http://getbootstrap.com/javascript/#carousel\n * ========================================================================\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // CAROUSEL CLASS DEFINITION\n  // =========================\n\n  var Carousel = function (element, options) {\n    this.$element    = $(element)\n    this.$indicators = this.$element.find('.carousel-indicators')\n    this.options     = options\n    this.paused      = null\n    this.sliding     = null\n    this.interval    = null\n    this.$active     = null\n    this.$items      = null\n\n    this.options.keyboard && this.$element.on('keydown.bs.carousel', $.proxy(this.keydown, this))\n\n    this.options.pause == 'hover' && !('ontouchstart' in document.documentElement) && this.$element\n      .on('mouseenter.bs.carousel', $.proxy(this.pause, this))\n      .on('mouseleave.bs.carousel', $.proxy(this.cycle, this))\n  }\n\n  Carousel.VERSION  = '3.3.7'\n\n  Carousel.TRANSITION_DURATION = 600\n\n  Carousel.DEFAULTS = {\n    interval: 5000,\n    pause: 'hover',\n    wrap: true,\n    keyboard: true\n  }\n\n  Carousel.prototype.keydown = function (e) {\n    if (/input|textarea/i.test(e.target.tagName)) return\n    switch (e.which) {\n      case 37: this.prev(); break\n      case 39: this.next(); break\n      default: return\n    }\n\n    e.preventDefault()\n  }\n\n  Carousel.prototype.cycle = function (e) {\n    e || (this.paused = false)\n\n    this.interval && clearInterval(this.interval)\n\n    this.options.interval\n      && !this.paused\n      && (this.interval = setInterval($.proxy(this.next, this), this.options.interval))\n\n    return this\n  }\n\n  Carousel.prototype.getItemIndex = function (item) {\n    this.$items = item.parent().children('.item')\n    return this.$items.index(item || this.$active)\n  }\n\n  Carousel.prototype.getItemForDirection = function (direction, active) {\n    var activeIndex = this.getItemIndex(active)\n    var willWrap = (direction == 'prev' && activeIndex === 0)\n                || (direction == 'next' && activeIndex == (this.$items.length - 1))\n    if (willWrap && !this.options.wrap) return active\n    var delta = direction == 'prev' ? -1 : 1\n    var itemIndex = (activeIndex + delta) % this.$items.length\n    return this.$items.eq(itemIndex)\n  }\n\n  Carousel.prototype.to = function (pos) {\n    var that        = this\n    var activeIndex = this.getItemIndex(this.$active = this.$element.find('.item.active'))\n\n    if (pos > (this.$items.length - 1) || pos < 0) return\n\n    if (this.sliding)       return this.$element.one('slid.bs.carousel', function () { that.to(pos) }) // yes, \"slid\"\n    if (activeIndex == pos) return this.pause().cycle()\n\n    return this.slide(pos > activeIndex ? 'next' : 'prev', this.$items.eq(pos))\n  }\n\n  Carousel.prototype.pause = function (e) {\n    e || (this.paused = true)\n\n    if (this.$element.find('.next, .prev').length && $.support.transition) {\n      this.$element.trigger($.support.transition.end)\n      this.cycle(true)\n    }\n\n    this.interval = clearInterval(this.interval)\n\n    return this\n  }\n\n  Carousel.prototype.next = function () {\n    if (this.sliding) return\n    return this.slide('next')\n  }\n\n  Carousel.prototype.prev = function () {\n    if (this.sliding) return\n    return this.slide('prev')\n  }\n\n  Carousel.prototype.slide = function (type, next) {\n    var $active   = this.$element.find('.item.active')\n    var $next     = next || this.getItemForDirection(type, $active)\n    var isCycling = this.interval\n    var direction = type == 'next' ? 'left' : 'right'\n    var that      = this\n\n    if ($next.hasClass('active')) return (this.sliding = false)\n\n    var relatedTarget = $next[0]\n    var slideEvent = $.Event('slide.bs.carousel', {\n      relatedTarget: relatedTarget,\n      direction: direction\n    })\n    this.$element.trigger(slideEvent)\n    if (slideEvent.isDefaultPrevented()) return\n\n    this.sliding = true\n\n    isCycling && this.pause()\n\n    if (this.$indicators.length) {\n      this.$indicators.find('.active').removeClass('active')\n      var $nextIndicator = $(this.$indicators.children()[this.getItemIndex($next)])\n      $nextIndicator && $nextIndicator.addClass('active')\n    }\n\n    var slidEvent = $.Event('slid.bs.carousel', { relatedTarget: relatedTarget, direction: direction }) // yes, \"slid\"\n    if ($.support.transition && this.$element.hasClass('slide')) {\n      $next.addClass(type)\n      $next[0].offsetWidth // force reflow\n      $active.addClass(direction)\n      $next.addClass(direction)\n      $active\n        .one('bsTransitionEnd', function () {\n          $next.removeClass([type, direction].join(' ')).addClass('active')\n          $active.removeClass(['active', direction].join(' '))\n          that.sliding = false\n          setTimeout(function () {\n            that.$element.trigger(slidEvent)\n          }, 0)\n        })\n        .emulateTransitionEnd(Carousel.TRANSITION_DURATION)\n    } else {\n      $active.removeClass('active')\n      $next.addClass('active')\n      this.sliding = false\n      this.$element.trigger(slidEvent)\n    }\n\n    isCycling && this.cycle()\n\n    return this\n  }\n\n\n  // CAROUSEL PLUGIN DEFINITION\n  // ==========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.carousel')\n      var options = $.extend({}, Carousel.DEFAULTS, $this.data(), typeof option == 'object' && option)\n      var action  = typeof option == 'string' ? option : options.slide\n\n      if (!data) $this.data('bs.carousel', (data = new Carousel(this, options)))\n      if (typeof option == 'number') data.to(option)\n      else if (action) data[action]()\n      else if (options.interval) data.pause().cycle()\n    })\n  }\n\n  var old = $.fn.carousel\n\n  $.fn.carousel             = Plugin\n  $.fn.carousel.Constructor = Carousel\n\n\n  // CAROUSEL NO CONFLICT\n  // ====================\n\n  $.fn.carousel.noConflict = function () {\n    $.fn.carousel = old\n    return this\n  }\n\n\n  // CAROUSEL DATA-API\n  // =================\n\n  var clickHandler = function (e) {\n    var href\n    var $this   = $(this)\n    var $target = $($this.attr('data-target') || (href = $this.attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, '')) // strip for ie7\n    if (!$target.hasClass('carousel')) return\n    var options = $.extend({}, $target.data(), $this.data())\n    var slideIndex = $this.attr('data-slide-to')\n    if (slideIndex) options.interval = false\n\n    Plugin.call($target, options)\n\n    if (slideIndex) {\n      $target.data('bs.carousel').to(slideIndex)\n    }\n\n    e.preventDefault()\n  }\n\n  $(document)\n    .on('click.bs.carousel.data-api', '[data-slide]', clickHandler)\n    .on('click.bs.carousel.data-api', '[data-slide-to]', clickHandler)\n\n  $(window).on('load', function () {\n    $('[data-ride=\"carousel\"]').each(function () {\n      var $carousel = $(this)\n      Plugin.call($carousel, $carousel.data())\n    })\n  })\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: collapse.js v3.3.7\n * http://getbootstrap.com/javascript/#collapse\n * ========================================================================\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n/* jshint latedef: false */\n\n+function ($) {\n  'use strict';\n\n  // COLLAPSE PUBLIC CLASS DEFINITION\n  // ================================\n\n  var Collapse = function (element, options) {\n    this.$element      = $(element)\n    this.options       = $.extend({}, Collapse.DEFAULTS, options)\n    this.$trigger      = $('[data-toggle=\"collapse\"][href=\"#' + element.id + '\"],' +\n                           '[data-toggle=\"collapse\"][data-target=\"#' + element.id + '\"]')\n    this.transitioning = null\n\n    if (this.options.parent) {\n      this.$parent = this.getParent()\n    } else {\n      this.addAriaAndCollapsedClass(this.$element, this.$trigger)\n    }\n\n    if (this.options.toggle) this.toggle()\n  }\n\n  Collapse.VERSION  = '3.3.7'\n\n  Collapse.TRANSITION_DURATION = 350\n\n  Collapse.DEFAULTS = {\n    toggle: true\n  }\n\n  Collapse.prototype.dimension = function () {\n    var hasWidth = this.$element.hasClass('width')\n    return hasWidth ? 'width' : 'height'\n  }\n\n  Collapse.prototype.show = function () {\n    if (this.transitioning || this.$element.hasClass('in')) return\n\n    var activesData\n    var actives = this.$parent && this.$parent.children('.panel').children('.in, .collapsing')\n\n    if (actives && actives.length) {\n      activesData = actives.data('bs.collapse')\n      if (activesData && activesData.transitioning) return\n    }\n\n    var startEvent = $.Event('show.bs.collapse')\n    this.$element.trigger(startEvent)\n    if (startEvent.isDefaultPrevented()) return\n\n    if (actives && actives.length) {\n      Plugin.call(actives, 'hide')\n      activesData || actives.data('bs.collapse', null)\n    }\n\n    var dimension = this.dimension()\n\n    this.$element\n      .removeClass('collapse')\n      .addClass('collapsing')[dimension](0)\n      .attr('aria-expanded', true)\n\n    this.$trigger\n      .removeClass('collapsed')\n      .attr('aria-expanded', true)\n\n    this.transitioning = 1\n\n    var complete = function () {\n      this.$element\n        .removeClass('collapsing')\n        .addClass('collapse in')[dimension]('')\n      this.transitioning = 0\n      this.$element\n        .trigger('shown.bs.collapse')\n    }\n\n    if (!$.support.transition) return complete.call(this)\n\n    var scrollSize = $.camelCase(['scroll', dimension].join('-'))\n\n    this.$element\n      .one('bsTransitionEnd', $.proxy(complete, this))\n      .emulateTransitionEnd(Collapse.TRANSITION_DURATION)[dimension](this.$element[0][scrollSize])\n  }\n\n  Collapse.prototype.hide = function () {\n    if (this.transitioning || !this.$element.hasClass('in')) return\n\n    var startEvent = $.Event('hide.bs.collapse')\n    this.$element.trigger(startEvent)\n    if (startEvent.isDefaultPrevented()) return\n\n    var dimension = this.dimension()\n\n    this.$element[dimension](this.$element[dimension]())[0].offsetHeight\n\n    this.$element\n      .addClass('collapsing')\n      .removeClass('collapse in')\n      .attr('aria-expanded', false)\n\n    this.$trigger\n      .addClass('collapsed')\n      .attr('aria-expanded', false)\n\n    this.transitioning = 1\n\n    var complete = function () {\n      this.transitioning = 0\n      this.$element\n        .removeClass('collapsing')\n        .addClass('collapse')\n        .trigger('hidden.bs.collapse')\n    }\n\n    if (!$.support.transition) return complete.call(this)\n\n    this.$element\n      [dimension](0)\n      .one('bsTransitionEnd', $.proxy(complete, this))\n      .emulateTransitionEnd(Collapse.TRANSITION_DURATION)\n  }\n\n  Collapse.prototype.toggle = function () {\n    this[this.$element.hasClass('in') ? 'hide' : 'show']()\n  }\n\n  Collapse.prototype.getParent = function () {\n    return $(this.options.parent)\n      .find('[data-toggle=\"collapse\"][data-parent=\"' + this.options.parent + '\"]')\n      .each($.proxy(function (i, element) {\n        var $element = $(element)\n        this.addAriaAndCollapsedClass(getTargetFromTrigger($element), $element)\n      }, this))\n      .end()\n  }\n\n  Collapse.prototype.addAriaAndCollapsedClass = function ($element, $trigger) {\n    var isOpen = $element.hasClass('in')\n\n    $element.attr('aria-expanded', isOpen)\n    $trigger\n      .toggleClass('collapsed', !isOpen)\n      .attr('aria-expanded', isOpen)\n  }\n\n  function getTargetFromTrigger($trigger) {\n    var href\n    var target = $trigger.attr('data-target')\n      || (href = $trigger.attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, '') // strip for ie7\n\n    return $(target)\n  }\n\n\n  // COLLAPSE PLUGIN DEFINITION\n  // ==========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.collapse')\n      var options = $.extend({}, Collapse.DEFAULTS, $this.data(), typeof option == 'object' && option)\n\n      if (!data && options.toggle && /show|hide/.test(option)) options.toggle = false\n      if (!data) $this.data('bs.collapse', (data = new Collapse(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.collapse\n\n  $.fn.collapse             = Plugin\n  $.fn.collapse.Constructor = Collapse\n\n\n  // COLLAPSE NO CONFLICT\n  // ====================\n\n  $.fn.collapse.noConflict = function () {\n    $.fn.collapse = old\n    return this\n  }\n\n\n  // COLLAPSE DATA-API\n  // =================\n\n  $(document).on('click.bs.collapse.data-api', '[data-toggle=\"collapse\"]', function (e) {\n    var $this   = $(this)\n\n    if (!$this.attr('data-target')) e.preventDefault()\n\n    var $target = getTargetFromTrigger($this)\n    var data    = $target.data('bs.collapse')\n    var option  = data ? 'toggle' : $this.data()\n\n    Plugin.call($target, option)\n  })\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: dropdown.js v3.3.7\n * http://getbootstrap.com/javascript/#dropdowns\n * ========================================================================\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // DROPDOWN CLASS DEFINITION\n  // =========================\n\n  var backdrop = '.dropdown-backdrop'\n  var toggle   = '[data-toggle=\"dropdown\"]'\n  var Dropdown = function (element) {\n    $(element).on('click.bs.dropdown', this.toggle)\n  }\n\n  Dropdown.VERSION = '3.3.7'\n\n  function getParent($this) {\n    var selector = $this.attr('data-target')\n\n    if (!selector) {\n      selector = $this.attr('href')\n      selector = selector && /#[A-Za-z]/.test(selector) && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\n    }\n\n    var $parent = selector && $(selector)\n\n    return $parent && $parent.length ? $parent : $this.parent()\n  }\n\n  function clearMenus(e) {\n    if (e && e.which === 3) return\n    $(backdrop).remove()\n    $(toggle).each(function () {\n      var $this         = $(this)\n      var $parent       = getParent($this)\n      var relatedTarget = { relatedTarget: this }\n\n      if (!$parent.hasClass('open')) return\n\n      if (e && e.type == 'click' && /input|textarea/i.test(e.target.tagName) && $.contains($parent[0], e.target)) return\n\n      $parent.trigger(e = $.Event('hide.bs.dropdown', relatedTarget))\n\n      if (e.isDefaultPrevented()) return\n\n      $this.attr('aria-expanded', 'false')\n      $parent.removeClass('open').trigger($.Event('hidden.bs.dropdown', relatedTarget))\n    })\n  }\n\n  Dropdown.prototype.toggle = function (e) {\n    var $this = $(this)\n\n    if ($this.is('.disabled, :disabled')) return\n\n    var $parent  = getParent($this)\n    var isActive = $parent.hasClass('open')\n\n    clearMenus()\n\n    if (!isActive) {\n      if ('ontouchstart' in document.documentElement && !$parent.closest('.navbar-nav').length) {\n        // if mobile we use a backdrop because click events don't delegate\n        $(document.createElement('div'))\n          .addClass('dropdown-backdrop')\n          .insertAfter($(this))\n          .on('click', clearMenus)\n      }\n\n      var relatedTarget = { relatedTarget: this }\n      $parent.trigger(e = $.Event('show.bs.dropdown', relatedTarget))\n\n      if (e.isDefaultPrevented()) return\n\n      $this\n        .trigger('focus')\n        .attr('aria-expanded', 'true')\n\n      $parent\n        .toggleClass('open')\n        .trigger($.Event('shown.bs.dropdown', relatedTarget))\n    }\n\n    return false\n  }\n\n  Dropdown.prototype.keydown = function (e) {\n    if (!/(38|40|27|32)/.test(e.which) || /input|textarea/i.test(e.target.tagName)) return\n\n    var $this = $(this)\n\n    e.preventDefault()\n    e.stopPropagation()\n\n    if ($this.is('.disabled, :disabled')) return\n\n    var $parent  = getParent($this)\n    var isActive = $parent.hasClass('open')\n\n    if (!isActive && e.which != 27 || isActive && e.which == 27) {\n      if (e.which == 27) $parent.find(toggle).trigger('focus')\n      return $this.trigger('click')\n    }\n\n    var desc = ' li:not(.disabled):visible a'\n    var $items = $parent.find('.dropdown-menu' + desc)\n\n    if (!$items.length) return\n\n    var index = $items.index(e.target)\n\n    if (e.which == 38 && index > 0)                 index--         // up\n    if (e.which == 40 && index < $items.length - 1) index++         // down\n    if (!~index)                                    index = 0\n\n    $items.eq(index).trigger('focus')\n  }\n\n\n  // DROPDOWN PLUGIN DEFINITION\n  // ==========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this)\n      var data  = $this.data('bs.dropdown')\n\n      if (!data) $this.data('bs.dropdown', (data = new Dropdown(this)))\n      if (typeof option == 'string') data[option].call($this)\n    })\n  }\n\n  var old = $.fn.dropdown\n\n  $.fn.dropdown             = Plugin\n  $.fn.dropdown.Constructor = Dropdown\n\n\n  // DROPDOWN NO CONFLICT\n  // ====================\n\n  $.fn.dropdown.noConflict = function () {\n    $.fn.dropdown = old\n    return this\n  }\n\n\n  // APPLY TO STANDARD DROPDOWN ELEMENTS\n  // ===================================\n\n  $(document)\n    .on('click.bs.dropdown.data-api', clearMenus)\n    .on('click.bs.dropdown.data-api', '.dropdown form', function (e) { e.stopPropagation() })\n    .on('click.bs.dropdown.data-api', toggle, Dropdown.prototype.toggle)\n    .on('keydown.bs.dropdown.data-api', toggle, Dropdown.prototype.keydown)\n    .on('keydown.bs.dropdown.data-api', '.dropdown-menu', Dropdown.prototype.keydown)\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: modal.js v3.3.7\n * http://getbootstrap.com/javascript/#modals\n * ========================================================================\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // MODAL CLASS DEFINITION\n  // ======================\n\n  var Modal = function (element, options) {\n    this.options             = options\n    this.$body               = $(document.body)\n    this.$element            = $(element)\n    this.$dialog             = this.$element.find('.modal-dialog')\n    this.$backdrop           = null\n    this.isShown             = null\n    this.originalBodyPad     = null\n    this.scrollbarWidth      = 0\n    this.ignoreBackdropClick = false\n\n    if (this.options.remote) {\n      this.$element\n        .find('.modal-content')\n        .load(this.options.remote, $.proxy(function () {\n          this.$element.trigger('loaded.bs.modal')\n        }, this))\n    }\n  }\n\n  Modal.VERSION  = '3.3.7'\n\n  Modal.TRANSITION_DURATION = 300\n  Modal.BACKDROP_TRANSITION_DURATION = 150\n\n  Modal.DEFAULTS = {\n    backdrop: true,\n    keyboard: true,\n    show: true\n  }\n\n  Modal.prototype.toggle = function (_relatedTarget) {\n    return this.isShown ? this.hide() : this.show(_relatedTarget)\n  }\n\n  Modal.prototype.show = function (_relatedTarget) {\n    var that = this\n    var e    = $.Event('show.bs.modal', { relatedTarget: _relatedTarget })\n\n    this.$element.trigger(e)\n\n    if (this.isShown || e.isDefaultPrevented()) return\n\n    this.isShown = true\n\n    this.checkScrollbar()\n    this.setScrollbar()\n    this.$body.addClass('modal-open')\n\n    this.escape()\n    this.resize()\n\n    this.$element.on('click.dismiss.bs.modal', '[data-dismiss=\"modal\"]', $.proxy(this.hide, this))\n\n    this.$dialog.on('mousedown.dismiss.bs.modal', function () {\n      that.$element.one('mouseup.dismiss.bs.modal', function (e) {\n        if ($(e.target).is(that.$element)) that.ignoreBackdropClick = true\n      })\n    })\n\n    this.backdrop(function () {\n      var transition = $.support.transition && that.$element.hasClass('fade')\n\n      if (!that.$element.parent().length) {\n        that.$element.appendTo(that.$body) // don't move modals dom position\n      }\n\n      that.$element\n        .show()\n        .scrollTop(0)\n\n      that.adjustDialog()\n\n      if (transition) {\n        that.$element[0].offsetWidth // force reflow\n      }\n\n      that.$element.addClass('in')\n\n      that.enforceFocus()\n\n      var e = $.Event('shown.bs.modal', { relatedTarget: _relatedTarget })\n\n      transition ?\n        that.$dialog // wait for modal to slide in\n          .one('bsTransitionEnd', function () {\n            that.$element.trigger('focus').trigger(e)\n          })\n          .emulateTransitionEnd(Modal.TRANSITION_DURATION) :\n        that.$element.trigger('focus').trigger(e)\n    })\n  }\n\n  Modal.prototype.hide = function (e) {\n    if (e) e.preventDefault()\n\n    e = $.Event('hide.bs.modal')\n\n    this.$element.trigger(e)\n\n    if (!this.isShown || e.isDefaultPrevented()) return\n\n    this.isShown = false\n\n    this.escape()\n    this.resize()\n\n    $(document).off('focusin.bs.modal')\n\n    this.$element\n      .removeClass('in')\n      .off('click.dismiss.bs.modal')\n      .off('mouseup.dismiss.bs.modal')\n\n    this.$dialog.off('mousedown.dismiss.bs.modal')\n\n    $.support.transition && this.$element.hasClass('fade') ?\n      this.$element\n        .one('bsTransitionEnd', $.proxy(this.hideModal, this))\n        .emulateTransitionEnd(Modal.TRANSITION_DURATION) :\n      this.hideModal()\n  }\n\n  Modal.prototype.enforceFocus = function () {\n    $(document)\n      .off('focusin.bs.modal') // guard against infinite focus loop\n      .on('focusin.bs.modal', $.proxy(function (e) {\n        if (document !== e.target &&\n            this.$element[0] !== e.target &&\n            !this.$element.has(e.target).length) {\n          this.$element.trigger('focus')\n        }\n      }, this))\n  }\n\n  Modal.prototype.escape = function () {\n    if (this.isShown && this.options.keyboard) {\n      this.$element.on('keydown.dismiss.bs.modal', $.proxy(function (e) {\n        e.which == 27 && this.hide()\n      }, this))\n    } else if (!this.isShown) {\n      this.$element.off('keydown.dismiss.bs.modal')\n    }\n  }\n\n  Modal.prototype.resize = function () {\n    if (this.isShown) {\n      $(window).on('resize.bs.modal', $.proxy(this.handleUpdate, this))\n    } else {\n      $(window).off('resize.bs.modal')\n    }\n  }\n\n  Modal.prototype.hideModal = function () {\n    var that = this\n    this.$element.hide()\n    this.backdrop(function () {\n      that.$body.removeClass('modal-open')\n      that.resetAdjustments()\n      that.resetScrollbar()\n      that.$element.trigger('hidden.bs.modal')\n    })\n  }\n\n  Modal.prototype.removeBackdrop = function () {\n    this.$backdrop && this.$backdrop.remove()\n    this.$backdrop = null\n  }\n\n  Modal.prototype.backdrop = function (callback) {\n    var that = this\n    var animate = this.$element.hasClass('fade') ? 'fade' : ''\n\n    if (this.isShown && this.options.backdrop) {\n      var doAnimate = $.support.transition && animate\n\n      this.$backdrop = $(document.createElement('div'))\n        .addClass('modal-backdrop ' + animate)\n        .appendTo(this.$body)\n\n      this.$element.on('click.dismiss.bs.modal', $.proxy(function (e) {\n        if (this.ignoreBackdropClick) {\n          this.ignoreBackdropClick = false\n          return\n        }\n        if (e.target !== e.currentTarget) return\n        this.options.backdrop == 'static'\n          ? this.$element[0].focus()\n          : this.hide()\n      }, this))\n\n      if (doAnimate) this.$backdrop[0].offsetWidth // force reflow\n\n      this.$backdrop.addClass('in')\n\n      if (!callback) return\n\n      doAnimate ?\n        this.$backdrop\n          .one('bsTransitionEnd', callback)\n          .emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) :\n        callback()\n\n    } else if (!this.isShown && this.$backdrop) {\n      this.$backdrop.removeClass('in')\n\n      var callbackRemove = function () {\n        that.removeBackdrop()\n        callback && callback()\n      }\n      $.support.transition && this.$element.hasClass('fade') ?\n        this.$backdrop\n          .one('bsTransitionEnd', callbackRemove)\n          .emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) :\n        callbackRemove()\n\n    } else if (callback) {\n      callback()\n    }\n  }\n\n  // these following methods are used to handle overflowing modals\n\n  Modal.prototype.handleUpdate = function () {\n    this.adjustDialog()\n  }\n\n  Modal.prototype.adjustDialog = function () {\n    var modalIsOverflowing = this.$element[0].scrollHeight > document.documentElement.clientHeight\n\n    this.$element.css({\n      paddingLeft:  !this.bodyIsOverflowing && modalIsOverflowing ? this.scrollbarWidth : '',\n      paddingRight: this.bodyIsOverflowing && !modalIsOverflowing ? this.scrollbarWidth : ''\n    })\n  }\n\n  Modal.prototype.resetAdjustments = function () {\n    this.$element.css({\n      paddingLeft: '',\n      paddingRight: ''\n    })\n  }\n\n  Modal.prototype.checkScrollbar = function () {\n    var fullWindowWidth = window.innerWidth\n    if (!fullWindowWidth) { // workaround for missing window.innerWidth in IE8\n      var documentElementRect = document.documentElement.getBoundingClientRect()\n      fullWindowWidth = documentElementRect.right - Math.abs(documentElementRect.left)\n    }\n    this.bodyIsOverflowing = document.body.clientWidth < fullWindowWidth\n    this.scrollbarWidth = this.measureScrollbar()\n  }\n\n  Modal.prototype.setScrollbar = function () {\n    var bodyPad = parseInt((this.$body.css('padding-right') || 0), 10)\n    this.originalBodyPad = document.body.style.paddingRight || ''\n    if (this.bodyIsOverflowing) this.$body.css('padding-right', bodyPad + this.scrollbarWidth)\n  }\n\n  Modal.prototype.resetScrollbar = function () {\n    this.$body.css('padding-right', this.originalBodyPad)\n  }\n\n  Modal.prototype.measureScrollbar = function () { // thx walsh\n    var scrollDiv = document.createElement('div')\n    scrollDiv.className = 'modal-scrollbar-measure'\n    this.$body.append(scrollDiv)\n    var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth\n    this.$body[0].removeChild(scrollDiv)\n    return scrollbarWidth\n  }\n\n\n  // MODAL PLUGIN DEFINITION\n  // =======================\n\n  function Plugin(option, _relatedTarget) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.modal')\n      var options = $.extend({}, Modal.DEFAULTS, $this.data(), typeof option == 'object' && option)\n\n      if (!data) $this.data('bs.modal', (data = new Modal(this, options)))\n      if (typeof option == 'string') data[option](_relatedTarget)\n      else if (options.show) data.show(_relatedTarget)\n    })\n  }\n\n  var old = $.fn.modal\n\n  $.fn.modal             = Plugin\n  $.fn.modal.Constructor = Modal\n\n\n  // MODAL NO CONFLICT\n  // =================\n\n  $.fn.modal.noConflict = function () {\n    $.fn.modal = old\n    return this\n  }\n\n\n  // MODAL DATA-API\n  // ==============\n\n  $(document).on('click.bs.modal.data-api', '[data-toggle=\"modal\"]', function (e) {\n    var $this   = $(this)\n    var href    = $this.attr('href')\n    var $target = $($this.attr('data-target') || (href && href.replace(/.*(?=#[^\\s]+$)/, ''))) // strip for ie7\n    var option  = $target.data('bs.modal') ? 'toggle' : $.extend({ remote: !/#/.test(href) && href }, $target.data(), $this.data())\n\n    if ($this.is('a')) e.preventDefault()\n\n    $target.one('show.bs.modal', function (showEvent) {\n      if (showEvent.isDefaultPrevented()) return // only register focus restorer if modal will actually get shown\n      $target.one('hidden.bs.modal', function () {\n        $this.is(':visible') && $this.trigger('focus')\n      })\n    })\n    Plugin.call($target, option, this)\n  })\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: tooltip.js v3.3.7\n * http://getbootstrap.com/javascript/#tooltip\n * Inspired by the original jQuery.tipsy by Jason Frame\n * ========================================================================\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // TOOLTIP PUBLIC CLASS DEFINITION\n  // ===============================\n\n  var Tooltip = function (element, options) {\n    this.type       = null\n    this.options    = null\n    this.enabled    = null\n    this.timeout    = null\n    this.hoverState = null\n    this.$element   = null\n    this.inState    = null\n\n    this.init('tooltip', element, options)\n  }\n\n  Tooltip.VERSION  = '3.3.7'\n\n  Tooltip.TRANSITION_DURATION = 150\n\n  Tooltip.DEFAULTS = {\n    animation: true,\n    placement: 'top',\n    selector: false,\n    template: '<div class=\"tooltip\" role=\"tooltip\"><div class=\"tooltip-arrow\"></div><div class=\"tooltip-inner\"></div></div>',\n    trigger: 'hover focus',\n    title: '',\n    delay: 0,\n    html: false,\n    container: false,\n    viewport: {\n      selector: 'body',\n      padding: 0\n    }\n  }\n\n  Tooltip.prototype.init = function (type, element, options) {\n    this.enabled   = true\n    this.type      = type\n    this.$element  = $(element)\n    this.options   = this.getOptions(options)\n    this.$viewport = this.options.viewport && $($.isFunction(this.options.viewport) ? this.options.viewport.call(this, this.$element) : (this.options.viewport.selector || this.options.viewport))\n    this.inState   = { click: false, hover: false, focus: false }\n\n    if (this.$element[0] instanceof document.constructor && !this.options.selector) {\n      throw new Error('`selector` option must be specified when initializing ' + this.type + ' on the window.document object!')\n    }\n\n    var triggers = this.options.trigger.split(' ')\n\n    for (var i = triggers.length; i--;) {\n      var trigger = triggers[i]\n\n      if (trigger == 'click') {\n        this.$element.on('click.' + this.type, this.options.selector, $.proxy(this.toggle, this))\n      } else if (trigger != 'manual') {\n        var eventIn  = trigger == 'hover' ? 'mouseenter' : 'focusin'\n        var eventOut = trigger == 'hover' ? 'mouseleave' : 'focusout'\n\n        this.$element.on(eventIn  + '.' + this.type, this.options.selector, $.proxy(this.enter, this))\n        this.$element.on(eventOut + '.' + this.type, this.options.selector, $.proxy(this.leave, this))\n      }\n    }\n\n    this.options.selector ?\n      (this._options = $.extend({}, this.options, { trigger: 'manual', selector: '' })) :\n      this.fixTitle()\n  }\n\n  Tooltip.prototype.getDefaults = function () {\n    return Tooltip.DEFAULTS\n  }\n\n  Tooltip.prototype.getOptions = function (options) {\n    options = $.extend({}, this.getDefaults(), this.$element.data(), options)\n\n    if (options.delay && typeof options.delay == 'number') {\n      options.delay = {\n        show: options.delay,\n        hide: options.delay\n      }\n    }\n\n    return options\n  }\n\n  Tooltip.prototype.getDelegateOptions = function () {\n    var options  = {}\n    var defaults = this.getDefaults()\n\n    this._options && $.each(this._options, function (key, value) {\n      if (defaults[key] != value) options[key] = value\n    })\n\n    return options\n  }\n\n  Tooltip.prototype.enter = function (obj) {\n    var self = obj instanceof this.constructor ?\n      obj : $(obj.currentTarget).data('bs.' + this.type)\n\n    if (!self) {\n      self = new this.constructor(obj.currentTarget, this.getDelegateOptions())\n      $(obj.currentTarget).data('bs.' + this.type, self)\n    }\n\n    if (obj instanceof $.Event) {\n      self.inState[obj.type == 'focusin' ? 'focus' : 'hover'] = true\n    }\n\n    if (self.tip().hasClass('in') || self.hoverState == 'in') {\n      self.hoverState = 'in'\n      return\n    }\n\n    clearTimeout(self.timeout)\n\n    self.hoverState = 'in'\n\n    if (!self.options.delay || !self.options.delay.show) return self.show()\n\n    self.timeout = setTimeout(function () {\n      if (self.hoverState == 'in') self.show()\n    }, self.options.delay.show)\n  }\n\n  Tooltip.prototype.isInStateTrue = function () {\n    for (var key in this.inState) {\n      if (this.inState[key]) return true\n    }\n\n    return false\n  }\n\n  Tooltip.prototype.leave = function (obj) {\n    var self = obj instanceof this.constructor ?\n      obj : $(obj.currentTarget).data('bs.' + this.type)\n\n    if (!self) {\n      self = new this.constructor(obj.currentTarget, this.getDelegateOptions())\n      $(obj.currentTarget).data('bs.' + this.type, self)\n    }\n\n    if (obj instanceof $.Event) {\n      self.inState[obj.type == 'focusout' ? 'focus' : 'hover'] = false\n    }\n\n    if (self.isInStateTrue()) return\n\n    clearTimeout(self.timeout)\n\n    self.hoverState = 'out'\n\n    if (!self.options.delay || !self.options.delay.hide) return self.hide()\n\n    self.timeout = setTimeout(function () {\n      if (self.hoverState == 'out') self.hide()\n    }, self.options.delay.hide)\n  }\n\n  Tooltip.prototype.show = function () {\n    var e = $.Event('show.bs.' + this.type)\n\n    if (this.hasContent() && this.enabled) {\n      this.$element.trigger(e)\n\n      var inDom = $.contains(this.$element[0].ownerDocument.documentElement, this.$element[0])\n      if (e.isDefaultPrevented() || !inDom) return\n      var that = this\n\n      var $tip = this.tip()\n\n      var tipId = this.getUID(this.type)\n\n      this.setContent()\n      $tip.attr('id', tipId)\n      this.$element.attr('aria-describedby', tipId)\n\n      if (this.options.animation) $tip.addClass('fade')\n\n      var placement = typeof this.options.placement == 'function' ?\n        this.options.placement.call(this, $tip[0], this.$element[0]) :\n        this.options.placement\n\n      var autoToken = /\\s?auto?\\s?/i\n      var autoPlace = autoToken.test(placement)\n      if (autoPlace) placement = placement.replace(autoToken, '') || 'top'\n\n      $tip\n        .detach()\n        .css({ top: 0, left: 0, display: 'block' })\n        .addClass(placement)\n        .data('bs.' + this.type, this)\n\n      this.options.container ? $tip.appendTo(this.options.container) : $tip.insertAfter(this.$element)\n      this.$element.trigger('inserted.bs.' + this.type)\n\n      var pos          = this.getPosition()\n      var actualWidth  = $tip[0].offsetWidth\n      var actualHeight = $tip[0].offsetHeight\n\n      if (autoPlace) {\n        var orgPlacement = placement\n        var viewportDim = this.getPosition(this.$viewport)\n\n        placement = placement == 'bottom' && pos.bottom + actualHeight > viewportDim.bottom ? 'top'    :\n                    placement == 'top'    && pos.top    - actualHeight < viewportDim.top    ? 'bottom' :\n                    placement == 'right'  && pos.right  + actualWidth  > viewportDim.width  ? 'left'   :\n                    placement == 'left'   && pos.left   - actualWidth  < viewportDim.left   ? 'right'  :\n                    placement\n\n        $tip\n          .removeClass(orgPlacement)\n          .addClass(placement)\n      }\n\n      var calculatedOffset = this.getCalculatedOffset(placement, pos, actualWidth, actualHeight)\n\n      this.applyPlacement(calculatedOffset, placement)\n\n      var complete = function () {\n        var prevHoverState = that.hoverState\n        that.$element.trigger('shown.bs.' + that.type)\n        that.hoverState = null\n\n        if (prevHoverState == 'out') that.leave(that)\n      }\n\n      $.support.transition && this.$tip.hasClass('fade') ?\n        $tip\n          .one('bsTransitionEnd', complete)\n          .emulateTransitionEnd(Tooltip.TRANSITION_DURATION) :\n        complete()\n    }\n  }\n\n  Tooltip.prototype.applyPlacement = function (offset, placement) {\n    var $tip   = this.tip()\n    var width  = $tip[0].offsetWidth\n    var height = $tip[0].offsetHeight\n\n    // manually read margins because getBoundingClientRect includes difference\n    var marginTop = parseInt($tip.css('margin-top'), 10)\n    var marginLeft = parseInt($tip.css('margin-left'), 10)\n\n    // we must check for NaN for ie 8/9\n    if (isNaN(marginTop))  marginTop  = 0\n    if (isNaN(marginLeft)) marginLeft = 0\n\n    offset.top  += marginTop\n    offset.left += marginLeft\n\n    // $.fn.offset doesn't round pixel values\n    // so we use setOffset directly with our own function B-0\n    $.offset.setOffset($tip[0], $.extend({\n      using: function (props) {\n        $tip.css({\n          top: Math.round(props.top),\n          left: Math.round(props.left)\n        })\n      }\n    }, offset), 0)\n\n    $tip.addClass('in')\n\n    // check to see if placing tip in new offset caused the tip to resize itself\n    var actualWidth  = $tip[0].offsetWidth\n    var actualHeight = $tip[0].offsetHeight\n\n    if (placement == 'top' && actualHeight != height) {\n      offset.top = offset.top + height - actualHeight\n    }\n\n    var delta = this.getViewportAdjustedDelta(placement, offset, actualWidth, actualHeight)\n\n    if (delta.left) offset.left += delta.left\n    else offset.top += delta.top\n\n    var isVertical          = /top|bottom/.test(placement)\n    var arrowDelta          = isVertical ? delta.left * 2 - width + actualWidth : delta.top * 2 - height + actualHeight\n    var arrowOffsetPosition = isVertical ? 'offsetWidth' : 'offsetHeight'\n\n    $tip.offset(offset)\n    this.replaceArrow(arrowDelta, $tip[0][arrowOffsetPosition], isVertical)\n  }\n\n  Tooltip.prototype.replaceArrow = function (delta, dimension, isVertical) {\n    this.arrow()\n      .css(isVertical ? 'left' : 'top', 50 * (1 - delta / dimension) + '%')\n      .css(isVertical ? 'top' : 'left', '')\n  }\n\n  Tooltip.prototype.setContent = function () {\n    var $tip  = this.tip()\n    var title = this.getTitle()\n\n    $tip.find('.tooltip-inner')[this.options.html ? 'html' : 'text'](title)\n    $tip.removeClass('fade in top bottom left right')\n  }\n\n  Tooltip.prototype.hide = function (callback) {\n    var that = this\n    var $tip = $(this.$tip)\n    var e    = $.Event('hide.bs.' + this.type)\n\n    function complete() {\n      if (that.hoverState != 'in') $tip.detach()\n      if (that.$element) { // TODO: Check whether guarding this code with this `if` is really necessary.\n        that.$element\n          .removeAttr('aria-describedby')\n          .trigger('hidden.bs.' + that.type)\n      }\n      callback && callback()\n    }\n\n    this.$element.trigger(e)\n\n    if (e.isDefaultPrevented()) return\n\n    $tip.removeClass('in')\n\n    $.support.transition && $tip.hasClass('fade') ?\n      $tip\n        .one('bsTransitionEnd', complete)\n        .emulateTransitionEnd(Tooltip.TRANSITION_DURATION) :\n      complete()\n\n    this.hoverState = null\n\n    return this\n  }\n\n  Tooltip.prototype.fixTitle = function () {\n    var $e = this.$element\n    if ($e.attr('title') || typeof $e.attr('data-original-title') != 'string') {\n      $e.attr('data-original-title', $e.attr('title') || '').attr('title', '')\n    }\n  }\n\n  Tooltip.prototype.hasContent = function () {\n    return this.getTitle()\n  }\n\n  Tooltip.prototype.getPosition = function ($element) {\n    $element   = $element || this.$element\n\n    var el     = $element[0]\n    var isBody = el.tagName == 'BODY'\n\n    var elRect    = el.getBoundingClientRect()\n    if (elRect.width == null) {\n      // width and height are missing in IE8, so compute them manually; see https://github.com/twbs/bootstrap/issues/14093\n      elRect = $.extend({}, elRect, { width: elRect.right - elRect.left, height: elRect.bottom - elRect.top })\n    }\n    var isSvg = window.SVGElement && el instanceof window.SVGElement\n    // Avoid using $.offset() on SVGs since it gives incorrect results in jQuery 3.\n    // See https://github.com/twbs/bootstrap/issues/20280\n    var elOffset  = isBody ? { top: 0, left: 0 } : (isSvg ? null : $element.offset())\n    var scroll    = { scroll: isBody ? document.documentElement.scrollTop || document.body.scrollTop : $element.scrollTop() }\n    var outerDims = isBody ? { width: $(window).width(), height: $(window).height() } : null\n\n    return $.extend({}, elRect, scroll, outerDims, elOffset)\n  }\n\n  Tooltip.prototype.getCalculatedOffset = function (placement, pos, actualWidth, actualHeight) {\n    return placement == 'bottom' ? { top: pos.top + pos.height,   left: pos.left + pos.width / 2 - actualWidth / 2 } :\n           placement == 'top'    ? { top: pos.top - actualHeight, left: pos.left + pos.width / 2 - actualWidth / 2 } :\n           placement == 'left'   ? { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left - actualWidth } :\n        /* placement == 'right' */ { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left + pos.width }\n\n  }\n\n  Tooltip.prototype.getViewportAdjustedDelta = function (placement, pos, actualWidth, actualHeight) {\n    var delta = { top: 0, left: 0 }\n    if (!this.$viewport) return delta\n\n    var viewportPadding = this.options.viewport && this.options.viewport.padding || 0\n    var viewportDimensions = this.getPosition(this.$viewport)\n\n    if (/right|left/.test(placement)) {\n      var topEdgeOffset    = pos.top - viewportPadding - viewportDimensions.scroll\n      var bottomEdgeOffset = pos.top + viewportPadding - viewportDimensions.scroll + actualHeight\n      if (topEdgeOffset < viewportDimensions.top) { // top overflow\n        delta.top = viewportDimensions.top - topEdgeOffset\n      } else if (bottomEdgeOffset > viewportDimensions.top + viewportDimensions.height) { // bottom overflow\n        delta.top = viewportDimensions.top + viewportDimensions.height - bottomEdgeOffset\n      }\n    } else {\n      var leftEdgeOffset  = pos.left - viewportPadding\n      var rightEdgeOffset = pos.left + viewportPadding + actualWidth\n      if (leftEdgeOffset < viewportDimensions.left) { // left overflow\n        delta.left = viewportDimensions.left - leftEdgeOffset\n      } else if (rightEdgeOffset > viewportDimensions.right) { // right overflow\n        delta.left = viewportDimensions.left + viewportDimensions.width - rightEdgeOffset\n      }\n    }\n\n    return delta\n  }\n\n  Tooltip.prototype.getTitle = function () {\n    var title\n    var $e = this.$element\n    var o  = this.options\n\n    title = $e.attr('data-original-title')\n      || (typeof o.title == 'function' ? o.title.call($e[0]) :  o.title)\n\n    return title\n  }\n\n  Tooltip.prototype.getUID = function (prefix) {\n    do prefix += ~~(Math.random() * 1000000)\n    while (document.getElementById(prefix))\n    return prefix\n  }\n\n  Tooltip.prototype.tip = function () {\n    if (!this.$tip) {\n      this.$tip = $(this.options.template)\n      if (this.$tip.length != 1) {\n        throw new Error(this.type + ' `template` option must consist of exactly 1 top-level element!')\n      }\n    }\n    return this.$tip\n  }\n\n  Tooltip.prototype.arrow = function () {\n    return (this.$arrow = this.$arrow || this.tip().find('.tooltip-arrow'))\n  }\n\n  Tooltip.prototype.enable = function () {\n    this.enabled = true\n  }\n\n  Tooltip.prototype.disable = function () {\n    this.enabled = false\n  }\n\n  Tooltip.prototype.toggleEnabled = function () {\n    this.enabled = !this.enabled\n  }\n\n  Tooltip.prototype.toggle = function (e) {\n    var self = this\n    if (e) {\n      self = $(e.currentTarget).data('bs.' + this.type)\n      if (!self) {\n        self = new this.constructor(e.currentTarget, this.getDelegateOptions())\n        $(e.currentTarget).data('bs.' + this.type, self)\n      }\n    }\n\n    if (e) {\n      self.inState.click = !self.inState.click\n      if (self.isInStateTrue()) self.enter(self)\n      else self.leave(self)\n    } else {\n      self.tip().hasClass('in') ? self.leave(self) : self.enter(self)\n    }\n  }\n\n  Tooltip.prototype.destroy = function () {\n    var that = this\n    clearTimeout(this.timeout)\n    this.hide(function () {\n      that.$element.off('.' + that.type).removeData('bs.' + that.type)\n      if (that.$tip) {\n        that.$tip.detach()\n      }\n      that.$tip = null\n      that.$arrow = null\n      that.$viewport = null\n      that.$element = null\n    })\n  }\n\n\n  // TOOLTIP PLUGIN DEFINITION\n  // =========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.tooltip')\n      var options = typeof option == 'object' && option\n\n      if (!data && /destroy|hide/.test(option)) return\n      if (!data) $this.data('bs.tooltip', (data = new Tooltip(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.tooltip\n\n  $.fn.tooltip             = Plugin\n  $.fn.tooltip.Constructor = Tooltip\n\n\n  // TOOLTIP NO CONFLICT\n  // ===================\n\n  $.fn.tooltip.noConflict = function () {\n    $.fn.tooltip = old\n    return this\n  }\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: popover.js v3.3.7\n * http://getbootstrap.com/javascript/#popovers\n * ========================================================================\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // POPOVER PUBLIC CLASS DEFINITION\n  // ===============================\n\n  var Popover = function (element, options) {\n    this.init('popover', element, options)\n  }\n\n  if (!$.fn.tooltip) throw new Error('Popover requires tooltip.js')\n\n  Popover.VERSION  = '3.3.7'\n\n  Popover.DEFAULTS = $.extend({}, $.fn.tooltip.Constructor.DEFAULTS, {\n    placement: 'right',\n    trigger: 'click',\n    content: '',\n    template: '<div class=\"popover\" role=\"tooltip\"><div class=\"arrow\"></div><h3 class=\"popover-title\"></h3><div class=\"popover-content\"></div></div>'\n  })\n\n\n  // NOTE: POPOVER EXTENDS tooltip.js\n  // ================================\n\n  Popover.prototype = $.extend({}, $.fn.tooltip.Constructor.prototype)\n\n  Popover.prototype.constructor = Popover\n\n  Popover.prototype.getDefaults = function () {\n    return Popover.DEFAULTS\n  }\n\n  Popover.prototype.setContent = function () {\n    var $tip    = this.tip()\n    var title   = this.getTitle()\n    var content = this.getContent()\n\n    $tip.find('.popover-title')[this.options.html ? 'html' : 'text'](title)\n    $tip.find('.popover-content').children().detach().end()[ // we use append for html objects to maintain js events\n      this.options.html ? (typeof content == 'string' ? 'html' : 'append') : 'text'\n    ](content)\n\n    $tip.removeClass('fade top bottom left right in')\n\n    // IE8 doesn't accept hiding via the `:empty` pseudo selector, we have to do\n    // this manually by checking the contents.\n    if (!$tip.find('.popover-title').html()) $tip.find('.popover-title').hide()\n  }\n\n  Popover.prototype.hasContent = function () {\n    return this.getTitle() || this.getContent()\n  }\n\n  Popover.prototype.getContent = function () {\n    var $e = this.$element\n    var o  = this.options\n\n    return $e.attr('data-content')\n      || (typeof o.content == 'function' ?\n            o.content.call($e[0]) :\n            o.content)\n  }\n\n  Popover.prototype.arrow = function () {\n    return (this.$arrow = this.$arrow || this.tip().find('.arrow'))\n  }\n\n\n  // POPOVER PLUGIN DEFINITION\n  // =========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.popover')\n      var options = typeof option == 'object' && option\n\n      if (!data && /destroy|hide/.test(option)) return\n      if (!data) $this.data('bs.popover', (data = new Popover(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.popover\n\n  $.fn.popover             = Plugin\n  $.fn.popover.Constructor = Popover\n\n\n  // POPOVER NO CONFLICT\n  // ===================\n\n  $.fn.popover.noConflict = function () {\n    $.fn.popover = old\n    return this\n  }\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: scrollspy.js v3.3.7\n * http://getbootstrap.com/javascript/#scrollspy\n * ========================================================================\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // SCROLLSPY CLASS DEFINITION\n  // ==========================\n\n  function ScrollSpy(element, options) {\n    this.$body          = $(document.body)\n    this.$scrollElement = $(element).is(document.body) ? $(window) : $(element)\n    this.options        = $.extend({}, ScrollSpy.DEFAULTS, options)\n    this.selector       = (this.options.target || '') + ' .nav li > a'\n    this.offsets        = []\n    this.targets        = []\n    this.activeTarget   = null\n    this.scrollHeight   = 0\n\n    this.$scrollElement.on('scroll.bs.scrollspy', $.proxy(this.process, this))\n    this.refresh()\n    this.process()\n  }\n\n  ScrollSpy.VERSION  = '3.3.7'\n\n  ScrollSpy.DEFAULTS = {\n    offset: 10\n  }\n\n  ScrollSpy.prototype.getScrollHeight = function () {\n    return this.$scrollElement[0].scrollHeight || Math.max(this.$body[0].scrollHeight, document.documentElement.scrollHeight)\n  }\n\n  ScrollSpy.prototype.refresh = function () {\n    var that          = this\n    var offsetMethod  = 'offset'\n    var offsetBase    = 0\n\n    this.offsets      = []\n    this.targets      = []\n    this.scrollHeight = this.getScrollHeight()\n\n    if (!$.isWindow(this.$scrollElement[0])) {\n      offsetMethod = 'position'\n      offsetBase   = this.$scrollElement.scrollTop()\n    }\n\n    this.$body\n      .find(this.selector)\n      .map(function () {\n        var $el   = $(this)\n        var href  = $el.data('target') || $el.attr('href')\n        var $href = /^#./.test(href) && $(href)\n\n        return ($href\n          && $href.length\n          && $href.is(':visible')\n          && [[$href[offsetMethod]().top + offsetBase, href]]) || null\n      })\n      .sort(function (a, b) { return a[0] - b[0] })\n      .each(function () {\n        that.offsets.push(this[0])\n        that.targets.push(this[1])\n      })\n  }\n\n  ScrollSpy.prototype.process = function () {\n    var scrollTop    = this.$scrollElement.scrollTop() + this.options.offset\n    var scrollHeight = this.getScrollHeight()\n    var maxScroll    = this.options.offset + scrollHeight - this.$scrollElement.height()\n    var offsets      = this.offsets\n    var targets      = this.targets\n    var activeTarget = this.activeTarget\n    var i\n\n    if (this.scrollHeight != scrollHeight) {\n      this.refresh()\n    }\n\n    if (scrollTop >= maxScroll) {\n      return activeTarget != (i = targets[targets.length - 1]) && this.activate(i)\n    }\n\n    if (activeTarget && scrollTop < offsets[0]) {\n      this.activeTarget = null\n      return this.clear()\n    }\n\n    for (i = offsets.length; i--;) {\n      activeTarget != targets[i]\n        && scrollTop >= offsets[i]\n        && (offsets[i + 1] === undefined || scrollTop < offsets[i + 1])\n        && this.activate(targets[i])\n    }\n  }\n\n  ScrollSpy.prototype.activate = function (target) {\n    this.activeTarget = target\n\n    this.clear()\n\n    var selector = this.selector +\n      '[data-target=\"' + target + '\"],' +\n      this.selector + '[href=\"' + target + '\"]'\n\n    var active = $(selector)\n      .parents('li')\n      .addClass('active')\n\n    if (active.parent('.dropdown-menu').length) {\n      active = active\n        .closest('li.dropdown')\n        .addClass('active')\n    }\n\n    active.trigger('activate.bs.scrollspy')\n  }\n\n  ScrollSpy.prototype.clear = function () {\n    $(this.selector)\n      .parentsUntil(this.options.target, '.active')\n      .removeClass('active')\n  }\n\n\n  // SCROLLSPY PLUGIN DEFINITION\n  // ===========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.scrollspy')\n      var options = typeof option == 'object' && option\n\n      if (!data) $this.data('bs.scrollspy', (data = new ScrollSpy(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.scrollspy\n\n  $.fn.scrollspy             = Plugin\n  $.fn.scrollspy.Constructor = ScrollSpy\n\n\n  // SCROLLSPY NO CONFLICT\n  // =====================\n\n  $.fn.scrollspy.noConflict = function () {\n    $.fn.scrollspy = old\n    return this\n  }\n\n\n  // SCROLLSPY DATA-API\n  // ==================\n\n  $(window).on('load.bs.scrollspy.data-api', function () {\n    $('[data-spy=\"scroll\"]').each(function () {\n      var $spy = $(this)\n      Plugin.call($spy, $spy.data())\n    })\n  })\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: tab.js v3.3.7\n * http://getbootstrap.com/javascript/#tabs\n * ========================================================================\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // TAB CLASS DEFINITION\n  // ====================\n\n  var Tab = function (element) {\n    // jscs:disable requireDollarBeforejQueryAssignment\n    this.element = $(element)\n    // jscs:enable requireDollarBeforejQueryAssignment\n  }\n\n  Tab.VERSION = '3.3.7'\n\n  Tab.TRANSITION_DURATION = 150\n\n  Tab.prototype.show = function () {\n    var $this    = this.element\n    var $ul      = $this.closest('ul:not(.dropdown-menu)')\n    var selector = $this.data('target')\n\n    if (!selector) {\n      selector = $this.attr('href')\n      selector = selector && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\n    }\n\n    if ($this.parent('li').hasClass('active')) return\n\n    var $previous = $ul.find('.active:last a')\n    var hideEvent = $.Event('hide.bs.tab', {\n      relatedTarget: $this[0]\n    })\n    var showEvent = $.Event('show.bs.tab', {\n      relatedTarget: $previous[0]\n    })\n\n    $previous.trigger(hideEvent)\n    $this.trigger(showEvent)\n\n    if (showEvent.isDefaultPrevented() || hideEvent.isDefaultPrevented()) return\n\n    var $target = $(selector)\n\n    this.activate($this.closest('li'), $ul)\n    this.activate($target, $target.parent(), function () {\n      $previous.trigger({\n        type: 'hidden.bs.tab',\n        relatedTarget: $this[0]\n      })\n      $this.trigger({\n        type: 'shown.bs.tab',\n        relatedTarget: $previous[0]\n      })\n    })\n  }\n\n  Tab.prototype.activate = function (element, container, callback) {\n    var $active    = container.find('> .active')\n    var transition = callback\n      && $.support.transition\n      && ($active.length && $active.hasClass('fade') || !!container.find('> .fade').length)\n\n    function next() {\n      $active\n        .removeClass('active')\n        .find('> .dropdown-menu > .active')\n          .removeClass('active')\n        .end()\n        .find('[data-toggle=\"tab\"]')\n          .attr('aria-expanded', false)\n\n      element\n        .addClass('active')\n        .find('[data-toggle=\"tab\"]')\n          .attr('aria-expanded', true)\n\n      if (transition) {\n        element[0].offsetWidth // reflow for transition\n        element.addClass('in')\n      } else {\n        element.removeClass('fade')\n      }\n\n      if (element.parent('.dropdown-menu').length) {\n        element\n          .closest('li.dropdown')\n            .addClass('active')\n          .end()\n          .find('[data-toggle=\"tab\"]')\n            .attr('aria-expanded', true)\n      }\n\n      callback && callback()\n    }\n\n    $active.length && transition ?\n      $active\n        .one('bsTransitionEnd', next)\n        .emulateTransitionEnd(Tab.TRANSITION_DURATION) :\n      next()\n\n    $active.removeClass('in')\n  }\n\n\n  // TAB PLUGIN DEFINITION\n  // =====================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this)\n      var data  = $this.data('bs.tab')\n\n      if (!data) $this.data('bs.tab', (data = new Tab(this)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.tab\n\n  $.fn.tab             = Plugin\n  $.fn.tab.Constructor = Tab\n\n\n  // TAB NO CONFLICT\n  // ===============\n\n  $.fn.tab.noConflict = function () {\n    $.fn.tab = old\n    return this\n  }\n\n\n  // TAB DATA-API\n  // ============\n\n  var clickHandler = function (e) {\n    e.preventDefault()\n    Plugin.call($(this), 'show')\n  }\n\n  $(document)\n    .on('click.bs.tab.data-api', '[data-toggle=\"tab\"]', clickHandler)\n    .on('click.bs.tab.data-api', '[data-toggle=\"pill\"]', clickHandler)\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: affix.js v3.3.7\n * http://getbootstrap.com/javascript/#affix\n * ========================================================================\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // AFFIX CLASS DEFINITION\n  // ======================\n\n  var Affix = function (element, options) {\n    this.options = $.extend({}, Affix.DEFAULTS, options)\n\n    this.$target = $(this.options.target)\n      .on('scroll.bs.affix.data-api', $.proxy(this.checkPosition, this))\n      .on('click.bs.affix.data-api',  $.proxy(this.checkPositionWithEventLoop, this))\n\n    this.$element     = $(element)\n    this.affixed      = null\n    this.unpin        = null\n    this.pinnedOffset = null\n\n    this.checkPosition()\n  }\n\n  Affix.VERSION  = '3.3.7'\n\n  Affix.RESET    = 'affix affix-top affix-bottom'\n\n  Affix.DEFAULTS = {\n    offset: 0,\n    target: window\n  }\n\n  Affix.prototype.getState = function (scrollHeight, height, offsetTop, offsetBottom) {\n    var scrollTop    = this.$target.scrollTop()\n    var position     = this.$element.offset()\n    var targetHeight = this.$target.height()\n\n    if (offsetTop != null && this.affixed == 'top') return scrollTop < offsetTop ? 'top' : false\n\n    if (this.affixed == 'bottom') {\n      if (offsetTop != null) return (scrollTop + this.unpin <= position.top) ? false : 'bottom'\n      return (scrollTop + targetHeight <= scrollHeight - offsetBottom) ? false : 'bottom'\n    }\n\n    var initializing   = this.affixed == null\n    var colliderTop    = initializing ? scrollTop : position.top\n    var colliderHeight = initializing ? targetHeight : height\n\n    if (offsetTop != null && scrollTop <= offsetTop) return 'top'\n    if (offsetBottom != null && (colliderTop + colliderHeight >= scrollHeight - offsetBottom)) return 'bottom'\n\n    return false\n  }\n\n  Affix.prototype.getPinnedOffset = function () {\n    if (this.pinnedOffset) return this.pinnedOffset\n    this.$element.removeClass(Affix.RESET).addClass('affix')\n    var scrollTop = this.$target.scrollTop()\n    var position  = this.$element.offset()\n    return (this.pinnedOffset = position.top - scrollTop)\n  }\n\n  Affix.prototype.checkPositionWithEventLoop = function () {\n    setTimeout($.proxy(this.checkPosition, this), 1)\n  }\n\n  Affix.prototype.checkPosition = function () {\n    if (!this.$element.is(':visible')) return\n\n    var height       = this.$element.height()\n    var offset       = this.options.offset\n    var offsetTop    = offset.top\n    var offsetBottom = offset.bottom\n    var scrollHeight = Math.max($(document).height(), $(document.body).height())\n\n    if (typeof offset != 'object')         offsetBottom = offsetTop = offset\n    if (typeof offsetTop == 'function')    offsetTop    = offset.top(this.$element)\n    if (typeof offsetBottom == 'function') offsetBottom = offset.bottom(this.$element)\n\n    var affix = this.getState(scrollHeight, height, offsetTop, offsetBottom)\n\n    if (this.affixed != affix) {\n      if (this.unpin != null) this.$element.css('top', '')\n\n      var affixType = 'affix' + (affix ? '-' + affix : '')\n      var e         = $.Event(affixType + '.bs.affix')\n\n      this.$element.trigger(e)\n\n      if (e.isDefaultPrevented()) return\n\n      this.affixed = affix\n      this.unpin = affix == 'bottom' ? this.getPinnedOffset() : null\n\n      this.$element\n        .removeClass(Affix.RESET)\n        .addClass(affixType)\n        .trigger(affixType.replace('affix', 'affixed') + '.bs.affix')\n    }\n\n    if (affix == 'bottom') {\n      this.$element.offset({\n        top: scrollHeight - height - offsetBottom\n      })\n    }\n  }\n\n\n  // AFFIX PLUGIN DEFINITION\n  // =======================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.affix')\n      var options = typeof option == 'object' && option\n\n      if (!data) $this.data('bs.affix', (data = new Affix(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.affix\n\n  $.fn.affix             = Plugin\n  $.fn.affix.Constructor = Affix\n\n\n  // AFFIX NO CONFLICT\n  // =================\n\n  $.fn.affix.noConflict = function () {\n    $.fn.affix = old\n    return this\n  }\n\n\n  // AFFIX DATA-API\n  // ==============\n\n  $(window).on('load', function () {\n    $('[data-spy=\"affix\"]').each(function () {\n      var $spy = $(this)\n      var data = $spy.data()\n\n      data.offset = data.offset || {}\n\n      if (data.offsetBottom != null) data.offset.bottom = data.offsetBottom\n      if (data.offsetTop    != null) data.offset.top    = data.offsetTop\n\n      Plugin.call($spy, data)\n    })\n  })\n\n}(jQuery);\n","/**\r\n * bootbox.js [v4.4.0]\r\n *\r\n * http://bootboxjs.com/license.txt\r\n */\r\n\r\n// @see https://github.com/makeusabrew/bootbox/issues/180\r\n// @see https://github.com/makeusabrew/bootbox/issues/186\r\n(function (root, factory) {\r\n\r\n  \"use strict\";\r\n  if (typeof define === \"function\" && define.amd) {\r\n    // AMD. Register as an anonymous module.\r\n    define([\"jquery\"], factory);\r\n  } else if (typeof exports === \"object\") {\r\n    // Node. Does not work with strict CommonJS, but\r\n    // only CommonJS-like environments that support module.exports,\r\n    // like Node.\r\n    module.exports = factory(require(\"jquery\"));\r\n  } else {\r\n    // Browser globals (root is window)\r\n    root.bootbox = factory(root.jQuery);\r\n  }\r\n\r\n}(this, function init($, undefined) {\r\n\r\n  \"use strict\";\r\n\r\n  // the base DOM structure needed to create a modal\r\n  var templates = {\r\n    dialog:\r\n      \"<div class='bootbox modal' tabindex='-1' role='dialog'>\" +\r\n        \"<div class='modal-dialog'>\" +\r\n          \"<div class='modal-content'>\" +\r\n            \"<div class='modal-body'><div class='bootbox-body'></div></div>\" +\r\n          \"</div>\" +\r\n        \"</div>\" +\r\n      \"</div>\",\r\n    header:\r\n      \"<div class='modal-header'>\" +\r\n        \"<h4 class='modal-title'></h4>\" +\r\n      \"</div>\",\r\n    footer:\r\n      \"<div class='modal-footer'></div>\",\r\n    closeButton:\r\n      \"<button type='button' class='bootbox-close-button close' data-dismiss='modal' aria-hidden='true'>&times;</button>\",\r\n    form:\r\n      \"<form class='bootbox-form'></form>\",\r\n    inputs: {\r\n      text:\r\n        \"<input class='bootbox-input bootbox-input-text form-control' autocomplete=off type=text />\",\r\n      textarea:\r\n        \"<textarea class='bootbox-input bootbox-input-textarea form-control'></textarea>\",\r\n      email:\r\n        \"<input class='bootbox-input bootbox-input-email form-control' autocomplete='off' type='email' />\",\r\n      select:\r\n        \"<select class='bootbox-input bootbox-input-select form-control'></select>\",\r\n      checkbox:\r\n        \"<div class='checkbox'><label><input class='bootbox-input bootbox-input-checkbox' type='checkbox' /></label></div>\",\r\n      date:\r\n        \"<input class='bootbox-input bootbox-input-date form-control' autocomplete=off type='date' />\",\r\n      time:\r\n        \"<input class='bootbox-input bootbox-input-time form-control' autocomplete=off type='time' />\",\r\n      number:\r\n        \"<input class='bootbox-input bootbox-input-number form-control' autocomplete=off type='number' />\",\r\n      password:\r\n        \"<input class='bootbox-input bootbox-input-password form-control' autocomplete='off' type='password' />\"\r\n    }\r\n  };\r\n\r\n  var defaults = {\r\n    // default language\r\n    locale: \"en\",\r\n    // show backdrop or not. Default to static so user has to interact with dialog\r\n    backdrop: \"static\",\r\n    // animate the modal in/out\r\n    animate: true,\r\n    // additional class string applied to the top level dialog\r\n    className: null,\r\n    // whether or not to include a close button\r\n    closeButton: true,\r\n    // show the dialog immediately by default\r\n    show: true,\r\n    // dialog container\r\n    container: \"body\"\r\n  };\r\n\r\n  // our public object; augmented after our private API\r\n  var exports = {};\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  function _t(key) {\r\n    var locale = locales[defaults.locale];\r\n    return locale ? locale[key] : locales.en[key];\r\n  }\r\n\r\n  function processCallback(e, dialog, callback) {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n\r\n    // by default we assume a callback will get rid of the dialog,\r\n    // although it is given the opportunity to override this\r\n\r\n    // so, if the callback can be invoked and it *explicitly returns false*\r\n    // then we'll set a flag to keep the dialog active...\r\n    var preserveDialog = $.isFunction(callback) && callback.call(dialog, e) === false;\r\n\r\n    // ... otherwise we'll bin it\r\n    if (!preserveDialog) {\r\n      dialog.modal(\"hide\");\r\n    }\r\n  }\r\n\r\n  function getKeyLength(obj) {\r\n    // @TODO defer to Object.keys(x).length if available?\r\n    var k, t = 0;\r\n    for (k in obj) {\r\n      t ++;\r\n    }\r\n    return t;\r\n  }\r\n\r\n  function each(collection, iterator) {\r\n    var index = 0;\r\n    $.each(collection, function(key, value) {\r\n      iterator(key, value, index++);\r\n    });\r\n  }\r\n\r\n  function sanitize(options) {\r\n    var buttons;\r\n    var total;\r\n\r\n    if (typeof options !== \"object\") {\r\n      throw new Error(\"Please supply an object of options\");\r\n    }\r\n\r\n    if (!options.message) {\r\n      throw new Error(\"Please specify a message\");\r\n    }\r\n\r\n    // make sure any supplied options take precedence over defaults\r\n    options = $.extend({}, defaults, options);\r\n\r\n    if (!options.buttons) {\r\n      options.buttons = {};\r\n    }\r\n\r\n    buttons = options.buttons;\r\n\r\n    total = getKeyLength(buttons);\r\n\r\n    each(buttons, function(key, button, index) {\r\n\r\n      if ($.isFunction(button)) {\r\n        // short form, assume value is our callback. Since button\r\n        // isn't an object it isn't a reference either so re-assign it\r\n        button = buttons[key] = {\r\n          callback: button\r\n        };\r\n      }\r\n\r\n      // before any further checks make sure by now button is the correct type\r\n      if ($.type(button) !== \"object\") {\r\n        throw new Error(\"button with key \" + key + \" must be an object\");\r\n      }\r\n\r\n      if (!button.label) {\r\n        // the lack of an explicit label means we'll assume the key is good enough\r\n        button.label = key;\r\n      }\r\n\r\n      if (!button.className) {\r\n        if (total <= 2 && index === total-1) {\r\n          // always add a primary to the main option in a two-button dialog\r\n          button.className = \"btn-primary\";\r\n        } else {\r\n          button.className = \"btn-default\";\r\n        }\r\n      }\r\n    });\r\n\r\n    return options;\r\n  }\r\n\r\n  /**\r\n   * map a flexible set of arguments into a single returned object\r\n   * if args.length is already one just return it, otherwise\r\n   * use the properties argument to map the unnamed args to\r\n   * object properties\r\n   * so in the latter case:\r\n   * mapArguments([\"foo\", $.noop], [\"message\", \"callback\"])\r\n   * -> { message: \"foo\", callback: $.noop }\r\n   */\r\n  function mapArguments(args, properties) {\r\n    var argn = args.length;\r\n    var options = {};\r\n\r\n    if (argn < 1 || argn > 2) {\r\n      throw new Error(\"Invalid argument length\");\r\n    }\r\n\r\n    if (argn === 2 || typeof args[0] === \"string\") {\r\n      options[properties[0]] = args[0];\r\n      options[properties[1]] = args[1];\r\n    } else {\r\n      options = args[0];\r\n    }\r\n\r\n    return options;\r\n  }\r\n\r\n  /**\r\n   * merge a set of default dialog options with user supplied arguments\r\n   */\r\n  function mergeArguments(defaults, args, properties) {\r\n    return $.extend(\r\n      // deep merge\r\n      true,\r\n      // ensure the target is an empty, unreferenced object\r\n      {},\r\n      // the base options object for this type of dialog (often just buttons)\r\n      defaults,\r\n      // args could be an object or array; if it's an array properties will\r\n      // map it to a proper options object\r\n      mapArguments(\r\n        args,\r\n        properties\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * this entry-level method makes heavy use of composition to take a simple\r\n   * range of inputs and return valid options suitable for passing to bootbox.dialog\r\n   */\r\n  function mergeDialogOptions(className, labels, properties, args) {\r\n    //  build up a base set of dialog properties\r\n    var baseOptions = {\r\n      className: \"bootbox-\" + className,\r\n      buttons: createLabels.apply(null, labels)\r\n    };\r\n\r\n    // ensure the buttons properties generated, *after* merging\r\n    // with user args are still valid against the supplied labels\r\n    return validateButtons(\r\n      // merge the generated base properties with user supplied arguments\r\n      mergeArguments(\r\n        baseOptions,\r\n        args,\r\n        // if args.length > 1, properties specify how each arg maps to an object key\r\n        properties\r\n      ),\r\n      labels\r\n    );\r\n  }\r\n\r\n  /**\r\n   * from a given list of arguments return a suitable object of button labels\r\n   * all this does is normalise the given labels and translate them where possible\r\n   * e.g. \"ok\", \"confirm\" -> { ok: \"OK, cancel: \"Annuleren\" }\r\n   */\r\n  function createLabels() {\r\n    var buttons = {};\r\n\r\n    for (var i = 0, j = arguments.length; i < j; i++) {\r\n      var argument = arguments[i];\r\n      var key = argument.toLowerCase();\r\n      var value = argument.toUpperCase();\r\n\r\n      buttons[key] = {\r\n        label: _t(value)\r\n      };\r\n    }\r\n\r\n    return buttons;\r\n  }\r\n\r\n  function validateButtons(options, buttons) {\r\n    var allowedButtons = {};\r\n    each(buttons, function(key, value) {\r\n      allowedButtons[value] = true;\r\n    });\r\n\r\n    each(options.buttons, function(key) {\r\n      if (allowedButtons[key] === undefined) {\r\n        throw new Error(\"button key \" + key + \" is not allowed (options are \" + buttons.join(\"\\n\") + \")\");\r\n      }\r\n    });\r\n\r\n    return options;\r\n  }\r\n\r\n  exports.alert = function() {\r\n    var options;\r\n\r\n    options = mergeDialogOptions(\"alert\", [\"ok\"], [\"message\", \"callback\"], arguments);\r\n\r\n    if (options.callback && !$.isFunction(options.callback)) {\r\n      throw new Error(\"alert requires callback property to be a function when provided\");\r\n    }\r\n\r\n    /**\r\n     * overrides\r\n     */\r\n    options.buttons.ok.callback = options.onEscape = function() {\r\n      if ($.isFunction(options.callback)) {\r\n        return options.callback.call(this);\r\n      }\r\n      return true;\r\n    };\r\n\r\n    return exports.dialog(options);\r\n  };\r\n\r\n  exports.confirm = function() {\r\n    var options;\r\n\r\n    options = mergeDialogOptions(\"confirm\", [\"cancel\", \"confirm\"], [\"message\", \"callback\"], arguments);\r\n\r\n    /**\r\n     * overrides; undo anything the user tried to set they shouldn't have\r\n     */\r\n    options.buttons.cancel.callback = options.onEscape = function() {\r\n      return options.callback.call(this, false);\r\n    };\r\n\r\n    options.buttons.confirm.callback = function() {\r\n      return options.callback.call(this, true);\r\n    };\r\n\r\n    // confirm specific validation\r\n    if (!$.isFunction(options.callback)) {\r\n      throw new Error(\"confirm requires a callback\");\r\n    }\r\n\r\n    return exports.dialog(options);\r\n  };\r\n\r\n  exports.prompt = function() {\r\n    var options;\r\n    var defaults;\r\n    var dialog;\r\n    var form;\r\n    var input;\r\n    var shouldShow;\r\n    var inputOptions;\r\n\r\n    // we have to create our form first otherwise\r\n    // its value is undefined when gearing up our options\r\n    // @TODO this could be solved by allowing message to\r\n    // be a function instead...\r\n    form = $(templates.form);\r\n\r\n    // prompt defaults are more complex than others in that\r\n    // users can override more defaults\r\n    // @TODO I don't like that prompt has to do a lot of heavy\r\n    // lifting which mergeDialogOptions can *almost* support already\r\n    // just because of 'value' and 'inputType' - can we refactor?\r\n    defaults = {\r\n      className: \"bootbox-prompt\",\r\n      buttons: createLabels(\"cancel\", \"confirm\"),\r\n      value: \"\",\r\n      inputType: \"text\"\r\n    };\r\n\r\n    options = validateButtons(\r\n      mergeArguments(defaults, arguments, [\"title\", \"callback\"]),\r\n      [\"cancel\", \"confirm\"]\r\n    );\r\n\r\n    // capture the user's show value; we always set this to false before\r\n    // spawning the dialog to give us a chance to attach some handlers to\r\n    // it, but we need to make sure we respect a preference not to show it\r\n    shouldShow = (options.show === undefined) ? true : options.show;\r\n\r\n    /**\r\n     * overrides; undo anything the user tried to set they shouldn't have\r\n     */\r\n    options.message = form;\r\n\r\n    options.buttons.cancel.callback = options.onEscape = function() {\r\n      return options.callback.call(this, null);\r\n    };\r\n\r\n    options.buttons.confirm.callback = function() {\r\n      var value;\r\n\r\n      switch (options.inputType) {\r\n        case \"text\":\r\n        case \"textarea\":\r\n        case \"email\":\r\n        case \"select\":\r\n        case \"date\":\r\n        case \"time\":\r\n        case \"number\":\r\n        case \"password\":\r\n          value = input.val();\r\n          break;\r\n\r\n        case \"checkbox\":\r\n          var checkedItems = input.find(\"input:checked\");\r\n\r\n          // we assume that checkboxes are always multiple,\r\n          // hence we default to an empty array\r\n          value = [];\r\n\r\n          each(checkedItems, function(_, item) {\r\n            value.push($(item).val());\r\n          });\r\n          break;\r\n      }\r\n\r\n      return options.callback.call(this, value);\r\n    };\r\n\r\n    options.show = false;\r\n\r\n    // prompt specific validation\r\n    if (!options.title) {\r\n      throw new Error(\"prompt requires a title\");\r\n    }\r\n\r\n    if (!$.isFunction(options.callback)) {\r\n      throw new Error(\"prompt requires a callback\");\r\n    }\r\n\r\n    if (!templates.inputs[options.inputType]) {\r\n      throw new Error(\"invalid prompt type\");\r\n    }\r\n\r\n    // create the input based on the supplied type\r\n    input = $(templates.inputs[options.inputType]);\r\n\r\n    switch (options.inputType) {\r\n      case \"text\":\r\n      case \"textarea\":\r\n      case \"email\":\r\n      case \"date\":\r\n      case \"time\":\r\n      case \"number\":\r\n      case \"password\":\r\n        input.val(options.value);\r\n        break;\r\n\r\n      case \"select\":\r\n        var groups = {};\r\n        inputOptions = options.inputOptions || [];\r\n\r\n        if (!$.isArray(inputOptions)) {\r\n          throw new Error(\"Please pass an array of input options\");\r\n        }\r\n\r\n        if (!inputOptions.length) {\r\n          throw new Error(\"prompt with select requires options\");\r\n        }\r\n\r\n        each(inputOptions, function(_, option) {\r\n\r\n          // assume the element to attach to is the input...\r\n          var elem = input;\r\n\r\n          if (option.value === undefined || option.text === undefined) {\r\n            throw new Error(\"given options in wrong format\");\r\n          }\r\n\r\n          // ... but override that element if this option sits in a group\r\n\r\n          if (option.group) {\r\n            // initialise group if necessary\r\n            if (!groups[option.group]) {\r\n              groups[option.group] = $(\"<optgroup/>\").attr(\"label\", option.group);\r\n            }\r\n\r\n            elem = groups[option.group];\r\n          }\r\n\r\n          elem.append(\"<option value='\" + option.value + \"'>\" + option.text + \"</option>\");\r\n        });\r\n\r\n        each(groups, function(_, group) {\r\n          input.append(group);\r\n        });\r\n\r\n        // safe to set a select's value as per a normal input\r\n        input.val(options.value);\r\n        break;\r\n\r\n      case \"checkbox\":\r\n        var values   = $.isArray(options.value) ? options.value : [options.value];\r\n        inputOptions = options.inputOptions || [];\r\n\r\n        if (!inputOptions.length) {\r\n          throw new Error(\"prompt with checkbox requires options\");\r\n        }\r\n\r\n        if (!inputOptions[0].value || !inputOptions[0].text) {\r\n          throw new Error(\"given options in wrong format\");\r\n        }\r\n\r\n        // checkboxes have to nest within a containing element, so\r\n        // they break the rules a bit and we end up re-assigning\r\n        // our 'input' element to this container instead\r\n        input = $(\"<div/>\");\r\n\r\n        each(inputOptions, function(_, option) {\r\n          var checkbox = $(templates.inputs[options.inputType]);\r\n\r\n          checkbox.find(\"input\").attr(\"value\", option.value);\r\n          checkbox.find(\"label\").append(option.text);\r\n\r\n          // we've ensured values is an array so we can always iterate over it\r\n          each(values, function(_, value) {\r\n            if (value === option.value) {\r\n              checkbox.find(\"input\").prop(\"checked\", true);\r\n            }\r\n          });\r\n\r\n          input.append(checkbox);\r\n        });\r\n        break;\r\n    }\r\n\r\n    // @TODO provide an attributes option instead\r\n    // and simply map that as keys: vals\r\n    if (options.placeholder) {\r\n      input.attr(\"placeholder\", options.placeholder);\r\n    }\r\n\r\n    if (options.pattern) {\r\n      input.attr(\"pattern\", options.pattern);\r\n    }\r\n\r\n    if (options.maxlength) {\r\n      input.attr(\"maxlength\", options.maxlength);\r\n    }\r\n\r\n    // now place it in our form\r\n    form.append(input);\r\n\r\n    form.on(\"submit\", function(e) {\r\n      e.preventDefault();\r\n      // Fix for SammyJS (or similar JS routing library) hijacking the form post.\r\n      e.stopPropagation();\r\n      // @TODO can we actually click *the* button object instead?\r\n      // e.g. buttons.confirm.click() or similar\r\n      dialog.find(\".btn-primary\").click();\r\n    });\r\n\r\n    dialog = exports.dialog(options);\r\n\r\n    // clear the existing handler focusing the submit button...\r\n    dialog.off(\"shown.bs.modal\");\r\n\r\n    // ...and replace it with one focusing our input, if possible\r\n    dialog.on(\"shown.bs.modal\", function() {\r\n      // need the closure here since input isn't\r\n      // an object otherwise\r\n      input.focus();\r\n    });\r\n\r\n    if (shouldShow === true) {\r\n      dialog.modal(\"show\");\r\n    }\r\n\r\n    return dialog;\r\n  };\r\n\r\n  exports.dialog = function(options) {\r\n    options = sanitize(options);\r\n\r\n    var dialog = $(templates.dialog);\r\n    var innerDialog = dialog.find(\".modal-dialog\");\r\n    var body = dialog.find(\".modal-body\");\r\n    var buttons = options.buttons;\r\n    var buttonStr = \"\";\r\n    var callbacks = {\r\n      onEscape: options.onEscape\r\n    };\r\n\r\n    if ($.fn.modal === undefined) {\r\n      throw new Error(\r\n        \"$.fn.modal is not defined; please double check you have included \" +\r\n        \"the Bootstrap JavaScript library. See http://getbootstrap.com/javascript/ \" +\r\n        \"for more details.\"\r\n      );\r\n    }\r\n\r\n    each(buttons, function(key, button) {\r\n\r\n      // @TODO I don't like this string appending to itself; bit dirty. Needs reworking\r\n      // can we just build up button elements instead? slower but neater. Then button\r\n      // can just become a template too\r\n      buttonStr += \"<button data-bb-handler='\" + key + \"' type='button' class='btn \" + button.className + \"'>\" + button.label + \"</button>\";\r\n      callbacks[key] = button.callback;\r\n    });\r\n\r\n    body.find(\".bootbox-body\").html(options.message);\r\n\r\n    if (options.animate === true) {\r\n      dialog.addClass(\"fade\");\r\n    }\r\n\r\n    if (options.className) {\r\n      dialog.addClass(options.className);\r\n    }\r\n\r\n    if (options.size === \"large\") {\r\n      innerDialog.addClass(\"modal-lg\");\r\n    } else if (options.size === \"small\") {\r\n      innerDialog.addClass(\"modal-sm\");\r\n    }\r\n\r\n    if (options.title) {\r\n      body.before(templates.header);\r\n    }\r\n\r\n    if (options.closeButton) {\r\n      var closeButton = $(templates.closeButton);\r\n\r\n      if (options.title) {\r\n        dialog.find(\".modal-header\").prepend(closeButton);\r\n      } else {\r\n        closeButton.css(\"margin-top\", \"-10px\").prependTo(body);\r\n      }\r\n    }\r\n\r\n    if (options.title) {\r\n      dialog.find(\".modal-title\").html(options.title);\r\n    }\r\n\r\n    if (buttonStr.length) {\r\n      body.after(templates.footer);\r\n      dialog.find(\".modal-footer\").html(buttonStr);\r\n    }\r\n\r\n\r\n    /**\r\n     * Bootstrap event listeners; used handle extra\r\n     * setup & teardown required after the underlying\r\n     * modal has performed certain actions\r\n     */\r\n\r\n    dialog.on(\"hidden.bs.modal\", function(e) {\r\n      // ensure we don't accidentally intercept hidden events triggered\r\n      // by children of the current dialog. We shouldn't anymore now BS\r\n      // namespaces its events; but still worth doing\r\n      if (e.target === this) {\r\n        dialog.remove();\r\n      }\r\n    });\r\n\r\n    /*\r\n    dialog.on(\"show.bs.modal\", function() {\r\n      // sadly this doesn't work; show is called *just* before\r\n      // the backdrop is added so we'd need a setTimeout hack or\r\n      // otherwise... leaving in as would be nice\r\n      if (options.backdrop) {\r\n        dialog.next(\".modal-backdrop\").addClass(\"bootbox-backdrop\");\r\n      }\r\n    });\r\n    */\r\n\r\n    dialog.on(\"shown.bs.modal\", function() {\r\n      dialog.find(\".btn-primary:first\").focus();\r\n    });\r\n\r\n    /**\r\n     * Bootbox event listeners; experimental and may not last\r\n     * just an attempt to decouple some behaviours from their\r\n     * respective triggers\r\n     */\r\n\r\n    if (options.backdrop !== \"static\") {\r\n      // A boolean true/false according to the Bootstrap docs\r\n      // should show a dialog the user can dismiss by clicking on\r\n      // the background.\r\n      // We always only ever pass static/false to the actual\r\n      // $.modal function because with `true` we can't trap\r\n      // this event (the .modal-backdrop swallows it)\r\n      // However, we still want to sort of respect true\r\n      // and invoke the escape mechanism instead\r\n      dialog.on(\"click.dismiss.bs.modal\", function(e) {\r\n        // @NOTE: the target varies in >= 3.3.x releases since the modal backdrop\r\n        // moved *inside* the outer dialog rather than *alongside* it\r\n        if (dialog.children(\".modal-backdrop\").length) {\r\n          e.currentTarget = dialog.children(\".modal-backdrop\").get(0);\r\n        }\r\n\r\n        if (e.target !== e.currentTarget) {\r\n          return;\r\n        }\r\n\r\n        dialog.trigger(\"escape.close.bb\");\r\n      });\r\n    }\r\n\r\n    dialog.on(\"escape.close.bb\", function(e) {\r\n      if (callbacks.onEscape) {\r\n        processCallback(e, dialog, callbacks.onEscape);\r\n      }\r\n    });\r\n\r\n    /**\r\n     * Standard jQuery event listeners; used to handle user\r\n     * interaction with our dialog\r\n     */\r\n\r\n    dialog.on(\"click\", \".modal-footer button\", function(e) {\r\n      var callbackKey = $(this).data(\"bb-handler\");\r\n\r\n      processCallback(e, dialog, callbacks[callbackKey]);\r\n    });\r\n\r\n    dialog.on(\"click\", \".bootbox-close-button\", function(e) {\r\n      // onEscape might be falsy but that's fine; the fact is\r\n      // if the user has managed to click the close button we\r\n      // have to close the dialog, callback or not\r\n      processCallback(e, dialog, callbacks.onEscape);\r\n    });\r\n\r\n    dialog.on(\"keyup\", function(e) {\r\n      if (e.which === 27) {\r\n        dialog.trigger(\"escape.close.bb\");\r\n      }\r\n    });\r\n\r\n    // the remainder of this method simply deals with adding our\r\n    // dialogent to the DOM, augmenting it with Bootstrap's modal\r\n    // functionality and then giving the resulting object back\r\n    // to our caller\r\n\r\n    $(options.container).append(dialog);\r\n\r\n    dialog.modal({\r\n      backdrop: options.backdrop ? \"static\": false,\r\n      keyboard: false,\r\n      show: false\r\n    });\r\n\r\n    if (options.show) {\r\n      dialog.modal(\"show\");\r\n    }\r\n\r\n    // @TODO should we return the raw element here or should\r\n    // we wrap it in an object on which we can expose some neater\r\n    // methods, e.g. var d = bootbox.alert(); d.hide(); instead\r\n    // of d.modal(\"hide\");\r\n\r\n   /*\r\n    function BBDialog(elem) {\r\n      this.elem = elem;\r\n    }\r\n\r\n    BBDialog.prototype = {\r\n      hide: function() {\r\n        return this.elem.modal(\"hide\");\r\n      },\r\n      show: function() {\r\n        return this.elem.modal(\"show\");\r\n      }\r\n    };\r\n    */\r\n\r\n    return dialog;\r\n\r\n  };\r\n\r\n  exports.setDefaults = function() {\r\n    var values = {};\r\n\r\n    if (arguments.length === 2) {\r\n      // allow passing of single key/value...\r\n      values[arguments[0]] = arguments[1];\r\n    } else {\r\n      // ... and as an object too\r\n      values = arguments[0];\r\n    }\r\n\r\n    $.extend(defaults, values);\r\n  };\r\n\r\n  exports.hideAll = function() {\r\n    $(\".bootbox\").modal(\"hide\");\r\n\r\n    return exports;\r\n  };\r\n\r\n\r\n  /**\r\n   * standard locales. Please add more according to ISO 639-1 standard. Multiple language variants are\r\n   * unlikely to be required. If this gets too large it can be split out into separate JS files.\r\n   */\r\n  var locales = {\r\n    bg_BG : {\r\n      OK      : \"Ок\",\r\n      CANCEL  : \"Отказ\",\r\n      CONFIRM : \"Потвърждавам\"\r\n    },\r\n    br : {\r\n      OK      : \"OK\",\r\n      CANCEL  : \"Cancelar\",\r\n      CONFIRM : \"Sim\"\r\n    },\r\n    cs : {\r\n      OK      : \"OK\",\r\n      CANCEL  : \"Zrušit\",\r\n      CONFIRM : \"Potvrdit\"\r\n    },\r\n    da : {\r\n      OK      : \"OK\",\r\n      CANCEL  : \"Annuller\",\r\n      CONFIRM : \"Accepter\"\r\n    },\r\n    de : {\r\n      OK      : \"OK\",\r\n      CANCEL  : \"Abbrechen\",\r\n      CONFIRM : \"Akzeptieren\"\r\n    },\r\n    el : {\r\n      OK      : \"Εντάξει\",\r\n      CANCEL  : \"Ακύρωση\",\r\n      CONFIRM : \"Επιβεβαίωση\"\r\n    },\r\n    en : {\r\n      OK      : \"OK\",\r\n      CANCEL  : \"Cancel\",\r\n      CONFIRM : \"OK\"\r\n    },\r\n    es : {\r\n      OK      : \"OK\",\r\n      CANCEL  : \"Cancelar\",\r\n      CONFIRM : \"Aceptar\"\r\n    },\r\n    et : {\r\n      OK      : \"OK\",\r\n      CANCEL  : \"Katkesta\",\r\n      CONFIRM : \"OK\"\r\n    },\r\n    fa : {\r\n      OK      : \"قبول\",\r\n      CANCEL  : \"لغو\",\r\n      CONFIRM : \"تایید\"\r\n    },\r\n    fi : {\r\n      OK      : \"OK\",\r\n      CANCEL  : \"Peruuta\",\r\n      CONFIRM : \"OK\"\r\n    },\r\n    fr : {\r\n      OK      : \"OK\",\r\n      CANCEL  : \"Annuler\",\r\n      CONFIRM : \"D'accord\"\r\n    },\r\n    he : {\r\n      OK      : \"אישור\",\r\n      CANCEL  : \"ביטול\",\r\n      CONFIRM : \"אישור\"\r\n    },\r\n    hu : {\r\n      OK      : \"OK\",\r\n      CANCEL  : \"Mégsem\",\r\n      CONFIRM : \"Megerősít\"\r\n    },\r\n    hr : {\r\n      OK      : \"OK\",\r\n      CANCEL  : \"Odustani\",\r\n      CONFIRM : \"Potvrdi\"\r\n    },\r\n    id : {\r\n      OK      : \"OK\",\r\n      CANCEL  : \"Batal\",\r\n      CONFIRM : \"OK\"\r\n    },\r\n    it : {\r\n      OK      : \"OK\",\r\n      CANCEL  : \"Annulla\",\r\n      CONFIRM : \"Conferma\"\r\n    },\r\n    ja : {\r\n      OK      : \"OK\",\r\n      CANCEL  : \"キャンセル\",\r\n      CONFIRM : \"確認\"\r\n    },\r\n    lt : {\r\n      OK      : \"Gerai\",\r\n      CANCEL  : \"Atšaukti\",\r\n      CONFIRM : \"Patvirtinti\"\r\n    },\r\n    lv : {\r\n      OK      : \"Labi\",\r\n      CANCEL  : \"Atcelt\",\r\n      CONFIRM : \"Apstiprināt\"\r\n    },\r\n    nl : {\r\n      OK      : \"OK\",\r\n      CANCEL  : \"Annuleren\",\r\n      CONFIRM : \"Accepteren\"\r\n    },\r\n    no : {\r\n      OK      : \"OK\",\r\n      CANCEL  : \"Avbryt\",\r\n      CONFIRM : \"OK\"\r\n    },\r\n    pl : {\r\n      OK      : \"OK\",\r\n      CANCEL  : \"Anuluj\",\r\n      CONFIRM : \"Potwierdź\"\r\n    },\r\n    pt : {\r\n      OK      : \"OK\",\r\n      CANCEL  : \"Cancelar\",\r\n      CONFIRM : \"Confirmar\"\r\n    },\r\n    ru : {\r\n      OK      : \"OK\",\r\n      CANCEL  : \"Отмена\",\r\n      CONFIRM : \"Применить\"\r\n    },\r\n    sq : {\r\n      OK : \"OK\",\r\n      CANCEL : \"Anulo\",\r\n      CONFIRM : \"Prano\"\r\n    },\r\n    sv : {\r\n      OK      : \"OK\",\r\n      CANCEL  : \"Avbryt\",\r\n      CONFIRM : \"OK\"\r\n    },\r\n    th : {\r\n      OK      : \"ตกลง\",\r\n      CANCEL  : \"ยกเลิก\",\r\n      CONFIRM : \"ยืนยัน\"\r\n    },\r\n    tr : {\r\n      OK      : \"Tamam\",\r\n      CANCEL  : \"İptal\",\r\n      CONFIRM : \"Onayla\"\r\n    },\r\n    zh_CN : {\r\n      OK      : \"OK\",\r\n      CANCEL  : \"取消\",\r\n      CONFIRM : \"确认\"\r\n    },\r\n    zh_TW : {\r\n      OK      : \"OK\",\r\n      CANCEL  : \"取消\",\r\n      CONFIRM : \"確認\"\r\n    }\r\n  };\r\n\r\n  exports.addLocale = function(name, values) {\r\n    $.each([\"OK\", \"CANCEL\", \"CONFIRM\"], function(_, v) {\r\n      if (!values[v]) {\r\n        throw new Error(\"Please supply a translation for '\" + v + \"'\");\r\n      }\r\n    });\r\n\r\n    locales[name] = {\r\n      OK: values.OK,\r\n      CANCEL: values.CANCEL,\r\n      CONFIRM: values.CONFIRM\r\n    };\r\n\r\n    return exports;\r\n  };\r\n\r\n  exports.removeLocale = function(name) {\r\n    delete locales[name];\r\n\r\n    return exports;\r\n  };\r\n\r\n  exports.setLocale = function(name) {\r\n    return exports.setDefaults(\"locale\", name);\r\n  };\r\n\r\n  exports.init = function(_$) {\r\n    return init(_$ || $);\r\n  };\r\n\r\n  return exports;\r\n}));\r\n","/*!\r\n * Modernizr v2.8.3\r\n * www.modernizr.com\r\n *\r\n * Copyright (c) Faruk Ates, Paul Irish, Alex Sexton\r\n * Available under the BSD and MIT licenses: www.modernizr.com/license/\r\n */\r\n\r\n/*\r\n * Modernizr tests which native CSS3 and HTML5 features are available in\r\n * the current UA and makes the results available to you in two ways:\r\n * as properties on a global Modernizr object, and as classes on the\r\n * <html> element. This information allows you to progressively enhance\r\n * your pages with a granular level of control over the experience.\r\n *\r\n * Modernizr has an optional (not included) conditional resource loader\r\n * called Modernizr.load(), based on Yepnope.js (yepnopejs.com).\r\n * To get a build that includes Modernizr.load(), as well as choosing\r\n * which tests to include, go to www.modernizr.com/download/\r\n *\r\n * Authors        Faruk Ates, Paul Irish, Alex Sexton\r\n * Contributors   Ryan Seddon, Ben Alman\r\n */\r\n\r\nwindow.Modernizr = (function( window, document, undefined ) {\r\n\r\n    var version = '2.8.3',\r\n\r\n    Modernizr = {},\r\n\r\n    /*>>cssclasses*/\r\n    // option for enabling the HTML classes to be added\r\n    enableClasses = true,\r\n    /*>>cssclasses*/\r\n\r\n    docElement = document.documentElement,\r\n\r\n    /**\r\n     * Create our \"modernizr\" element that we do most feature tests on.\r\n     */\r\n    mod = 'modernizr',\r\n    modElem = document.createElement(mod),\r\n    mStyle = modElem.style,\r\n\r\n    /**\r\n     * Create the input element for various Web Forms feature tests.\r\n     */\r\n    inputElem /*>>inputelem*/ = document.createElement('input') /*>>inputelem*/ ,\r\n\r\n    /*>>smile*/\r\n    smile = ':)',\r\n    /*>>smile*/\r\n\r\n    toString = {}.toString,\r\n\r\n    // TODO :: make the prefixes more granular\r\n    /*>>prefixes*/\r\n    // List of property values to set for css tests. See ticket #21\r\n    prefixes = ' -webkit- -moz- -o- -ms- '.split(' '),\r\n    /*>>prefixes*/\r\n\r\n    /*>>domprefixes*/\r\n    // Following spec is to expose vendor-specific style properties as:\r\n    //   elem.style.WebkitBorderRadius\r\n    // and the following would be incorrect:\r\n    //   elem.style.webkitBorderRadius\r\n\r\n    // Webkit ghosts their properties in lowercase but Opera & Moz do not.\r\n    // Microsoft uses a lowercase `ms` instead of the correct `Ms` in IE8+\r\n    //   erik.eae.net/archives/2008/03/10/21.48.10/\r\n\r\n    // More here: github.com/Modernizr/Modernizr/issues/issue/21\r\n    omPrefixes = 'Webkit Moz O ms',\r\n\r\n    cssomPrefixes = omPrefixes.split(' '),\r\n\r\n    domPrefixes = omPrefixes.toLowerCase().split(' '),\r\n    /*>>domprefixes*/\r\n\r\n    /*>>ns*/\r\n    ns = {'svg': 'http://www.w3.org/2000/svg'},\r\n    /*>>ns*/\r\n\r\n    tests = {},\r\n    inputs = {},\r\n    attrs = {},\r\n\r\n    classes = [],\r\n\r\n    slice = classes.slice,\r\n\r\n    featureName, // used in testing loop\r\n\r\n\r\n    /*>>teststyles*/\r\n    // Inject element with style element and some CSS rules\r\n    injectElementWithStyles = function( rule, callback, nodes, testnames ) {\r\n\r\n      var style, ret, node, docOverflow,\r\n          div = document.createElement('div'),\r\n          // After page load injecting a fake body doesn't work so check if body exists\r\n          body = document.body,\r\n          // IE6 and 7 won't return offsetWidth or offsetHeight unless it's in the body element, so we fake it.\r\n          fakeBody = body || document.createElement('body');\r\n\r\n      if ( parseInt(nodes, 10) ) {\r\n          // In order not to give false positives we create a node for each test\r\n          // This also allows the method to scale for unspecified uses\r\n          while ( nodes-- ) {\r\n              node = document.createElement('div');\r\n              node.id = testnames ? testnames[nodes] : mod + (nodes + 1);\r\n              div.appendChild(node);\r\n          }\r\n      }\r\n\r\n      // <style> elements in IE6-9 are considered 'NoScope' elements and therefore will be removed\r\n      // when injected with innerHTML. To get around this you need to prepend the 'NoScope' element\r\n      // with a 'scoped' element, in our case the soft-hyphen entity as it won't mess with our measurements.\r\n      // msdn.microsoft.com/en-us/library/ms533897%28VS.85%29.aspx\r\n      // Documents served as xml will throw if using &shy; so use xml friendly encoded version. See issue #277\r\n      style = ['&#173;','<style id=\"s', mod, '\">', rule, '</style>'].join('');\r\n      div.id = mod;\r\n      // IE6 will false positive on some tests due to the style element inside the test div somehow interfering offsetHeight, so insert it into body or fakebody.\r\n      // Opera will act all quirky when injecting elements in documentElement when page is served as xml, needs fakebody too. #270\r\n      (body ? div : fakeBody).innerHTML += style;\r\n      fakeBody.appendChild(div);\r\n      if ( !body ) {\r\n          //avoid crashing IE8, if background image is used\r\n          fakeBody.style.background = '';\r\n          //Safari 5.13/5.1.4 OSX stops loading if ::-webkit-scrollbar is used and scrollbars are visible\r\n          fakeBody.style.overflow = 'hidden';\r\n          docOverflow = docElement.style.overflow;\r\n          docElement.style.overflow = 'hidden';\r\n          docElement.appendChild(fakeBody);\r\n      }\r\n\r\n      ret = callback(div, rule);\r\n      // If this is done after page load we don't want to remove the body so check if body exists\r\n      if ( !body ) {\r\n          fakeBody.parentNode.removeChild(fakeBody);\r\n          docElement.style.overflow = docOverflow;\r\n      } else {\r\n          div.parentNode.removeChild(div);\r\n      }\r\n\r\n      return !!ret;\r\n\r\n    },\r\n    /*>>teststyles*/\r\n\r\n    /*>>mq*/\r\n    // adapted from matchMedia polyfill\r\n    // by Scott Jehl and Paul Irish\r\n    // gist.github.com/786768\r\n    testMediaQuery = function( mq ) {\r\n\r\n      var matchMedia = window.matchMedia || window.msMatchMedia;\r\n      if ( matchMedia ) {\r\n        return matchMedia(mq) && matchMedia(mq).matches || false;\r\n      }\r\n\r\n      var bool;\r\n\r\n      injectElementWithStyles('@media ' + mq + ' { #' + mod + ' { position: absolute; } }', function( node ) {\r\n        bool = (window.getComputedStyle ?\r\n                  getComputedStyle(node, null) :\r\n                  node.currentStyle)['position'] == 'absolute';\r\n      });\r\n\r\n      return bool;\r\n\r\n     },\r\n     /*>>mq*/\r\n\r\n\r\n    /*>>hasevent*/\r\n    //\r\n    // isEventSupported determines if a given element supports the given event\r\n    // kangax.github.com/iseventsupported/\r\n    //\r\n    // The following results are known incorrects:\r\n    //   Modernizr.hasEvent(\"webkitTransitionEnd\", elem) // false negative\r\n    //   Modernizr.hasEvent(\"textInput\") // in Webkit. github.com/Modernizr/Modernizr/issues/333\r\n    //   ...\r\n    isEventSupported = (function() {\r\n\r\n      var TAGNAMES = {\r\n        'select': 'input', 'change': 'input',\r\n        'submit': 'form', 'reset': 'form',\r\n        'error': 'img', 'load': 'img', 'abort': 'img'\r\n      };\r\n\r\n      function isEventSupported( eventName, element ) {\r\n\r\n        element = element || document.createElement(TAGNAMES[eventName] || 'div');\r\n        eventName = 'on' + eventName;\r\n\r\n        // When using `setAttribute`, IE skips \"unload\", WebKit skips \"unload\" and \"resize\", whereas `in` \"catches\" those\r\n        var isSupported = eventName in element;\r\n\r\n        if ( !isSupported ) {\r\n          // If it has no `setAttribute` (i.e. doesn't implement Node interface), try generic element\r\n          if ( !element.setAttribute ) {\r\n            element = document.createElement('div');\r\n          }\r\n          if ( element.setAttribute && element.removeAttribute ) {\r\n            element.setAttribute(eventName, '');\r\n            isSupported = is(element[eventName], 'function');\r\n\r\n            // If property was created, \"remove it\" (by setting value to `undefined`)\r\n            if ( !is(element[eventName], 'undefined') ) {\r\n              element[eventName] = undefined;\r\n            }\r\n            element.removeAttribute(eventName);\r\n          }\r\n        }\r\n\r\n        element = null;\r\n        return isSupported;\r\n      }\r\n      return isEventSupported;\r\n    })(),\r\n    /*>>hasevent*/\r\n\r\n    // TODO :: Add flag for hasownprop ? didn't last time\r\n\r\n    // hasOwnProperty shim by kangax needed for Safari 2.0 support\r\n    _hasOwnProperty = ({}).hasOwnProperty, hasOwnProp;\r\n\r\n    if ( !is(_hasOwnProperty, 'undefined') && !is(_hasOwnProperty.call, 'undefined') ) {\r\n      hasOwnProp = function (object, property) {\r\n        return _hasOwnProperty.call(object, property);\r\n      };\r\n    }\r\n    else {\r\n      hasOwnProp = function (object, property) { /* yes, this can give false positives/negatives, but most of the time we don't care about those */\r\n        return ((property in object) && is(object.constructor.prototype[property], 'undefined'));\r\n      };\r\n    }\r\n\r\n    // Adapted from ES5-shim https://github.com/kriskowal/es5-shim/blob/master/es5-shim.js\r\n    // es5.github.com/#x15.3.4.5\r\n\r\n    if (!Function.prototype.bind) {\r\n      Function.prototype.bind = function bind(that) {\r\n\r\n        var target = this;\r\n\r\n        if (typeof target != \"function\") {\r\n            throw new TypeError();\r\n        }\r\n\r\n        var args = slice.call(arguments, 1),\r\n            bound = function () {\r\n\r\n            if (this instanceof bound) {\r\n\r\n              var F = function(){};\r\n              F.prototype = target.prototype;\r\n              var self = new F();\r\n\r\n              var result = target.apply(\r\n                  self,\r\n                  args.concat(slice.call(arguments))\r\n              );\r\n              if (Object(result) === result) {\r\n                  return result;\r\n              }\r\n              return self;\r\n\r\n            } else {\r\n\r\n              return target.apply(\r\n                  that,\r\n                  args.concat(slice.call(arguments))\r\n              );\r\n\r\n            }\r\n\r\n        };\r\n\r\n        return bound;\r\n      };\r\n    }\r\n\r\n    /**\r\n     * setCss applies given styles to the Modernizr DOM node.\r\n     */\r\n    function setCss( str ) {\r\n        mStyle.cssText = str;\r\n    }\r\n\r\n    /**\r\n     * setCssAll extrapolates all vendor-specific css strings.\r\n     */\r\n    function setCssAll( str1, str2 ) {\r\n        return setCss(prefixes.join(str1 + ';') + ( str2 || '' ));\r\n    }\r\n\r\n    /**\r\n     * is returns a boolean for if typeof obj is exactly type.\r\n     */\r\n    function is( obj, type ) {\r\n        return typeof obj === type;\r\n    }\r\n\r\n    /**\r\n     * contains returns a boolean for if substr is found within str.\r\n     */\r\n    function contains( str, substr ) {\r\n        return !!~('' + str).indexOf(substr);\r\n    }\r\n\r\n    /*>>testprop*/\r\n\r\n    // testProps is a generic CSS / DOM property test.\r\n\r\n    // In testing support for a given CSS property, it's legit to test:\r\n    //    `elem.style[styleName] !== undefined`\r\n    // If the property is supported it will return an empty string,\r\n    // if unsupported it will return undefined.\r\n\r\n    // We'll take advantage of this quick test and skip setting a style\r\n    // on our modernizr element, but instead just testing undefined vs\r\n    // empty string.\r\n\r\n    // Because the testing of the CSS property names (with \"-\", as\r\n    // opposed to the camelCase DOM properties) is non-portable and\r\n    // non-standard but works in WebKit and IE (but not Gecko or Opera),\r\n    // we explicitly reject properties with dashes so that authors\r\n    // developing in WebKit or IE first don't end up with\r\n    // browser-specific content by accident.\r\n\r\n    function testProps( props, prefixed ) {\r\n        for ( var i in props ) {\r\n            var prop = props[i];\r\n            if ( !contains(prop, \"-\") && mStyle[prop] !== undefined ) {\r\n                return prefixed == 'pfx' ? prop : true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    /*>>testprop*/\r\n\r\n    // TODO :: add testDOMProps\r\n    /**\r\n     * testDOMProps is a generic DOM property test; if a browser supports\r\n     *   a certain property, it won't return undefined for it.\r\n     */\r\n    function testDOMProps( props, obj, elem ) {\r\n        for ( var i in props ) {\r\n            var item = obj[props[i]];\r\n            if ( item !== undefined) {\r\n\r\n                // return the property name as a string\r\n                if (elem === false) return props[i];\r\n\r\n                // let's bind a function\r\n                if (is(item, 'function')){\r\n                  // default to autobind unless override\r\n                  return item.bind(elem || obj);\r\n                }\r\n\r\n                // return the unbound function or obj or value\r\n                return item;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /*>>testallprops*/\r\n    /**\r\n     * testPropsAll tests a list of DOM properties we want to check against.\r\n     *   We specify literally ALL possible (known and/or likely) properties on\r\n     *   the element including the non-vendor prefixed one, for forward-\r\n     *   compatibility.\r\n     */\r\n    function testPropsAll( prop, prefixed, elem ) {\r\n\r\n        var ucProp  = prop.charAt(0).toUpperCase() + prop.slice(1),\r\n            props   = (prop + ' ' + cssomPrefixes.join(ucProp + ' ') + ucProp).split(' ');\r\n\r\n        // did they call .prefixed('boxSizing') or are we just testing a prop?\r\n        if(is(prefixed, \"string\") || is(prefixed, \"undefined\")) {\r\n          return testProps(props, prefixed);\r\n\r\n        // otherwise, they called .prefixed('requestAnimationFrame', window[, elem])\r\n        } else {\r\n          props = (prop + ' ' + (domPrefixes).join(ucProp + ' ') + ucProp).split(' ');\r\n          return testDOMProps(props, prefixed, elem);\r\n        }\r\n    }\r\n    /*>>testallprops*/\r\n\r\n\r\n    /**\r\n     * Tests\r\n     * -----\r\n     */\r\n\r\n    // The *new* flexbox\r\n    // dev.w3.org/csswg/css3-flexbox\r\n\r\n    tests['flexbox'] = function() {\r\n      return testPropsAll('flexWrap');\r\n    };\r\n\r\n    // The *old* flexbox\r\n    // www.w3.org/TR/2009/WD-css3-flexbox-20090723/\r\n\r\n    tests['flexboxlegacy'] = function() {\r\n        return testPropsAll('boxDirection');\r\n    };\r\n\r\n    // On the S60 and BB Storm, getContext exists, but always returns undefined\r\n    // so we actually have to call getContext() to verify\r\n    // github.com/Modernizr/Modernizr/issues/issue/97/\r\n\r\n    tests['canvas'] = function() {\r\n        var elem = document.createElement('canvas');\r\n        return !!(elem.getContext && elem.getContext('2d'));\r\n    };\r\n\r\n    tests['canvastext'] = function() {\r\n        return !!(Modernizr['canvas'] && is(document.createElement('canvas').getContext('2d').fillText, 'function'));\r\n    };\r\n\r\n    // webk.it/70117 is tracking a legit WebGL feature detect proposal\r\n\r\n    // We do a soft detect which may false positive in order to avoid\r\n    // an expensive context creation: bugzil.la/732441\r\n\r\n    tests['webgl'] = function() {\r\n        return !!window.WebGLRenderingContext;\r\n    };\r\n\r\n    /*\r\n     * The Modernizr.touch test only indicates if the browser supports\r\n     *    touch events, which does not necessarily reflect a touchscreen\r\n     *    device, as evidenced by tablets running Windows 7 or, alas,\r\n     *    the Palm Pre / WebOS (touch) phones.\r\n     *\r\n     * Additionally, Chrome (desktop) used to lie about its support on this,\r\n     *    but that has since been rectified: crbug.com/36415\r\n     *\r\n     * We also test for Firefox 4 Multitouch Support.\r\n     *\r\n     * For more info, see: modernizr.github.com/Modernizr/touch.html\r\n     */\r\n\r\n    tests['touch'] = function() {\r\n        var bool;\r\n\r\n        if(('ontouchstart' in window) || window.DocumentTouch && document instanceof DocumentTouch) {\r\n          bool = true;\r\n        } else {\r\n          injectElementWithStyles(['@media (',prefixes.join('touch-enabled),('),mod,')','{#modernizr{top:9px;position:absolute}}'].join(''), function( node ) {\r\n            bool = node.offsetTop === 9;\r\n          });\r\n        }\r\n\r\n        return bool;\r\n    };\r\n\r\n\r\n    // geolocation is often considered a trivial feature detect...\r\n    // Turns out, it's quite tricky to get right:\r\n    //\r\n    // Using !!navigator.geolocation does two things we don't want. It:\r\n    //   1. Leaks memory in IE9: github.com/Modernizr/Modernizr/issues/513\r\n    //   2. Disables page caching in WebKit: webk.it/43956\r\n    //\r\n    // Meanwhile, in Firefox < 8, an about:config setting could expose\r\n    // a false positive that would throw an exception: bugzil.la/688158\r\n\r\n    tests['geolocation'] = function() {\r\n        return 'geolocation' in navigator;\r\n    };\r\n\r\n\r\n    tests['postmessage'] = function() {\r\n      return !!window.postMessage;\r\n    };\r\n\r\n\r\n    // Chrome incognito mode used to throw an exception when using openDatabase\r\n    // It doesn't anymore.\r\n    tests['websqldatabase'] = function() {\r\n      return !!window.openDatabase;\r\n    };\r\n\r\n    // Vendors had inconsistent prefixing with the experimental Indexed DB:\r\n    // - Webkit's implementation is accessible through webkitIndexedDB\r\n    // - Firefox shipped moz_indexedDB before FF4b9, but since then has been mozIndexedDB\r\n    // For speed, we don't test the legacy (and beta-only) indexedDB\r\n    tests['indexedDB'] = function() {\r\n      return !!testPropsAll(\"indexedDB\", window);\r\n    };\r\n\r\n    // documentMode logic from YUI to filter out IE8 Compat Mode\r\n    //   which false positives.\r\n    tests['hashchange'] = function() {\r\n      return isEventSupported('hashchange', window) && (document.documentMode === undefined || document.documentMode > 7);\r\n    };\r\n\r\n    // Per 1.6:\r\n    // This used to be Modernizr.historymanagement but the longer\r\n    // name has been deprecated in favor of a shorter and property-matching one.\r\n    // The old API is still available in 1.6, but as of 2.0 will throw a warning,\r\n    // and in the first release thereafter disappear entirely.\r\n    tests['history'] = function() {\r\n      return !!(window.history && history.pushState);\r\n    };\r\n\r\n    tests['draganddrop'] = function() {\r\n        var div = document.createElement('div');\r\n        return ('draggable' in div) || ('ondragstart' in div && 'ondrop' in div);\r\n    };\r\n\r\n    // FF3.6 was EOL'ed on 4/24/12, but the ESR version of FF10\r\n    // will be supported until FF19 (2/12/13), at which time, ESR becomes FF17.\r\n    // FF10 still uses prefixes, so check for it until then.\r\n    // for more ESR info, see: mozilla.org/en-US/firefox/organizations/faq/\r\n    tests['websockets'] = function() {\r\n        return 'WebSocket' in window || 'MozWebSocket' in window;\r\n    };\r\n\r\n\r\n    // css-tricks.com/rgba-browser-support/\r\n    tests['rgba'] = function() {\r\n        // Set an rgba() color and check the returned value\r\n\r\n        setCss('background-color:rgba(150,255,150,.5)');\r\n\r\n        return contains(mStyle.backgroundColor, 'rgba');\r\n    };\r\n\r\n    tests['hsla'] = function() {\r\n        // Same as rgba(), in fact, browsers re-map hsla() to rgba() internally,\r\n        //   except IE9 who retains it as hsla\r\n\r\n        setCss('background-color:hsla(120,40%,100%,.5)');\r\n\r\n        return contains(mStyle.backgroundColor, 'rgba') || contains(mStyle.backgroundColor, 'hsla');\r\n    };\r\n\r\n    tests['multiplebgs'] = function() {\r\n        // Setting multiple images AND a color on the background shorthand property\r\n        //  and then querying the style.background property value for the number of\r\n        //  occurrences of \"url(\" is a reliable method for detecting ACTUAL support for this!\r\n\r\n        setCss('background:url(https://),url(https://),red url(https://)');\r\n\r\n        // If the UA supports multiple backgrounds, there should be three occurrences\r\n        //   of the string \"url(\" in the return value for elemStyle.background\r\n\r\n        return (/(url\\s*\\(.*?){3}/).test(mStyle.background);\r\n    };\r\n\r\n\r\n\r\n    // this will false positive in Opera Mini\r\n    //   github.com/Modernizr/Modernizr/issues/396\r\n\r\n    tests['backgroundsize'] = function() {\r\n        return testPropsAll('backgroundSize');\r\n    };\r\n\r\n    tests['borderimage'] = function() {\r\n        return testPropsAll('borderImage');\r\n    };\r\n\r\n\r\n    // Super comprehensive table about all the unique implementations of\r\n    // border-radius: muddledramblings.com/table-of-css3-border-radius-compliance\r\n\r\n    tests['borderradius'] = function() {\r\n        return testPropsAll('borderRadius');\r\n    };\r\n\r\n    // WebOS unfortunately false positives on this test.\r\n    tests['boxshadow'] = function() {\r\n        return testPropsAll('boxShadow');\r\n    };\r\n\r\n    // FF3.0 will false positive on this test\r\n    tests['textshadow'] = function() {\r\n        return document.createElement('div').style.textShadow === '';\r\n    };\r\n\r\n\r\n    tests['opacity'] = function() {\r\n        // Browsers that actually have CSS Opacity implemented have done so\r\n        //  according to spec, which means their return values are within the\r\n        //  range of [0.0,1.0] - including the leading zero.\r\n\r\n        setCssAll('opacity:.55');\r\n\r\n        // The non-literal . in this regex is intentional:\r\n        //   German Chrome returns this value as 0,55\r\n        // github.com/Modernizr/Modernizr/issues/#issue/59/comment/516632\r\n        return (/^0.55$/).test(mStyle.opacity);\r\n    };\r\n\r\n\r\n    // Note, Android < 4 will pass this test, but can only animate\r\n    //   a single property at a time\r\n    //   goo.gl/v3V4Gp\r\n    tests['cssanimations'] = function() {\r\n        return testPropsAll('animationName');\r\n    };\r\n\r\n\r\n    tests['csscolumns'] = function() {\r\n        return testPropsAll('columnCount');\r\n    };\r\n\r\n\r\n    tests['cssgradients'] = function() {\r\n        /**\r\n         * For CSS Gradients syntax, please see:\r\n         * webkit.org/blog/175/introducing-css-gradients/\r\n         * developer.mozilla.org/en/CSS/-moz-linear-gradient\r\n         * developer.mozilla.org/en/CSS/-moz-radial-gradient\r\n         * dev.w3.org/csswg/css3-images/#gradients-\r\n         */\r\n\r\n        var str1 = 'background-image:',\r\n            str2 = 'gradient(linear,left top,right bottom,from(#9f9),to(white));',\r\n            str3 = 'linear-gradient(left top,#9f9, white);';\r\n\r\n        setCss(\r\n             // legacy webkit syntax (FIXME: remove when syntax not in use anymore)\r\n              (str1 + '-webkit- '.split(' ').join(str2 + str1) +\r\n             // standard syntax             // trailing 'background-image:'\r\n              prefixes.join(str3 + str1)).slice(0, -str1.length)\r\n        );\r\n\r\n        return contains(mStyle.backgroundImage, 'gradient');\r\n    };\r\n\r\n\r\n    tests['cssreflections'] = function() {\r\n        return testPropsAll('boxReflect');\r\n    };\r\n\r\n\r\n    tests['csstransforms'] = function() {\r\n        return !!testPropsAll('transform');\r\n    };\r\n\r\n\r\n    tests['csstransforms3d'] = function() {\r\n\r\n        var ret = !!testPropsAll('perspective');\r\n\r\n        // Webkit's 3D transforms are passed off to the browser's own graphics renderer.\r\n        //   It works fine in Safari on Leopard and Snow Leopard, but not in Chrome in\r\n        //   some conditions. As a result, Webkit typically recognizes the syntax but\r\n        //   will sometimes throw a false positive, thus we must do a more thorough check:\r\n        if ( ret && 'webkitPerspective' in docElement.style ) {\r\n\r\n          // Webkit allows this media query to succeed only if the feature is enabled.\r\n          // `@media (transform-3d),(-webkit-transform-3d){ ... }`\r\n          injectElementWithStyles('@media (transform-3d),(-webkit-transform-3d){#modernizr{left:9px;position:absolute;height:3px;}}', function( node, rule ) {\r\n            ret = node.offsetLeft === 9 && node.offsetHeight === 3;\r\n          });\r\n        }\r\n        return ret;\r\n    };\r\n\r\n\r\n    tests['csstransitions'] = function() {\r\n        return testPropsAll('transition');\r\n    };\r\n\r\n\r\n    /*>>fontface*/\r\n    // @font-face detection routine by Diego Perini\r\n    // javascript.nwbox.com/CSSSupport/\r\n\r\n    // false positives:\r\n    //   WebOS github.com/Modernizr/Modernizr/issues/342\r\n    //   WP7   github.com/Modernizr/Modernizr/issues/538\r\n    tests['fontface'] = function() {\r\n        var bool;\r\n\r\n        injectElementWithStyles('@font-face {font-family:\"font\";src:url(\"https://\")}', function( node, rule ) {\r\n          var style = document.getElementById('smodernizr'),\r\n              sheet = style.sheet || style.styleSheet,\r\n              cssText = sheet ? (sheet.cssRules && sheet.cssRules[0] ? sheet.cssRules[0].cssText : sheet.cssText || '') : '';\r\n\r\n          bool = /src/i.test(cssText) && cssText.indexOf(rule.split(' ')[0]) === 0;\r\n        });\r\n\r\n        return bool;\r\n    };\r\n    /*>>fontface*/\r\n\r\n    // CSS generated content detection\r\n    tests['generatedcontent'] = function() {\r\n        var bool;\r\n\r\n        injectElementWithStyles(['#',mod,'{font:0/0 a}#',mod,':after{content:\"',smile,'\";visibility:hidden;font:3px/1 a}'].join(''), function( node ) {\r\n          bool = node.offsetHeight >= 3;\r\n        });\r\n\r\n        return bool;\r\n    };\r\n\r\n\r\n\r\n    // These tests evaluate support of the video/audio elements, as well as\r\n    // testing what types of content they support.\r\n    //\r\n    // We're using the Boolean constructor here, so that we can extend the value\r\n    // e.g.  Modernizr.video     // true\r\n    //       Modernizr.video.ogg // 'probably'\r\n    //\r\n    // Codec values from : github.com/NielsLeenheer/html5test/blob/9106a8/index.html#L845\r\n    //                     thx to NielsLeenheer and zcorpan\r\n\r\n    // Note: in some older browsers, \"no\" was a return value instead of empty string.\r\n    //   It was live in FF3.5.0 and 3.5.1, but fixed in 3.5.2\r\n    //   It was also live in Safari 4.0.0 - 4.0.4, but fixed in 4.0.5\r\n\r\n    tests['video'] = function() {\r\n        var elem = document.createElement('video'),\r\n            bool = false;\r\n\r\n        // IE9 Running on Windows Server SKU can cause an exception to be thrown, bug #224\r\n        try {\r\n            if ( bool = !!elem.canPlayType ) {\r\n                bool      = new Boolean(bool);\r\n                bool.ogg  = elem.canPlayType('video/ogg; codecs=\"theora\"')      .replace(/^no$/,'');\r\n\r\n                // Without QuickTime, this value will be `undefined`. github.com/Modernizr/Modernizr/issues/546\r\n                bool.h264 = elem.canPlayType('video/mp4; codecs=\"avc1.42E01E\"') .replace(/^no$/,'');\r\n\r\n                bool.webm = elem.canPlayType('video/webm; codecs=\"vp8, vorbis\"').replace(/^no$/,'');\r\n            }\r\n\r\n        } catch(e) { }\r\n\r\n        return bool;\r\n    };\r\n\r\n    tests['audio'] = function() {\r\n        var elem = document.createElement('audio'),\r\n            bool = false;\r\n\r\n        try {\r\n            if ( bool = !!elem.canPlayType ) {\r\n                bool      = new Boolean(bool);\r\n                bool.ogg  = elem.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/,'');\r\n                bool.mp3  = elem.canPlayType('audio/mpeg;')               .replace(/^no$/,'');\r\n\r\n                // Mimetypes accepted:\r\n                //   developer.mozilla.org/En/Media_formats_supported_by_the_audio_and_video_elements\r\n                //   bit.ly/iphoneoscodecs\r\n                bool.wav  = elem.canPlayType('audio/wav; codecs=\"1\"')     .replace(/^no$/,'');\r\n                bool.m4a  = ( elem.canPlayType('audio/x-m4a;')            ||\r\n                              elem.canPlayType('audio/aac;'))             .replace(/^no$/,'');\r\n            }\r\n        } catch(e) { }\r\n\r\n        return bool;\r\n    };\r\n\r\n\r\n    // In FF4, if disabled, window.localStorage should === null.\r\n\r\n    // Normally, we could not test that directly and need to do a\r\n    //   `('localStorage' in window) && ` test first because otherwise Firefox will\r\n    //   throw bugzil.la/365772 if cookies are disabled\r\n\r\n    // Also in iOS5 Private Browsing mode, attempting to use localStorage.setItem\r\n    // will throw the exception:\r\n    //   QUOTA_EXCEEDED_ERRROR DOM Exception 22.\r\n    // Peculiarly, getItem and removeItem calls do not throw.\r\n\r\n    // Because we are forced to try/catch this, we'll go aggressive.\r\n\r\n    // Just FWIW: IE8 Compat mode supports these features completely:\r\n    //   www.quirksmode.org/dom/html5.html\r\n    // But IE8 doesn't support either with local files\r\n\r\n    tests['localstorage'] = function() {\r\n        try {\r\n            localStorage.setItem(mod, mod);\r\n            localStorage.removeItem(mod);\r\n            return true;\r\n        } catch(e) {\r\n            return false;\r\n        }\r\n    };\r\n\r\n    tests['sessionstorage'] = function() {\r\n        try {\r\n            sessionStorage.setItem(mod, mod);\r\n            sessionStorage.removeItem(mod);\r\n            return true;\r\n        } catch(e) {\r\n            return false;\r\n        }\r\n    };\r\n\r\n\r\n    tests['webworkers'] = function() {\r\n        return !!window.Worker;\r\n    };\r\n\r\n\r\n    tests['applicationcache'] = function() {\r\n        return !!window.applicationCache;\r\n    };\r\n\r\n\r\n    // Thanks to Erik Dahlstrom\r\n    tests['svg'] = function() {\r\n        return !!document.createElementNS && !!document.createElementNS(ns.svg, 'svg').createSVGRect;\r\n    };\r\n\r\n    // specifically for SVG inline in HTML, not within XHTML\r\n    // test page: paulirish.com/demo/inline-svg\r\n    tests['inlinesvg'] = function() {\r\n      var div = document.createElement('div');\r\n      div.innerHTML = '<svg/>';\r\n      return (div.firstChild && div.firstChild.namespaceURI) == ns.svg;\r\n    };\r\n\r\n    // SVG SMIL animation\r\n    tests['smil'] = function() {\r\n        return !!document.createElementNS && /SVGAnimate/.test(toString.call(document.createElementNS(ns.svg, 'animate')));\r\n    };\r\n\r\n    // This test is only for clip paths in SVG proper, not clip paths on HTML content\r\n    // demo: srufaculty.sru.edu/david.dailey/svg/newstuff/clipPath4.svg\r\n\r\n    // However read the comments to dig into applying SVG clippaths to HTML content here:\r\n    //   github.com/Modernizr/Modernizr/issues/213#issuecomment-1149491\r\n    tests['svgclippaths'] = function() {\r\n        return !!document.createElementNS && /SVGClipPath/.test(toString.call(document.createElementNS(ns.svg, 'clipPath')));\r\n    };\r\n\r\n    /*>>webforms*/\r\n    // input features and input types go directly onto the ret object, bypassing the tests loop.\r\n    // Hold this guy to execute in a moment.\r\n    function webforms() {\r\n        /*>>input*/\r\n        // Run through HTML5's new input attributes to see if the UA understands any.\r\n        // We're using f which is the <input> element created early on\r\n        // Mike Taylr has created a comprehensive resource for testing these attributes\r\n        //   when applied to all input types:\r\n        //   miketaylr.com/code/input-type-attr.html\r\n        // spec: www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary\r\n\r\n        // Only input placeholder is tested while textarea's placeholder is not.\r\n        // Currently Safari 4 and Opera 11 have support only for the input placeholder\r\n        // Both tests are available in feature-detects/forms-placeholder.js\r\n        Modernizr['input'] = (function( props ) {\r\n            for ( var i = 0, len = props.length; i < len; i++ ) {\r\n                attrs[ props[i] ] = !!(props[i] in inputElem);\r\n            }\r\n            if (attrs.list){\r\n              // safari false positive's on datalist: webk.it/74252\r\n              // see also github.com/Modernizr/Modernizr/issues/146\r\n              attrs.list = !!(document.createElement('datalist') && window.HTMLDataListElement);\r\n            }\r\n            return attrs;\r\n        })('autocomplete autofocus list placeholder max min multiple pattern required step'.split(' '));\r\n        /*>>input*/\r\n\r\n        /*>>inputtypes*/\r\n        // Run through HTML5's new input types to see if the UA understands any.\r\n        //   This is put behind the tests runloop because it doesn't return a\r\n        //   true/false like all the other tests; instead, it returns an object\r\n        //   containing each input type with its corresponding true/false value\r\n\r\n        // Big thanks to @miketaylr for the html5 forms expertise. miketaylr.com/\r\n        Modernizr['inputtypes'] = (function(props) {\r\n\r\n            for ( var i = 0, bool, inputElemType, defaultView, len = props.length; i < len; i++ ) {\r\n\r\n                inputElem.setAttribute('type', inputElemType = props[i]);\r\n                bool = inputElem.type !== 'text';\r\n\r\n                // We first check to see if the type we give it sticks..\r\n                // If the type does, we feed it a textual value, which shouldn't be valid.\r\n                // If the value doesn't stick, we know there's input sanitization which infers a custom UI\r\n                if ( bool ) {\r\n\r\n                    inputElem.value         = smile;\r\n                    inputElem.style.cssText = 'position:absolute;visibility:hidden;';\r\n\r\n                    if ( /^range$/.test(inputElemType) && inputElem.style.WebkitAppearance !== undefined ) {\r\n\r\n                      docElement.appendChild(inputElem);\r\n                      defaultView = document.defaultView;\r\n\r\n                      // Safari 2-4 allows the smiley as a value, despite making a slider\r\n                      bool =  defaultView.getComputedStyle &&\r\n                              defaultView.getComputedStyle(inputElem, null).WebkitAppearance !== 'textfield' &&\r\n                              // Mobile android web browser has false positive, so must\r\n                              // check the height to see if the widget is actually there.\r\n                              (inputElem.offsetHeight !== 0);\r\n\r\n                      docElement.removeChild(inputElem);\r\n\r\n                    } else if ( /^(search|tel)$/.test(inputElemType) ){\r\n                      // Spec doesn't define any special parsing or detectable UI\r\n                      //   behaviors so we pass these through as true\r\n\r\n                      // Interestingly, opera fails the earlier test, so it doesn't\r\n                      //  even make it here.\r\n\r\n                    } else if ( /^(url|email)$/.test(inputElemType) ) {\r\n                      // Real url and email support comes with prebaked validation.\r\n                      bool = inputElem.checkValidity && inputElem.checkValidity() === false;\r\n\r\n                    } else {\r\n                      // If the upgraded input compontent rejects the :) text, we got a winner\r\n                      bool = inputElem.value != smile;\r\n                    }\r\n                }\r\n\r\n                inputs[ props[i] ] = !!bool;\r\n            }\r\n            return inputs;\r\n        })('search tel url email datetime date month week time datetime-local number range color'.split(' '));\r\n        /*>>inputtypes*/\r\n    }\r\n    /*>>webforms*/\r\n\r\n\r\n    // End of test definitions\r\n    // -----------------------\r\n\r\n\r\n\r\n    // Run through all tests and detect their support in the current UA.\r\n    // todo: hypothetically we could be doing an array of tests and use a basic loop here.\r\n    for ( var feature in tests ) {\r\n        if ( hasOwnProp(tests, feature) ) {\r\n            // run the test, throw the return value into the Modernizr,\r\n            //   then based on that boolean, define an appropriate className\r\n            //   and push it into an array of classes we'll join later.\r\n            featureName  = feature.toLowerCase();\r\n            Modernizr[featureName] = tests[feature]();\r\n\r\n            classes.push((Modernizr[featureName] ? '' : 'no-') + featureName);\r\n        }\r\n    }\r\n\r\n    /*>>webforms*/\r\n    // input tests need to run.\r\n    Modernizr.input || webforms();\r\n    /*>>webforms*/\r\n\r\n\r\n    /**\r\n     * addTest allows the user to define their own feature tests\r\n     * the result will be added onto the Modernizr object,\r\n     * as well as an appropriate className set on the html element\r\n     *\r\n     * @param feature - String naming the feature\r\n     * @param test - Function returning true if feature is supported, false if not\r\n     */\r\n     Modernizr.addTest = function ( feature, test ) {\r\n       if ( typeof feature == 'object' ) {\r\n         for ( var key in feature ) {\r\n           if ( hasOwnProp( feature, key ) ) {\r\n             Modernizr.addTest( key, feature[ key ] );\r\n           }\r\n         }\r\n       } else {\r\n\r\n         feature = feature.toLowerCase();\r\n\r\n         if ( Modernizr[feature] !== undefined ) {\r\n           // we're going to quit if you're trying to overwrite an existing test\r\n           // if we were to allow it, we'd do this:\r\n           //   var re = new RegExp(\"\\\\b(no-)?\" + feature + \"\\\\b\");\r\n           //   docElement.className = docElement.className.replace( re, '' );\r\n           // but, no rly, stuff 'em.\r\n           return Modernizr;\r\n         }\r\n\r\n         test = typeof test == 'function' ? test() : test;\r\n\r\n         if (typeof enableClasses !== \"undefined\" && enableClasses) {\r\n           docElement.className += ' ' + (test ? '' : 'no-') + feature;\r\n         }\r\n         Modernizr[feature] = test;\r\n\r\n       }\r\n\r\n       return Modernizr; // allow chaining.\r\n     };\r\n\r\n\r\n    // Reset modElem.cssText to nothing to reduce memory footprint.\r\n    setCss('');\r\n    modElem = inputElem = null;\r\n\r\n    /*>>shiv*/\r\n    /**\r\n     * @preserve HTML5 Shiv prev3.7.1 | @afarkas @jdalton @jon_neal @rem | MIT/GPL2 Licensed\r\n     */\r\n    ;(function(window, document) {\r\n        /*jshint evil:true */\r\n        /** version */\r\n        var version = '3.7.0';\r\n\r\n        /** Preset options */\r\n        var options = window.html5 || {};\r\n\r\n        /** Used to skip problem elements */\r\n        var reSkip = /^<|^(?:button|map|select|textarea|object|iframe|option|optgroup)$/i;\r\n\r\n        /** Not all elements can be cloned in IE **/\r\n        var saveClones = /^(?:a|b|code|div|fieldset|h1|h2|h3|h4|h5|h6|i|label|li|ol|p|q|span|strong|style|table|tbody|td|th|tr|ul)$/i;\r\n\r\n        /** Detect whether the browser supports default html5 styles */\r\n        var supportsHtml5Styles;\r\n\r\n        /** Name of the expando, to work with multiple documents or to re-shiv one document */\r\n        var expando = '_html5shiv';\r\n\r\n        /** The id for the the documents expando */\r\n        var expanID = 0;\r\n\r\n        /** Cached data for each document */\r\n        var expandoData = {};\r\n\r\n        /** Detect whether the browser supports unknown elements */\r\n        var supportsUnknownElements;\r\n\r\n        (function() {\r\n          try {\r\n            var a = document.createElement('a');\r\n            a.innerHTML = '<xyz></xyz>';\r\n            //if the hidden property is implemented we can assume, that the browser supports basic HTML5 Styles\r\n            supportsHtml5Styles = ('hidden' in a);\r\n\r\n            supportsUnknownElements = a.childNodes.length == 1 || (function() {\r\n              // assign a false positive if unable to shiv\r\n              (document.createElement)('a');\r\n              var frag = document.createDocumentFragment();\r\n              return (\r\n                typeof frag.cloneNode == 'undefined' ||\r\n                typeof frag.createDocumentFragment == 'undefined' ||\r\n                typeof frag.createElement == 'undefined'\r\n              );\r\n            }());\r\n          } catch(e) {\r\n            // assign a false positive if detection fails => unable to shiv\r\n            supportsHtml5Styles = true;\r\n            supportsUnknownElements = true;\r\n          }\r\n\r\n        }());\r\n\r\n        /*--------------------------------------------------------------------------*/\r\n\r\n        /**\r\n         * Creates a style sheet with the given CSS text and adds it to the document.\r\n         * @private\r\n         * @param {Document} ownerDocument The document.\r\n         * @param {String} cssText The CSS text.\r\n         * @returns {StyleSheet} The style element.\r\n         */\r\n        function addStyleSheet(ownerDocument, cssText) {\r\n          var p = ownerDocument.createElement('p'),\r\n          parent = ownerDocument.getElementsByTagName('head')[0] || ownerDocument.documentElement;\r\n\r\n          p.innerHTML = 'x<style>' + cssText + '</style>';\r\n          return parent.insertBefore(p.lastChild, parent.firstChild);\r\n        }\r\n\r\n        /**\r\n         * Returns the value of `html5.elements` as an array.\r\n         * @private\r\n         * @returns {Array} An array of shived element node names.\r\n         */\r\n        function getElements() {\r\n          var elements = html5.elements;\r\n          return typeof elements == 'string' ? elements.split(' ') : elements;\r\n        }\r\n\r\n        /**\r\n         * Returns the data associated to the given document\r\n         * @private\r\n         * @param {Document} ownerDocument The document.\r\n         * @returns {Object} An object of data.\r\n         */\r\n        function getExpandoData(ownerDocument) {\r\n          var data = expandoData[ownerDocument[expando]];\r\n          if (!data) {\r\n            data = {};\r\n            expanID++;\r\n            ownerDocument[expando] = expanID;\r\n            expandoData[expanID] = data;\r\n          }\r\n          return data;\r\n        }\r\n\r\n        /**\r\n         * returns a shived element for the given nodeName and document\r\n         * @memberOf html5\r\n         * @param {String} nodeName name of the element\r\n         * @param {Document} ownerDocument The context document.\r\n         * @returns {Object} The shived element.\r\n         */\r\n        function createElement(nodeName, ownerDocument, data){\r\n          if (!ownerDocument) {\r\n            ownerDocument = document;\r\n          }\r\n          if(supportsUnknownElements){\r\n            return ownerDocument.createElement(nodeName);\r\n          }\r\n          if (!data) {\r\n            data = getExpandoData(ownerDocument);\r\n          }\r\n          var node;\r\n\r\n          if (data.cache[nodeName]) {\r\n            node = data.cache[nodeName].cloneNode();\r\n          } else if (saveClones.test(nodeName)) {\r\n            node = (data.cache[nodeName] = data.createElem(nodeName)).cloneNode();\r\n          } else {\r\n            node = data.createElem(nodeName);\r\n          }\r\n\r\n          // Avoid adding some elements to fragments in IE < 9 because\r\n          // * Attributes like `name` or `type` cannot be set/changed once an element\r\n          //   is inserted into a document/fragment\r\n          // * Link elements with `src` attributes that are inaccessible, as with\r\n          //   a 403 response, will cause the tab/window to crash\r\n          // * Script elements appended to fragments will execute when their `src`\r\n          //   or `text` property is set\r\n          return node.canHaveChildren && !reSkip.test(nodeName) && !node.tagUrn ? data.frag.appendChild(node) : node;\r\n        }\r\n\r\n        /**\r\n         * returns a shived DocumentFragment for the given document\r\n         * @memberOf html5\r\n         * @param {Document} ownerDocument The context document.\r\n         * @returns {Object} The shived DocumentFragment.\r\n         */\r\n        function createDocumentFragment(ownerDocument, data){\r\n          if (!ownerDocument) {\r\n            ownerDocument = document;\r\n          }\r\n          if(supportsUnknownElements){\r\n            return ownerDocument.createDocumentFragment();\r\n          }\r\n          data = data || getExpandoData(ownerDocument);\r\n          var clone = data.frag.cloneNode(),\r\n          i = 0,\r\n          elems = getElements(),\r\n          l = elems.length;\r\n          for(;i<l;i++){\r\n            clone.createElement(elems[i]);\r\n          }\r\n          return clone;\r\n        }\r\n\r\n        /**\r\n         * Shivs the `createElement` and `createDocumentFragment` methods of the document.\r\n         * @private\r\n         * @param {Document|DocumentFragment} ownerDocument The document.\r\n         * @param {Object} data of the document.\r\n         */\r\n        function shivMethods(ownerDocument, data) {\r\n          if (!data.cache) {\r\n            data.cache = {};\r\n            data.createElem = ownerDocument.createElement;\r\n            data.createFrag = ownerDocument.createDocumentFragment;\r\n            data.frag = data.createFrag();\r\n          }\r\n\r\n\r\n          ownerDocument.createElement = function(nodeName) {\r\n            //abort shiv\r\n            if (!html5.shivMethods) {\r\n              return data.createElem(nodeName);\r\n            }\r\n            return createElement(nodeName, ownerDocument, data);\r\n          };\r\n\r\n          ownerDocument.createDocumentFragment = Function('h,f', 'return function(){' +\r\n                                                          'var n=f.cloneNode(),c=n.createElement;' +\r\n                                                          'h.shivMethods&&(' +\r\n                                                          // unroll the `createElement` calls\r\n                                                          getElements().join().replace(/[\\w\\-]+/g, function(nodeName) {\r\n            data.createElem(nodeName);\r\n            data.frag.createElement(nodeName);\r\n            return 'c(\"' + nodeName + '\")';\r\n          }) +\r\n            ');return n}'\r\n                                                         )(html5, data.frag);\r\n        }\r\n\r\n        /*--------------------------------------------------------------------------*/\r\n\r\n        /**\r\n         * Shivs the given document.\r\n         * @memberOf html5\r\n         * @param {Document} ownerDocument The document to shiv.\r\n         * @returns {Document} The shived document.\r\n         */\r\n        function shivDocument(ownerDocument) {\r\n          if (!ownerDocument) {\r\n            ownerDocument = document;\r\n          }\r\n          var data = getExpandoData(ownerDocument);\r\n\r\n          if (html5.shivCSS && !supportsHtml5Styles && !data.hasCSS) {\r\n            data.hasCSS = !!addStyleSheet(ownerDocument,\r\n                                          // corrects block display not defined in IE6/7/8/9\r\n                                          'article,aside,dialog,figcaption,figure,footer,header,hgroup,main,nav,section{display:block}' +\r\n                                            // adds styling not present in IE6/7/8/9\r\n                                            'mark{background:#FF0;color:#000}' +\r\n                                            // hides non-rendered elements\r\n                                            'template{display:none}'\r\n                                         );\r\n          }\r\n          if (!supportsUnknownElements) {\r\n            shivMethods(ownerDocument, data);\r\n          }\r\n          return ownerDocument;\r\n        }\r\n\r\n        /*--------------------------------------------------------------------------*/\r\n\r\n        /**\r\n         * The `html5` object is exposed so that more elements can be shived and\r\n         * existing shiving can be detected on iframes.\r\n         * @type Object\r\n         * @example\r\n         *\r\n         * // options can be changed before the script is included\r\n         * html5 = { 'elements': 'mark section', 'shivCSS': false, 'shivMethods': false };\r\n         */\r\n        var html5 = {\r\n\r\n          /**\r\n           * An array or space separated string of node names of the elements to shiv.\r\n           * @memberOf html5\r\n           * @type Array|String\r\n           */\r\n          'elements': options.elements || 'abbr article aside audio bdi canvas data datalist details dialog figcaption figure footer header hgroup main mark meter nav output progress section summary template time video',\r\n\r\n          /**\r\n           * current version of html5shiv\r\n           */\r\n          'version': version,\r\n\r\n          /**\r\n           * A flag to indicate that the HTML5 style sheet should be inserted.\r\n           * @memberOf html5\r\n           * @type Boolean\r\n           */\r\n          'shivCSS': (options.shivCSS !== false),\r\n\r\n          /**\r\n           * Is equal to true if a browser supports creating unknown/HTML5 elements\r\n           * @memberOf html5\r\n           * @type boolean\r\n           */\r\n          'supportsUnknownElements': supportsUnknownElements,\r\n\r\n          /**\r\n           * A flag to indicate that the document's `createElement` and `createDocumentFragment`\r\n           * methods should be overwritten.\r\n           * @memberOf html5\r\n           * @type Boolean\r\n           */\r\n          'shivMethods': (options.shivMethods !== false),\r\n\r\n          /**\r\n           * A string to describe the type of `html5` object (\"default\" or \"default print\").\r\n           * @memberOf html5\r\n           * @type String\r\n           */\r\n          'type': 'default',\r\n\r\n          // shivs the document according to the specified `html5` object options\r\n          'shivDocument': shivDocument,\r\n\r\n          //creates a shived element\r\n          createElement: createElement,\r\n\r\n          //creates a shived documentFragment\r\n          createDocumentFragment: createDocumentFragment\r\n        };\r\n\r\n        /*--------------------------------------------------------------------------*/\r\n\r\n        // expose html5\r\n        window.html5 = html5;\r\n\r\n        // shiv the document\r\n        shivDocument(document);\r\n\r\n    }(this, document));\r\n    /*>>shiv*/\r\n\r\n    // Assign private properties to the return object with prefix\r\n    Modernizr._version      = version;\r\n\r\n    // expose these for the plugin API. Look in the source for how to join() them against your input\r\n    /*>>prefixes*/\r\n    Modernizr._prefixes     = prefixes;\r\n    /*>>prefixes*/\r\n    /*>>domprefixes*/\r\n    Modernizr._domPrefixes  = domPrefixes;\r\n    Modernizr._cssomPrefixes  = cssomPrefixes;\r\n    /*>>domprefixes*/\r\n\r\n    /*>>mq*/\r\n    // Modernizr.mq tests a given media query, live against the current state of the window\r\n    // A few important notes:\r\n    //   * If a browser does not support media queries at all (eg. oldIE) the mq() will always return false\r\n    //   * A max-width or orientation query will be evaluated against the current state, which may change later.\r\n    //   * You must specify values. Eg. If you are testing support for the min-width media query use:\r\n    //       Modernizr.mq('(min-width:0)')\r\n    // usage:\r\n    // Modernizr.mq('only screen and (max-width:768)')\r\n    Modernizr.mq            = testMediaQuery;\r\n    /*>>mq*/\r\n\r\n    /*>>hasevent*/\r\n    // Modernizr.hasEvent() detects support for a given event, with an optional element to test on\r\n    // Modernizr.hasEvent('gesturestart', elem)\r\n    Modernizr.hasEvent      = isEventSupported;\r\n    /*>>hasevent*/\r\n\r\n    /*>>testprop*/\r\n    // Modernizr.testProp() investigates whether a given style property is recognized\r\n    // Note that the property names must be provided in the camelCase variant.\r\n    // Modernizr.testProp('pointerEvents')\r\n    Modernizr.testProp      = function(prop){\r\n        return testProps([prop]);\r\n    };\r\n    /*>>testprop*/\r\n\r\n    /*>>testallprops*/\r\n    // Modernizr.testAllProps() investigates whether a given style property,\r\n    //   or any of its vendor-prefixed variants, is recognized\r\n    // Note that the property names must be provided in the camelCase variant.\r\n    // Modernizr.testAllProps('boxSizing')\r\n    Modernizr.testAllProps  = testPropsAll;\r\n    /*>>testallprops*/\r\n\r\n\r\n    /*>>teststyles*/\r\n    // Modernizr.testStyles() allows you to add custom styles to the document and test an element afterwards\r\n    // Modernizr.testStyles('#modernizr { position:absolute }', function(elem, rule){ ... })\r\n    Modernizr.testStyles    = injectElementWithStyles;\r\n    /*>>teststyles*/\r\n\r\n\r\n    /*>>prefixed*/\r\n    // Modernizr.prefixed() returns the prefixed or nonprefixed property name variant of your input\r\n    // Modernizr.prefixed('boxSizing') // 'MozBoxSizing'\r\n\r\n    // Properties must be passed as dom-style camelcase, rather than `box-sizing` hypentated style.\r\n    // Return values will also be the camelCase variant, if you need to translate that to hypenated style use:\r\n    //\r\n    //     str.replace(/([A-Z])/g, function(str,m1){ return '-' + m1.toLowerCase(); }).replace(/^ms-/,'-ms-');\r\n\r\n    // If you're trying to ascertain which transition end event to bind to, you might do something like...\r\n    //\r\n    //     var transEndEventNames = {\r\n    //       'WebkitTransition' : 'webkitTransitionEnd',\r\n    //       'MozTransition'    : 'transitionend',\r\n    //       'OTransition'      : 'oTransitionEnd',\r\n    //       'msTransition'     : 'MSTransitionEnd',\r\n    //       'transition'       : 'transitionend'\r\n    //     },\r\n    //     transEndEventName = transEndEventNames[ Modernizr.prefixed('transition') ];\r\n\r\n    Modernizr.prefixed      = function(prop, obj, elem){\r\n      if(!obj) {\r\n        return testPropsAll(prop, 'pfx');\r\n      } else {\r\n        // Testing DOM property e.g. Modernizr.prefixed('requestAnimationFrame', window) // 'mozRequestAnimationFrame'\r\n        return testPropsAll(prop, obj, elem);\r\n      }\r\n    };\r\n    /*>>prefixed*/\r\n\r\n\r\n    /*>>cssclasses*/\r\n    // Remove \"no-js\" class from <html> element, if it exists:\r\n    docElement.className = docElement.className.replace(/(^|\\s)no-js(\\s|$)/, '$1$2') +\r\n\r\n                            // Add the new classes to the <html> element.\r\n                            (enableClasses ? ' js ' + classes.join(' ') : '');\r\n    /*>>cssclasses*/\r\n\r\n    return Modernizr;\r\n\r\n})(this, this.document);\r\n","/*! matchMedia() polyfill - Test a CSS media type/query in JS. Authors & copyright (c) 2012: Scott Jehl, Paul Irish, Nicholas Zakas. Dual MIT/BSD license */\r\n/*! NOTE: If you're already including a window.matchMedia polyfill via Modernizr or otherwise, you don't need this part */\r\n(function(w) {\r\n  \"use strict\";\r\n  w.matchMedia = w.matchMedia || function(doc, undefined) {\r\n    var bool, docElem = doc.documentElement, refNode = docElem.firstElementChild || docElem.firstChild, fakeBody = doc.createElement(\"body\"), div = doc.createElement(\"div\");\r\n    div.id = \"mq-test-1\";\r\n    div.style.cssText = \"position:absolute;top:-100em\";\r\n    fakeBody.style.background = \"none\";\r\n    fakeBody.appendChild(div);\r\n    return function(q) {\r\n      div.innerHTML = '&shy;<style media=\"' + q + '\"> #mq-test-1 { width: 42px; }</style>';\r\n      docElem.insertBefore(fakeBody, refNode);\r\n      bool = div.offsetWidth === 42;\r\n      docElem.removeChild(fakeBody);\r\n      return {\r\n        matches: bool,\r\n        media: q\r\n      };\r\n    };\r\n  }(w.document);\r\n})(this);\r\n\r\n/*! Respond.js v1.4.0: min/max-width media query polyfill. (c) Scott Jehl. MIT Lic. j.mp/respondjs  */\r\n(function(w) {\r\n  \"use strict\";\r\n  var respond = {};\r\n  w.respond = respond;\r\n  respond.update = function() {};\r\n  var requestQueue = [], xmlHttp = function() {\r\n    var xmlhttpmethod = false;\r\n    try {\r\n      xmlhttpmethod = new w.XMLHttpRequest();\r\n    } catch (e) {\r\n      xmlhttpmethod = new w.ActiveXObject(\"Microsoft.XMLHTTP\");\r\n    }\r\n    return function() {\r\n      return xmlhttpmethod;\r\n    };\r\n  }(), ajax = function(url, callback) {\r\n    var req = xmlHttp();\r\n    if (!req) {\r\n      return;\r\n    }\r\n    req.open(\"GET\", url, true);\r\n    req.onreadystatechange = function() {\r\n      if (req.readyState !== 4 || req.status !== 200 && req.status !== 304) {\r\n        return;\r\n      }\r\n      callback(req.responseText);\r\n    };\r\n    if (req.readyState === 4) {\r\n      return;\r\n    }\r\n    req.send(null);\r\n  };\r\n  respond.ajax = ajax;\r\n  respond.queue = requestQueue;\r\n  respond.regex = {\r\n    media: /@media[^\\{]+\\{([^\\{\\}]*\\{[^\\}\\{]*\\})+/gi,\r\n    keyframes: /@(?:\\-(?:o|moz|webkit)\\-)?keyframes[^\\{]+\\{(?:[^\\{\\}]*\\{[^\\}\\{]*\\})+[^\\}]*\\}/gi,\r\n    urls: /(url\\()['\"]?([^\\/\\)'\"][^:\\)'\"]+)['\"]?(\\))/g,\r\n    findStyles: /@media *([^\\{]+)\\{([\\S\\s]+?)$/,\r\n    only: /(only\\s+)?([a-zA-Z]+)\\s?/,\r\n    minw: /\\([\\s]*min\\-width\\s*:[\\s]*([\\s]*[0-9\\.]+)(px|em)[\\s]*\\)/,\r\n    maxw: /\\([\\s]*max\\-width\\s*:[\\s]*([\\s]*[0-9\\.]+)(px|em)[\\s]*\\)/\r\n  };\r\n  respond.mediaQueriesSupported = w.matchMedia && w.matchMedia(\"only all\") !== null && w.matchMedia(\"only all\").matches;\r\n  if (respond.mediaQueriesSupported) {\r\n    return;\r\n  }\r\n  var doc = w.document, docElem = doc.documentElement, mediastyles = [], rules = [], appendedEls = [], parsedSheets = {}, resizeThrottle = 30, head = doc.getElementsByTagName(\"head\")[0] || docElem, base = doc.getElementsByTagName(\"base\")[0], links = head.getElementsByTagName(\"link\"), lastCall, resizeDefer, eminpx, getEmValue = function() {\r\n    var ret, div = doc.createElement(\"div\"), body = doc.body, originalHTMLFontSize = docElem.style.fontSize, originalBodyFontSize = body && body.style.fontSize, fakeUsed = false;\r\n    div.style.cssText = \"position:absolute;font-size:1em;width:1em\";\r\n    if (!body) {\r\n      body = fakeUsed = doc.createElement(\"body\");\r\n      body.style.background = \"none\";\r\n    }\r\n    docElem.style.fontSize = \"100%\";\r\n    body.style.fontSize = \"100%\";\r\n    body.appendChild(div);\r\n    if (fakeUsed) {\r\n      docElem.insertBefore(body, docElem.firstChild);\r\n    }\r\n    ret = div.offsetWidth;\r\n    if (fakeUsed) {\r\n      docElem.removeChild(body);\r\n    } else {\r\n      body.removeChild(div);\r\n    }\r\n    docElem.style.fontSize = originalHTMLFontSize;\r\n    if (originalBodyFontSize) {\r\n      body.style.fontSize = originalBodyFontSize;\r\n    }\r\n    ret = eminpx = parseFloat(ret);\r\n    return ret;\r\n  }, applyMedia = function(fromResize) {\r\n    var name = \"clientWidth\", docElemProp = docElem[name], currWidth = doc.compatMode === \"CSS1Compat\" && docElemProp || doc.body[name] || docElemProp, styleBlocks = {}, lastLink = links[links.length - 1], now = new Date().getTime();\r\n    if (fromResize && lastCall && now - lastCall < resizeThrottle) {\r\n      w.clearTimeout(resizeDefer);\r\n      resizeDefer = w.setTimeout(applyMedia, resizeThrottle);\r\n      return;\r\n    } else {\r\n      lastCall = now;\r\n    }\r\n    for (var i in mediastyles) {\r\n      if (mediastyles.hasOwnProperty(i)) {\r\n        var thisstyle = mediastyles[i], min = thisstyle.minw, max = thisstyle.maxw, minnull = min === null, maxnull = max === null, em = \"em\";\r\n        if (!!min) {\r\n          min = parseFloat(min) * (min.indexOf(em) > -1 ? eminpx || getEmValue() : 1);\r\n        }\r\n        if (!!max) {\r\n          max = parseFloat(max) * (max.indexOf(em) > -1 ? eminpx || getEmValue() : 1);\r\n        }\r\n        if (!thisstyle.hasquery || (!minnull || !maxnull) && (minnull || currWidth >= min) && (maxnull || currWidth <= max)) {\r\n          if (!styleBlocks[thisstyle.media]) {\r\n            styleBlocks[thisstyle.media] = [];\r\n          }\r\n          styleBlocks[thisstyle.media].push(rules[thisstyle.rules]);\r\n        }\r\n      }\r\n    }\r\n    for (var j in appendedEls) {\r\n      if (appendedEls.hasOwnProperty(j)) {\r\n        if (appendedEls[j] && appendedEls[j].parentNode === head) {\r\n          head.removeChild(appendedEls[j]);\r\n        }\r\n      }\r\n    }\r\n    appendedEls.length = 0;\r\n    for (var k in styleBlocks) {\r\n      if (styleBlocks.hasOwnProperty(k)) {\r\n        var ss = doc.createElement(\"style\"), css = styleBlocks[k].join(\"\\n\");\r\n        ss.type = \"text/css\";\r\n        ss.media = k;\r\n        head.insertBefore(ss, lastLink.nextSibling);\r\n        if (ss.styleSheet) {\r\n          ss.styleSheet.cssText = css;\r\n        } else {\r\n          ss.appendChild(doc.createTextNode(css));\r\n        }\r\n        appendedEls.push(ss);\r\n      }\r\n    }\r\n  }, translate = function(styles, href, media) {\r\n    var qs = styles.replace(respond.regex.keyframes, \"\").match(respond.regex.media), ql = qs && qs.length || 0;\r\n    href = href.substring(0, href.lastIndexOf(\"/\"));\r\n    var repUrls = function(css) {\r\n      return css.replace(respond.regex.urls, \"$1\" + href + \"$2$3\");\r\n    }, useMedia = !ql && media;\r\n    if (href.length) {\r\n      href += \"/\";\r\n    }\r\n    if (useMedia) {\r\n      ql = 1;\r\n    }\r\n    for (var i = 0; i < ql; i++) {\r\n      var fullq, thisq, eachq, eql;\r\n      if (useMedia) {\r\n        fullq = media;\r\n        rules.push(repUrls(styles));\r\n      } else {\r\n        fullq = qs[i].match(respond.regex.findStyles) && RegExp.$1;\r\n        rules.push(RegExp.$2 && repUrls(RegExp.$2));\r\n      }\r\n      eachq = fullq.split(\",\");\r\n      eql = eachq.length;\r\n      for (var j = 0; j < eql; j++) {\r\n        thisq = eachq[j];\r\n        mediastyles.push({\r\n          media: thisq.split(\"(\")[0].match(respond.regex.only) && RegExp.$2 || \"all\",\r\n          rules: rules.length - 1,\r\n          hasquery: thisq.indexOf(\"(\") > -1,\r\n          minw: thisq.match(respond.regex.minw) && parseFloat(RegExp.$1) + (RegExp.$2 || \"\"),\r\n          maxw: thisq.match(respond.regex.maxw) && parseFloat(RegExp.$1) + (RegExp.$2 || \"\")\r\n        });\r\n      }\r\n    }\r\n    applyMedia();\r\n  }, makeRequests = function() {\r\n    if (requestQueue.length) {\r\n      var thisRequest = requestQueue.shift();\r\n      ajax(thisRequest.href, function(styles) {\r\n        translate(styles, thisRequest.href, thisRequest.media);\r\n        parsedSheets[thisRequest.href] = true;\r\n        w.setTimeout(function() {\r\n          makeRequests();\r\n        }, 0);\r\n      });\r\n    }\r\n  }, ripCSS = function() {\r\n    for (var i = 0; i < links.length; i++) {\r\n      var sheet = links[i], href = sheet.href, media = sheet.media, isCSS = sheet.rel && sheet.rel.toLowerCase() === \"stylesheet\";\r\n      if (!!href && isCSS && !parsedSheets[href]) {\r\n        if (sheet.styleSheet && sheet.styleSheet.rawCssText) {\r\n          translate(sheet.styleSheet.rawCssText, href, media);\r\n          parsedSheets[href] = true;\r\n        } else {\r\n          if (!/^([a-zA-Z:]*\\/\\/)/.test(href) && !base || href.replace(RegExp.$1, \"\").split(\"/\")[0] === w.location.host) {\r\n            if (href.substring(0, 2) === \"//\") {\r\n              href = w.location.protocol + href;\r\n            }\r\n            requestQueue.push({\r\n              href: href,\r\n              media: media\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n    makeRequests();\r\n  };\r\n  ripCSS();\r\n  respond.update = ripCSS;\r\n  respond.getEmValue = getEmValue;\r\n  function callMedia() {\r\n    applyMedia(true);\r\n  }\r\n  if (w.addEventListener) {\r\n    w.addEventListener(\"resize\", callMedia, false);\r\n  } else if (w.attachEvent) {\r\n    w.attachEvent(\"onresize\", callMedia);\r\n  }\r\n})(this);","/* jquery.signalR.core.js */\r\n/*global window:false */\r\n/*!\r\n * ASP.NET SignalR JavaScript Library v2.2.1\r\n * http://signalr.net/\r\n *\r\n * Copyright (c) .NET Foundation. All rights reserved.\r\n * Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n *\r\n */\r\n\r\n/// <reference path=\"Scripts/jquery-1.6.4.js\" />\r\n/// <reference path=\"jquery.signalR.version.js\" />\r\n(function ($, window, undefined) {\r\n\r\n    var resources = {\r\n        nojQuery: \"jQuery was not found. Please ensure jQuery is referenced before the SignalR client JavaScript file.\",\r\n        noTransportOnInit: \"No transport could be initialized successfully. Try specifying a different transport or none at all for auto initialization.\",\r\n        errorOnNegotiate: \"Error during negotiation request.\",\r\n        stoppedWhileLoading: \"The connection was stopped during page load.\",\r\n        stoppedWhileNegotiating: \"The connection was stopped during the negotiate request.\",\r\n        errorParsingNegotiateResponse: \"Error parsing negotiate response.\",\r\n        errorDuringStartRequest: \"Error during start request. Stopping the connection.\",\r\n        stoppedDuringStartRequest: \"The connection was stopped during the start request.\",\r\n        errorParsingStartResponse: \"Error parsing start response: '{0}'. Stopping the connection.\",\r\n        invalidStartResponse: \"Invalid start response: '{0}'. Stopping the connection.\",\r\n        protocolIncompatible: \"You are using a version of the client that isn't compatible with the server. Client version {0}, server version {1}.\",\r\n        sendFailed: \"Send failed.\",\r\n        parseFailed: \"Failed at parsing response: {0}\",\r\n        longPollFailed: \"Long polling request failed.\",\r\n        eventSourceFailedToConnect: \"EventSource failed to connect.\",\r\n        eventSourceError: \"Error raised by EventSource\",\r\n        webSocketClosed: \"WebSocket closed.\",\r\n        pingServerFailedInvalidResponse: \"Invalid ping response when pinging server: '{0}'.\",\r\n        pingServerFailed: \"Failed to ping server.\",\r\n        pingServerFailedStatusCode: \"Failed to ping server.  Server responded with status code {0}, stopping the connection.\",\r\n        pingServerFailedParse: \"Failed to parse ping server response, stopping the connection.\",\r\n        noConnectionTransport: \"Connection is in an invalid state, there is no transport active.\",\r\n        webSocketsInvalidState: \"The Web Socket transport is in an invalid state, transitioning into reconnecting.\",\r\n        reconnectTimeout: \"Couldn't reconnect within the configured timeout of {0} ms, disconnecting.\",\r\n        reconnectWindowTimeout: \"The client has been inactive since {0} and it has exceeded the inactivity timeout of {1} ms. Stopping the connection.\"\r\n    };\r\n\r\n    if (typeof ($) !== \"function\") {\r\n        // no jQuery!\r\n        throw new Error(resources.nojQuery);\r\n    }\r\n\r\n    var signalR,\r\n        _connection,\r\n        _pageLoaded = (window.document.readyState === \"complete\"),\r\n        _pageWindow = $(window),\r\n        _negotiateAbortText = \"__Negotiate Aborted__\",\r\n        events = {\r\n            onStart: \"onStart\",\r\n            onStarting: \"onStarting\",\r\n            onReceived: \"onReceived\",\r\n            onError: \"onError\",\r\n            onConnectionSlow: \"onConnectionSlow\",\r\n            onReconnecting: \"onReconnecting\",\r\n            onReconnect: \"onReconnect\",\r\n            onStateChanged: \"onStateChanged\",\r\n            onDisconnect: \"onDisconnect\"\r\n        },\r\n        ajaxDefaults = {\r\n            processData: true,\r\n            timeout: null,\r\n            async: true,\r\n            global: false,\r\n            cache: false\r\n        },\r\n        log = function (msg, logging) {\r\n            if (logging === false) {\r\n                return;\r\n            }\r\n            var m;\r\n            if (typeof (window.console) === \"undefined\") {\r\n                return;\r\n            }\r\n            m = \"[\" + new Date().toTimeString() + \"] SignalR: \" + msg;\r\n            if (window.console.debug) {\r\n                window.console.debug(m);\r\n            } else if (window.console.log) {\r\n                window.console.log(m);\r\n            }\r\n        },\r\n\r\n        changeState = function (connection, expectedState, newState) {\r\n            if (expectedState === connection.state) {\r\n                connection.state = newState;\r\n\r\n                $(connection).triggerHandler(events.onStateChanged, [{ oldState: expectedState, newState: newState }]);\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        isDisconnecting = function (connection) {\r\n            return connection.state === signalR.connectionState.disconnected;\r\n        },\r\n\r\n        supportsKeepAlive = function (connection) {\r\n            return connection._.keepAliveData.activated &&\r\n                   connection.transport.supportsKeepAlive(connection);\r\n        },\r\n\r\n        configureStopReconnectingTimeout = function (connection) {\r\n            var stopReconnectingTimeout,\r\n                onReconnectTimeout;\r\n\r\n            // Check if this connection has already been configured to stop reconnecting after a specified timeout.\r\n            // Without this check if a connection is stopped then started events will be bound multiple times.\r\n            if (!connection._.configuredStopReconnectingTimeout) {\r\n                onReconnectTimeout = function (connection) {\r\n                    var message = signalR._.format(signalR.resources.reconnectTimeout, connection.disconnectTimeout);\r\n                    connection.log(message);\r\n                    $(connection).triggerHandler(events.onError, [signalR._.error(message, /* source */ \"TimeoutException\")]);\r\n                    connection.stop(/* async */ false, /* notifyServer */ false);\r\n                };\r\n\r\n                connection.reconnecting(function () {\r\n                    var connection = this;\r\n\r\n                    // Guard against state changing in a previous user defined even handler\r\n                    if (connection.state === signalR.connectionState.reconnecting) {\r\n                        stopReconnectingTimeout = window.setTimeout(function () { onReconnectTimeout(connection); }, connection.disconnectTimeout);\r\n                    }\r\n                });\r\n\r\n                connection.stateChanged(function (data) {\r\n                    if (data.oldState === signalR.connectionState.reconnecting) {\r\n                        // Clear the pending reconnect timeout check\r\n                        window.clearTimeout(stopReconnectingTimeout);\r\n                    }\r\n                });\r\n\r\n                connection._.configuredStopReconnectingTimeout = true;\r\n            }\r\n        };\r\n\r\n    signalR = function (url, qs, logging) {\r\n        /// <summary>Creates a new SignalR connection for the given url</summary>\r\n        /// <param name=\"url\" type=\"String\">The URL of the long polling endpoint</param>\r\n        /// <param name=\"qs\" type=\"Object\">\r\n        ///     [Optional] Custom querystring parameters to add to the connection URL.\r\n        ///     If an object, every non-function member will be added to the querystring.\r\n        ///     If a string, it's added to the QS as specified.\r\n        /// </param>\r\n        /// <param name=\"logging\" type=\"Boolean\">\r\n        ///     [Optional] A flag indicating whether connection logging is enabled to the browser\r\n        ///     console/log. Defaults to false.\r\n        /// </param>\r\n\r\n        return new signalR.fn.init(url, qs, logging);\r\n    };\r\n\r\n    signalR._ = {\r\n        defaultContentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\r\n\r\n        ieVersion: (function () {\r\n            var version,\r\n                matches;\r\n\r\n            if (window.navigator.appName === 'Microsoft Internet Explorer') {\r\n                // Check if the user agent has the pattern \"MSIE (one or more numbers).(one or more numbers)\";\r\n                matches = /MSIE ([0-9]+\\.[0-9]+)/.exec(window.navigator.userAgent);\r\n\r\n                if (matches) {\r\n                    version = window.parseFloat(matches[1]);\r\n                }\r\n            }\r\n\r\n            // undefined value means not IE\r\n            return version;\r\n        })(),\r\n\r\n        error: function (message, source, context) {\r\n            var e = new Error(message);\r\n            e.source = source;\r\n\r\n            if (typeof context !== \"undefined\") {\r\n                e.context = context;\r\n            }\r\n\r\n            return e;\r\n        },\r\n\r\n        transportError: function (message, transport, source, context) {\r\n            var e = this.error(message, source, context);\r\n            e.transport = transport ? transport.name : undefined;\r\n            return e;\r\n        },\r\n\r\n        format: function () {\r\n            /// <summary>Usage: format(\"Hi {0}, you are {1}!\", \"Foo\", 100) </summary>\r\n            var s = arguments[0];\r\n            for (var i = 0; i < arguments.length - 1; i++) {\r\n                s = s.replace(\"{\" + i + \"}\", arguments[i + 1]);\r\n            }\r\n            return s;\r\n        },\r\n\r\n        firefoxMajorVersion: function (userAgent) {\r\n            // Firefox user agents: http://useragentstring.com/pages/Firefox/\r\n            var matches = userAgent.match(/Firefox\\/(\\d+)/);\r\n            if (!matches || !matches.length || matches.length < 2) {\r\n                return 0;\r\n            }\r\n            return parseInt(matches[1], 10 /* radix */);\r\n        },\r\n\r\n        configurePingInterval: function (connection) {\r\n            var config = connection._.config,\r\n                onFail = function (error) {\r\n                    $(connection).triggerHandler(events.onError, [error]);\r\n                };\r\n\r\n            if (config && !connection._.pingIntervalId && config.pingInterval) {\r\n                connection._.pingIntervalId = window.setInterval(function () {\r\n                    signalR.transports._logic.pingServer(connection).fail(onFail);\r\n                }, config.pingInterval);\r\n            }\r\n        }\r\n    };\r\n\r\n    signalR.events = events;\r\n\r\n    signalR.resources = resources;\r\n\r\n    signalR.ajaxDefaults = ajaxDefaults;\r\n\r\n    signalR.changeState = changeState;\r\n\r\n    signalR.isDisconnecting = isDisconnecting;\r\n\r\n    signalR.connectionState = {\r\n        connecting: 0,\r\n        connected: 1,\r\n        reconnecting: 2,\r\n        disconnected: 4\r\n    };\r\n\r\n    signalR.hub = {\r\n        start: function () {\r\n            // This will get replaced with the real hub connection start method when hubs is referenced correctly\r\n            throw new Error(\"SignalR: Error loading hubs. Ensure your hubs reference is correct, e.g. <script src='/signalr/js'></script>.\");\r\n        }\r\n    };\r\n\r\n    // .on() was added in version 1.7.0, .load() was removed in version 3.0.0 so we fallback to .load() if .on() does\r\n    // not exist to not break existing applications\r\n    if (typeof _pageWindow.on == \"function\") {\r\n        _pageWindow.on(\"load\", function () { _pageLoaded = true; });\r\n    }\r\n    else {\r\n        _pageWindow.load(function () { _pageLoaded = true; });\r\n    }\r\n\r\n    function validateTransport(requestedTransport, connection) {\r\n        /// <summary>Validates the requested transport by cross checking it with the pre-defined signalR.transports</summary>\r\n        /// <param name=\"requestedTransport\" type=\"Object\">The designated transports that the user has specified.</param>\r\n        /// <param name=\"connection\" type=\"signalR\">The connection that will be using the requested transports.  Used for logging purposes.</param>\r\n        /// <returns type=\"Object\" />\r\n\r\n        if ($.isArray(requestedTransport)) {\r\n            // Go through transport array and remove an \"invalid\" tranports\r\n            for (var i = requestedTransport.length - 1; i >= 0; i--) {\r\n                var transport = requestedTransport[i];\r\n                if ($.type(transport) !== \"string\" || !signalR.transports[transport]) {\r\n                    connection.log(\"Invalid transport: \" + transport + \", removing it from the transports list.\");\r\n                    requestedTransport.splice(i, 1);\r\n                }\r\n            }\r\n\r\n            // Verify we still have transports left, if we dont then we have invalid transports\r\n            if (requestedTransport.length === 0) {\r\n                connection.log(\"No transports remain within the specified transport array.\");\r\n                requestedTransport = null;\r\n            }\r\n        } else if (!signalR.transports[requestedTransport] && requestedTransport !== \"auto\") {\r\n            connection.log(\"Invalid transport: \" + requestedTransport.toString() + \".\");\r\n            requestedTransport = null;\r\n        } else if (requestedTransport === \"auto\" && signalR._.ieVersion <= 8) {\r\n            // If we're doing an auto transport and we're IE8 then force longPolling, #1764\r\n            return [\"longPolling\"];\r\n\r\n        }\r\n\r\n        return requestedTransport;\r\n    }\r\n\r\n    function getDefaultPort(protocol) {\r\n        if (protocol === \"http:\") {\r\n            return 80;\r\n        } else if (protocol === \"https:\") {\r\n            return 443;\r\n        }\r\n    }\r\n\r\n    function addDefaultPort(protocol, url) {\r\n        // Remove ports  from url.  We have to check if there's a / or end of line\r\n        // following the port in order to avoid removing ports such as 8080.\r\n        if (url.match(/:\\d+$/)) {\r\n            return url;\r\n        } else {\r\n            return url + \":\" + getDefaultPort(protocol);\r\n        }\r\n    }\r\n\r\n    function ConnectingMessageBuffer(connection, drainCallback) {\r\n        var that = this,\r\n            buffer = [];\r\n\r\n        that.tryBuffer = function (message) {\r\n            if (connection.state === $.signalR.connectionState.connecting) {\r\n                buffer.push(message);\r\n\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        };\r\n\r\n        that.drain = function () {\r\n            // Ensure that the connection is connected when we drain (do not want to drain while a connection is not active)\r\n            if (connection.state === $.signalR.connectionState.connected) {\r\n                while (buffer.length > 0) {\r\n                    drainCallback(buffer.shift());\r\n                }\r\n            }\r\n        };\r\n\r\n        that.clear = function () {\r\n            buffer = [];\r\n        };\r\n    }\r\n\r\n    signalR.fn = signalR.prototype = {\r\n        init: function (url, qs, logging) {\r\n            var $connection = $(this);\r\n\r\n            this.url = url;\r\n            this.qs = qs;\r\n            this.lastError = null;\r\n            this._ = {\r\n                keepAliveData: {},\r\n                connectingMessageBuffer: new ConnectingMessageBuffer(this, function (message) {\r\n                    $connection.triggerHandler(events.onReceived, [message]);\r\n                }),\r\n                lastMessageAt: new Date().getTime(),\r\n                lastActiveAt: new Date().getTime(),\r\n                beatInterval: 5000, // Default value, will only be overridden if keep alive is enabled,\r\n                beatHandle: null,\r\n                totalTransportConnectTimeout: 0 // This will be the sum of the TransportConnectTimeout sent in response to negotiate and connection.transportConnectTimeout\r\n            };\r\n            if (typeof (logging) === \"boolean\") {\r\n                this.logging = logging;\r\n            }\r\n        },\r\n\r\n        _parseResponse: function (response) {\r\n            var that = this;\r\n\r\n            if (!response) {\r\n                return response;\r\n            } else if (typeof response === \"string\") {\r\n                return that.json.parse(response);\r\n            } else {\r\n                return response;\r\n            }\r\n        },\r\n\r\n        _originalJson: window.JSON,\r\n\r\n        json: window.JSON,\r\n\r\n        isCrossDomain: function (url, against) {\r\n            /// <summary>Checks if url is cross domain</summary>\r\n            /// <param name=\"url\" type=\"String\">The base URL</param>\r\n            /// <param name=\"against\" type=\"Object\">\r\n            ///     An optional argument to compare the URL against, if not specified it will be set to window.location.\r\n            ///     If specified it must contain a protocol and a host property.\r\n            /// </param>\r\n            var link;\r\n\r\n            url = $.trim(url);\r\n\r\n            against = against || window.location;\r\n\r\n            if (url.indexOf(\"http\") !== 0) {\r\n                return false;\r\n            }\r\n\r\n            // Create an anchor tag.\r\n            link = window.document.createElement(\"a\");\r\n            link.href = url;\r\n\r\n            // When checking for cross domain we have to special case port 80 because the window.location will remove the\r\n            return link.protocol + addDefaultPort(link.protocol, link.host) !== against.protocol + addDefaultPort(against.protocol, against.host);\r\n        },\r\n\r\n        ajaxDataType: \"text\",\r\n\r\n        contentType: \"application/json; charset=UTF-8\",\r\n\r\n        logging: false,\r\n\r\n        state: signalR.connectionState.disconnected,\r\n\r\n        clientProtocol: \"1.5\",\r\n\r\n        reconnectDelay: 2000,\r\n\r\n        transportConnectTimeout: 0,\r\n\r\n        disconnectTimeout: 30000, // This should be set by the server in response to the negotiate request (30s default)\r\n\r\n        reconnectWindow: 30000, // This should be set by the server in response to the negotiate request\r\n\r\n        keepAliveWarnAt: 2 / 3, // Warn user of slow connection if we breach the X% mark of the keep alive timeout\r\n\r\n        start: function (options, callback) {\r\n            /// <summary>Starts the connection</summary>\r\n            /// <param name=\"options\" type=\"Object\">Options map</param>\r\n            /// <param name=\"callback\" type=\"Function\">A callback function to execute when the connection has started</param>\r\n            var connection = this,\r\n                config = {\r\n                    pingInterval: 300000,\r\n                    waitForPageLoad: true,\r\n                    transport: \"auto\",\r\n                    jsonp: false\r\n                },\r\n                initialize,\r\n                deferred = connection._deferral || $.Deferred(), // Check to see if there is a pre-existing deferral that's being built on, if so we want to keep using it\r\n                parser = window.document.createElement(\"a\");\r\n\r\n            connection.lastError = null;\r\n\r\n            // Persist the deferral so that if start is called multiple times the same deferral is used.\r\n            connection._deferral = deferred;\r\n\r\n            if (!connection.json) {\r\n                // no JSON!\r\n                throw new Error(\"SignalR: No JSON parser found. Please ensure json2.js is referenced before the SignalR.js file if you need to support clients without native JSON parsing support, e.g. IE<8.\");\r\n            }\r\n\r\n            if ($.type(options) === \"function\") {\r\n                // Support calling with single callback parameter\r\n                callback = options;\r\n            } else if ($.type(options) === \"object\") {\r\n                $.extend(config, options);\r\n                if ($.type(config.callback) === \"function\") {\r\n                    callback = config.callback;\r\n                }\r\n            }\r\n\r\n            config.transport = validateTransport(config.transport, connection);\r\n\r\n            // If the transport is invalid throw an error and abort start\r\n            if (!config.transport) {\r\n                throw new Error(\"SignalR: Invalid transport(s) specified, aborting start.\");\r\n            }\r\n\r\n            connection._.config = config;\r\n\r\n            // Check to see if start is being called prior to page load\r\n            // If waitForPageLoad is true we then want to re-direct function call to the window load event\r\n            if (!_pageLoaded && config.waitForPageLoad === true) {\r\n                connection._.deferredStartHandler = function () {\r\n                    connection.start(options, callback);\r\n                };\r\n                _pageWindow.bind(\"load\", connection._.deferredStartHandler);\r\n\r\n                return deferred.promise();\r\n            }\r\n\r\n            // If we're already connecting just return the same deferral as the original connection start\r\n            if (connection.state === signalR.connectionState.connecting) {\r\n                return deferred.promise();\r\n            } else if (changeState(connection,\r\n                            signalR.connectionState.disconnected,\r\n                            signalR.connectionState.connecting) === false) {\r\n                // We're not connecting so try and transition into connecting.\r\n                // If we fail to transition then we're either in connected or reconnecting.\r\n\r\n                deferred.resolve(connection);\r\n                return deferred.promise();\r\n            }\r\n\r\n            configureStopReconnectingTimeout(connection);\r\n\r\n            // Resolve the full url\r\n            parser.href = connection.url;\r\n            if (!parser.protocol || parser.protocol === \":\") {\r\n                connection.protocol = window.document.location.protocol;\r\n                connection.host = parser.host || window.document.location.host;\r\n            } else {\r\n                connection.protocol = parser.protocol;\r\n                connection.host = parser.host;\r\n            }\r\n\r\n            connection.baseUrl = connection.protocol + \"//\" + connection.host;\r\n\r\n            // Set the websocket protocol\r\n            connection.wsProtocol = connection.protocol === \"https:\" ? \"wss://\" : \"ws://\";\r\n\r\n            // If jsonp with no/auto transport is specified, then set the transport to long polling\r\n            // since that is the only transport for which jsonp really makes sense.\r\n            // Some developers might actually choose to specify jsonp for same origin requests\r\n            // as demonstrated by Issue #623.\r\n            if (config.transport === \"auto\" && config.jsonp === true) {\r\n                config.transport = \"longPolling\";\r\n            }\r\n\r\n            // If the url is protocol relative, prepend the current windows protocol to the url.\r\n            if (connection.url.indexOf(\"//\") === 0) {\r\n                connection.url = window.location.protocol + connection.url;\r\n                connection.log(\"Protocol relative URL detected, normalizing it to '\" + connection.url + \"'.\");\r\n            }\r\n\r\n            if (this.isCrossDomain(connection.url)) {\r\n                connection.log(\"Auto detected cross domain url.\");\r\n\r\n                if (config.transport === \"auto\") {\r\n                    // TODO: Support XDM with foreverFrame\r\n                    config.transport = [\"webSockets\", \"serverSentEvents\", \"longPolling\"];\r\n                }\r\n\r\n                if (typeof (config.withCredentials) === \"undefined\") {\r\n                    config.withCredentials = true;\r\n                }\r\n\r\n                // Determine if jsonp is the only choice for negotiation, ajaxSend and ajaxAbort.\r\n                // i.e. if the browser doesn't supports CORS\r\n                // If it is, ignore any preference to the contrary, and switch to jsonp.\r\n                if (!config.jsonp) {\r\n                    config.jsonp = !$.support.cors;\r\n\r\n                    if (config.jsonp) {\r\n                        connection.log(\"Using jsonp because this browser doesn't support CORS.\");\r\n                    }\r\n                }\r\n\r\n                connection.contentType = signalR._.defaultContentType;\r\n            }\r\n\r\n            connection.withCredentials = config.withCredentials;\r\n\r\n            connection.ajaxDataType = config.jsonp ? \"jsonp\" : \"text\";\r\n\r\n            $(connection).bind(events.onStart, function (e, data) {\r\n                if ($.type(callback) === \"function\") {\r\n                    callback.call(connection);\r\n                }\r\n                deferred.resolve(connection);\r\n            });\r\n\r\n            connection._.initHandler = signalR.transports._logic.initHandler(connection);\r\n\r\n            initialize = function (transports, index) {\r\n                var noTransportError = signalR._.error(resources.noTransportOnInit);\r\n\r\n                index = index || 0;\r\n                if (index >= transports.length) {\r\n                    if (index === 0) {\r\n                        connection.log(\"No transports supported by the server were selected.\");\r\n                    } else if (index === 1) {\r\n                        connection.log(\"No fallback transports were selected.\");\r\n                    } else {\r\n                        connection.log(\"Fallback transports exhausted.\");\r\n                    }\r\n\r\n                    // No transport initialized successfully\r\n                    $(connection).triggerHandler(events.onError, [noTransportError]);\r\n                    deferred.reject(noTransportError);\r\n                    // Stop the connection if it has connected and move it into the disconnected state\r\n                    connection.stop();\r\n                    return;\r\n                }\r\n\r\n                // The connection was aborted\r\n                if (connection.state === signalR.connectionState.disconnected) {\r\n                    return;\r\n                }\r\n\r\n                var transportName = transports[index],\r\n                    transport = signalR.transports[transportName],\r\n                    onFallback = function () {\r\n                        initialize(transports, index + 1);\r\n                    };\r\n\r\n                connection.transport = transport;\r\n\r\n                try {\r\n                    connection._.initHandler.start(transport, function () { // success\r\n                        // Firefox 11+ doesn't allow sync XHR withCredentials: https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest#withCredentials\r\n                        var isFirefox11OrGreater = signalR._.firefoxMajorVersion(window.navigator.userAgent) >= 11,\r\n                            asyncAbort = !!connection.withCredentials && isFirefox11OrGreater;\r\n\r\n                        connection.log(\"The start request succeeded. Transitioning to the connected state.\");\r\n\r\n                        if (supportsKeepAlive(connection)) {\r\n                            signalR.transports._logic.monitorKeepAlive(connection);\r\n                        }\r\n\r\n                        signalR.transports._logic.startHeartbeat(connection);\r\n\r\n                        // Used to ensure low activity clients maintain their authentication.\r\n                        // Must be configured once a transport has been decided to perform valid ping requests.\r\n                        signalR._.configurePingInterval(connection);\r\n\r\n                        if (!changeState(connection,\r\n                                            signalR.connectionState.connecting,\r\n                                            signalR.connectionState.connected)) {\r\n                            connection.log(\"WARNING! The connection was not in the connecting state.\");\r\n                        }\r\n\r\n                        // Drain any incoming buffered messages (messages that came in prior to connect)\r\n                        connection._.connectingMessageBuffer.drain();\r\n\r\n                        $(connection).triggerHandler(events.onStart);\r\n\r\n                        // wire the stop handler for when the user leaves the page\r\n                        _pageWindow.bind(\"unload\", function () {\r\n                            connection.log(\"Window unloading, stopping the connection.\");\r\n\r\n                            connection.stop(asyncAbort);\r\n                        });\r\n\r\n                        if (isFirefox11OrGreater) {\r\n                            // Firefox does not fire cross-domain XHRs in the normal unload handler on tab close.\r\n                            // #2400\r\n                            _pageWindow.bind(\"beforeunload\", function () {\r\n                                // If connection.stop() runs runs in beforeunload and fails, it will also fail\r\n                                // in unload unless connection.stop() runs after a timeout.\r\n                                window.setTimeout(function () {\r\n                                    connection.stop(asyncAbort);\r\n                                }, 0);\r\n                            });\r\n                        }\r\n                    }, onFallback);\r\n                }\r\n                catch (error) {\r\n                    connection.log(transport.name + \" transport threw '\" + error.message + \"' when attempting to start.\");\r\n                    onFallback();\r\n                }\r\n            };\r\n\r\n            var url = connection.url + \"/negotiate\",\r\n                onFailed = function (error, connection) {\r\n                    var err = signalR._.error(resources.errorOnNegotiate, error, connection._.negotiateRequest);\r\n\r\n                    $(connection).triggerHandler(events.onError, err);\r\n                    deferred.reject(err);\r\n                    // Stop the connection if negotiate failed\r\n                    connection.stop();\r\n                };\r\n\r\n            $(connection).triggerHandler(events.onStarting);\r\n\r\n            url = signalR.transports._logic.prepareQueryString(connection, url);\r\n\r\n            connection.log(\"Negotiating with '\" + url + \"'.\");\r\n\r\n            // Save the ajax negotiate request object so we can abort it if stop is called while the request is in flight.\r\n            connection._.negotiateRequest = signalR.transports._logic.ajax(connection, {\r\n                url: url,\r\n                error: function (error, statusText) {\r\n                    // We don't want to cause any errors if we're aborting our own negotiate request.\r\n                    if (statusText !== _negotiateAbortText) {\r\n                        onFailed(error, connection);\r\n                    } else {\r\n                        // This rejection will noop if the deferred has already been resolved or rejected.\r\n                        deferred.reject(signalR._.error(resources.stoppedWhileNegotiating, null /* error */, connection._.negotiateRequest));\r\n                    }\r\n                },\r\n                success: function (result) {\r\n                    var res,\r\n                        keepAliveData,\r\n                        protocolError,\r\n                        transports = [],\r\n                        supportedTransports = [];\r\n\r\n                    try {\r\n                        res = connection._parseResponse(result);\r\n                    } catch (error) {\r\n                        onFailed(signalR._.error(resources.errorParsingNegotiateResponse, error), connection);\r\n                        return;\r\n                    }\r\n\r\n                    keepAliveData = connection._.keepAliveData;\r\n                    connection.appRelativeUrl = res.Url;\r\n                    connection.id = res.ConnectionId;\r\n                    connection.token = res.ConnectionToken;\r\n                    connection.webSocketServerUrl = res.WebSocketServerUrl;\r\n\r\n                    // The long poll timeout is the ConnectionTimeout plus 10 seconds\r\n                    connection._.pollTimeout = res.ConnectionTimeout * 1000 + 10000; // in ms\r\n\r\n                    // Once the server has labeled the PersistentConnection as Disconnected, we should stop attempting to reconnect\r\n                    // after res.DisconnectTimeout seconds.\r\n                    connection.disconnectTimeout = res.DisconnectTimeout * 1000; // in ms\r\n\r\n                    // Add the TransportConnectTimeout from the response to the transportConnectTimeout from the client to calculate the total timeout\r\n                    connection._.totalTransportConnectTimeout = connection.transportConnectTimeout + res.TransportConnectTimeout * 1000;\r\n\r\n                    // If we have a keep alive\r\n                    if (res.KeepAliveTimeout) {\r\n                        // Register the keep alive data as activated\r\n                        keepAliveData.activated = true;\r\n\r\n                        // Timeout to designate when to force the connection into reconnecting converted to milliseconds\r\n                        keepAliveData.timeout = res.KeepAliveTimeout * 1000;\r\n\r\n                        // Timeout to designate when to warn the developer that the connection may be dead or is not responding.\r\n                        keepAliveData.timeoutWarning = keepAliveData.timeout * connection.keepAliveWarnAt;\r\n\r\n                        // Instantiate the frequency in which we check the keep alive.  It must be short in order to not miss/pick up any changes\r\n                        connection._.beatInterval = (keepAliveData.timeout - keepAliveData.timeoutWarning) / 3;\r\n                    } else {\r\n                        keepAliveData.activated = false;\r\n                    }\r\n\r\n                    connection.reconnectWindow = connection.disconnectTimeout + (keepAliveData.timeout || 0);\r\n\r\n                    if (!res.ProtocolVersion || res.ProtocolVersion !== connection.clientProtocol) {\r\n                        protocolError = signalR._.error(signalR._.format(resources.protocolIncompatible, connection.clientProtocol, res.ProtocolVersion));\r\n                        $(connection).triggerHandler(events.onError, [protocolError]);\r\n                        deferred.reject(protocolError);\r\n\r\n                        return;\r\n                    }\r\n\r\n                    $.each(signalR.transports, function (key) {\r\n                        if ((key.indexOf(\"_\") === 0) || (key === \"webSockets\" && !res.TryWebSockets)) {\r\n                            return true;\r\n                        }\r\n                        supportedTransports.push(key);\r\n                    });\r\n\r\n                    if ($.isArray(config.transport)) {\r\n                        $.each(config.transport, function (_, transport) {\r\n                            if ($.inArray(transport, supportedTransports) >= 0) {\r\n                                transports.push(transport);\r\n                            }\r\n                        });\r\n                    } else if (config.transport === \"auto\") {\r\n                        transports = supportedTransports;\r\n                    } else if ($.inArray(config.transport, supportedTransports) >= 0) {\r\n                        transports.push(config.transport);\r\n                    }\r\n\r\n                    initialize(transports);\r\n                }\r\n            });\r\n\r\n            return deferred.promise();\r\n        },\r\n\r\n        starting: function (callback) {\r\n            /// <summary>Adds a callback that will be invoked before anything is sent over the connection</summary>\r\n            /// <param name=\"callback\" type=\"Function\">A callback function to execute before the connection is fully instantiated.</param>\r\n            /// <returns type=\"signalR\" />\r\n            var connection = this;\r\n            $(connection).bind(events.onStarting, function (e, data) {\r\n                callback.call(connection);\r\n            });\r\n            return connection;\r\n        },\r\n\r\n        send: function (data) {\r\n            /// <summary>Sends data over the connection</summary>\r\n            /// <param name=\"data\" type=\"String\">The data to send over the connection</param>\r\n            /// <returns type=\"signalR\" />\r\n            var connection = this;\r\n\r\n            if (connection.state === signalR.connectionState.disconnected) {\r\n                // Connection hasn't been started yet\r\n                throw new Error(\"SignalR: Connection must be started before data can be sent. Call .start() before .send()\");\r\n            }\r\n\r\n            if (connection.state === signalR.connectionState.connecting) {\r\n                // Connection hasn't been started yet\r\n                throw new Error(\"SignalR: Connection has not been fully initialized. Use .start().done() or .start().fail() to run logic after the connection has started.\");\r\n            }\r\n\r\n            connection.transport.send(connection, data);\r\n            // REVIEW: Should we return deferred here?\r\n            return connection;\r\n        },\r\n\r\n        received: function (callback) {\r\n            /// <summary>Adds a callback that will be invoked after anything is received over the connection</summary>\r\n            /// <param name=\"callback\" type=\"Function\">A callback function to execute when any data is received on the connection</param>\r\n            /// <returns type=\"signalR\" />\r\n            var connection = this;\r\n            $(connection).bind(events.onReceived, function (e, data) {\r\n                callback.call(connection, data);\r\n            });\r\n            return connection;\r\n        },\r\n\r\n        stateChanged: function (callback) {\r\n            /// <summary>Adds a callback that will be invoked when the connection state changes</summary>\r\n            /// <param name=\"callback\" type=\"Function\">A callback function to execute when the connection state changes</param>\r\n            /// <returns type=\"signalR\" />\r\n            var connection = this;\r\n            $(connection).bind(events.onStateChanged, function (e, data) {\r\n                callback.call(connection, data);\r\n            });\r\n            return connection;\r\n        },\r\n\r\n        error: function (callback) {\r\n            /// <summary>Adds a callback that will be invoked after an error occurs with the connection</summary>\r\n            /// <param name=\"callback\" type=\"Function\">A callback function to execute when an error occurs on the connection</param>\r\n            /// <returns type=\"signalR\" />\r\n            var connection = this;\r\n            $(connection).bind(events.onError, function (e, errorData, sendData) {\r\n                connection.lastError = errorData;\r\n                // In practice 'errorData' is the SignalR built error object.\r\n                // In practice 'sendData' is undefined for all error events except those triggered by\r\n                // 'ajaxSend' and 'webSockets.send'.'sendData' is the original send payload.\r\n                callback.call(connection, errorData, sendData);\r\n            });\r\n            return connection;\r\n        },\r\n\r\n        disconnected: function (callback) {\r\n            /// <summary>Adds a callback that will be invoked when the client disconnects</summary>\r\n            /// <param name=\"callback\" type=\"Function\">A callback function to execute when the connection is broken</param>\r\n            /// <returns type=\"signalR\" />\r\n            var connection = this;\r\n            $(connection).bind(events.onDisconnect, function (e, data) {\r\n                callback.call(connection);\r\n            });\r\n            return connection;\r\n        },\r\n\r\n        connectionSlow: function (callback) {\r\n            /// <summary>Adds a callback that will be invoked when the client detects a slow connection</summary>\r\n            /// <param name=\"callback\" type=\"Function\">A callback function to execute when the connection is slow</param>\r\n            /// <returns type=\"signalR\" />\r\n            var connection = this;\r\n            $(connection).bind(events.onConnectionSlow, function (e, data) {\r\n                callback.call(connection);\r\n            });\r\n\r\n            return connection;\r\n        },\r\n\r\n        reconnecting: function (callback) {\r\n            /// <summary>Adds a callback that will be invoked when the underlying transport begins reconnecting</summary>\r\n            /// <param name=\"callback\" type=\"Function\">A callback function to execute when the connection enters a reconnecting state</param>\r\n            /// <returns type=\"signalR\" />\r\n            var connection = this;\r\n            $(connection).bind(events.onReconnecting, function (e, data) {\r\n                callback.call(connection);\r\n            });\r\n            return connection;\r\n        },\r\n\r\n        reconnected: function (callback) {\r\n            /// <summary>Adds a callback that will be invoked when the underlying transport reconnects</summary>\r\n            /// <param name=\"callback\" type=\"Function\">A callback function to execute when the connection is restored</param>\r\n            /// <returns type=\"signalR\" />\r\n            var connection = this;\r\n            $(connection).bind(events.onReconnect, function (e, data) {\r\n                callback.call(connection);\r\n            });\r\n            return connection;\r\n        },\r\n\r\n        stop: function (async, notifyServer) {\r\n            /// <summary>Stops listening</summary>\r\n            /// <param name=\"async\" type=\"Boolean\">Whether or not to asynchronously abort the connection</param>\r\n            /// <param name=\"notifyServer\" type=\"Boolean\">Whether we want to notify the server that we are aborting the connection</param>\r\n            /// <returns type=\"signalR\" />\r\n            var connection = this,\r\n                // Save deferral because this is always cleaned up\r\n                deferral = connection._deferral;\r\n\r\n            // Verify that we've bound a load event.\r\n            if (connection._.deferredStartHandler) {\r\n                // Unbind the event.\r\n                _pageWindow.unbind(\"load\", connection._.deferredStartHandler);\r\n            }\r\n\r\n            // Always clean up private non-timeout based state.\r\n            delete connection._.config;\r\n            delete connection._.deferredStartHandler;\r\n\r\n            // This needs to be checked despite the connection state because a connection start can be deferred until page load.\r\n            // If we've deferred the start due to a page load we need to unbind the \"onLoad\" -> start event.\r\n            if (!_pageLoaded && (!connection._.config || connection._.config.waitForPageLoad === true)) {\r\n                connection.log(\"Stopping connection prior to negotiate.\");\r\n\r\n                // If we have a deferral we should reject it\r\n                if (deferral) {\r\n                    deferral.reject(signalR._.error(resources.stoppedWhileLoading));\r\n                }\r\n\r\n                // Short-circuit because the start has not been fully started.\r\n                return;\r\n            }\r\n\r\n            if (connection.state === signalR.connectionState.disconnected) {\r\n                return;\r\n            }\r\n\r\n            connection.log(\"Stopping connection.\");\r\n\r\n            // Clear this no matter what\r\n            window.clearTimeout(connection._.beatHandle);\r\n            window.clearInterval(connection._.pingIntervalId);\r\n\r\n            if (connection.transport) {\r\n                connection.transport.stop(connection);\r\n\r\n                if (notifyServer !== false) {\r\n                    connection.transport.abort(connection, async);\r\n                }\r\n\r\n                if (supportsKeepAlive(connection)) {\r\n                    signalR.transports._logic.stopMonitoringKeepAlive(connection);\r\n                }\r\n\r\n                connection.transport = null;\r\n            }\r\n\r\n            if (connection._.negotiateRequest) {\r\n                // If the negotiation request has already completed this will noop.\r\n                connection._.negotiateRequest.abort(_negotiateAbortText);\r\n                delete connection._.negotiateRequest;\r\n            }\r\n\r\n            // Ensure that initHandler.stop() is called before connection._deferral is deleted\r\n            if (connection._.initHandler) {\r\n                connection._.initHandler.stop();\r\n            }\r\n\r\n            delete connection._deferral;\r\n            delete connection.messageId;\r\n            delete connection.groupsToken;\r\n            delete connection.id;\r\n            delete connection._.pingIntervalId;\r\n            delete connection._.lastMessageAt;\r\n            delete connection._.lastActiveAt;\r\n\r\n            // Clear out our message buffer\r\n            connection._.connectingMessageBuffer.clear();\r\n\r\n            // Trigger the disconnect event\r\n            changeState(connection, connection.state, signalR.connectionState.disconnected);\r\n            $(connection).triggerHandler(events.onDisconnect);\r\n\r\n            return connection;\r\n        },\r\n\r\n        log: function (msg) {\r\n            log(msg, this.logging);\r\n        }\r\n    };\r\n\r\n    signalR.fn.init.prototype = signalR.fn;\r\n\r\n    signalR.noConflict = function () {\r\n        /// <summary>Reinstates the original value of $.connection and returns the signalR object for manual assignment</summary>\r\n        /// <returns type=\"signalR\" />\r\n        if ($.connection === signalR) {\r\n            $.connection = _connection;\r\n        }\r\n        return signalR;\r\n    };\r\n\r\n    if ($.connection) {\r\n        _connection = $.connection;\r\n    }\r\n\r\n    $.connection = $.signalR = signalR;\r\n\r\n}(window.jQuery, window));\r\n/* jquery.signalR.transports.common.js */\r\n// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\n/*global window:false */\r\n/// <reference path=\"jquery.signalR.core.js\" />\r\n\r\n(function ($, window, undefined) {\r\n\r\n    var signalR = $.signalR,\r\n        events = $.signalR.events,\r\n        changeState = $.signalR.changeState,\r\n        startAbortText = \"__Start Aborted__\",\r\n        transportLogic;\r\n\r\n    signalR.transports = {};\r\n\r\n    function beat(connection) {\r\n        if (connection._.keepAliveData.monitoring) {\r\n            checkIfAlive(connection);\r\n        }\r\n\r\n        // Ensure that we successfully marked active before continuing the heartbeat.\r\n        if (transportLogic.markActive(connection)) {\r\n            connection._.beatHandle = window.setTimeout(function () {\r\n                beat(connection);\r\n            }, connection._.beatInterval);\r\n        }\r\n    }\r\n\r\n    function checkIfAlive(connection) {\r\n        var keepAliveData = connection._.keepAliveData,\r\n            timeElapsed;\r\n\r\n        // Only check if we're connected\r\n        if (connection.state === signalR.connectionState.connected) {\r\n            timeElapsed = new Date().getTime() - connection._.lastMessageAt;\r\n\r\n            // Check if the keep alive has completely timed out\r\n            if (timeElapsed >= keepAliveData.timeout) {\r\n                connection.log(\"Keep alive timed out.  Notifying transport that connection has been lost.\");\r\n\r\n                // Notify transport that the connection has been lost\r\n                connection.transport.lostConnection(connection);\r\n            } else if (timeElapsed >= keepAliveData.timeoutWarning) {\r\n                // This is to assure that the user only gets a single warning\r\n                if (!keepAliveData.userNotified) {\r\n                    connection.log(\"Keep alive has been missed, connection may be dead/slow.\");\r\n                    $(connection).triggerHandler(events.onConnectionSlow);\r\n                    keepAliveData.userNotified = true;\r\n                }\r\n            } else {\r\n                keepAliveData.userNotified = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    function getAjaxUrl(connection, path) {\r\n        var url = connection.url + path;\r\n\r\n        if (connection.transport) {\r\n            url += \"?transport=\" + connection.transport.name;\r\n        }\r\n\r\n        return transportLogic.prepareQueryString(connection, url);\r\n    }\r\n\r\n    function InitHandler(connection) {\r\n        this.connection = connection;\r\n\r\n        this.startRequested = false;\r\n        this.startCompleted = false;\r\n        this.connectionStopped = false;\r\n    }\r\n\r\n    InitHandler.prototype = {\r\n        start: function (transport, onSuccess, onFallback) {\r\n            var that = this,\r\n                connection = that.connection,\r\n                failCalled = false;\r\n\r\n            if (that.startRequested || that.connectionStopped) {\r\n                connection.log(\"WARNING! \" + transport.name + \" transport cannot be started. Initialization ongoing or completed.\");\r\n                return;\r\n            }\r\n\r\n            connection.log(transport.name + \" transport starting.\");\r\n\r\n            transport.start(connection, function () {\r\n                if (!failCalled) {\r\n                    that.initReceived(transport, onSuccess);\r\n                }\r\n            }, function (error) {\r\n                // Don't allow the same transport to cause onFallback to be called twice\r\n                if (!failCalled) {\r\n                    failCalled = true;\r\n                    that.transportFailed(transport, error, onFallback);\r\n                }\r\n\r\n                // Returns true if the transport should stop;\r\n                // false if it should attempt to reconnect\r\n                return !that.startCompleted || that.connectionStopped;\r\n            });\r\n\r\n            that.transportTimeoutHandle = window.setTimeout(function () {\r\n                if (!failCalled) {\r\n                    failCalled = true;\r\n                    connection.log(transport.name + \" transport timed out when trying to connect.\");\r\n                    that.transportFailed(transport, undefined, onFallback);\r\n                }\r\n            }, connection._.totalTransportConnectTimeout);\r\n        },\r\n\r\n        stop: function () {\r\n            this.connectionStopped = true;\r\n            window.clearTimeout(this.transportTimeoutHandle);\r\n            signalR.transports._logic.tryAbortStartRequest(this.connection);\r\n        },\r\n\r\n        initReceived: function (transport, onSuccess) {\r\n            var that = this,\r\n                connection = that.connection;\r\n\r\n            if (that.startRequested) {\r\n                connection.log(\"WARNING! The client received multiple init messages.\");\r\n                return;\r\n            }\r\n\r\n            if (that.connectionStopped) {\r\n                return;\r\n            }\r\n\r\n            that.startRequested = true;\r\n            window.clearTimeout(that.transportTimeoutHandle);\r\n\r\n            connection.log(transport.name + \" transport connected. Initiating start request.\");\r\n            signalR.transports._logic.ajaxStart(connection, function () {\r\n                that.startCompleted = true;\r\n                onSuccess();\r\n            });\r\n        },\r\n\r\n        transportFailed: function (transport, error, onFallback) {\r\n            var connection = this.connection,\r\n                deferred = connection._deferral,\r\n                wrappedError;\r\n\r\n            if (this.connectionStopped) {\r\n                return;\r\n            }\r\n\r\n            window.clearTimeout(this.transportTimeoutHandle);\r\n\r\n            if (!this.startRequested) {\r\n                transport.stop(connection);\r\n\r\n                connection.log(transport.name + \" transport failed to connect. Attempting to fall back.\");\r\n                onFallback();\r\n            } else if (!this.startCompleted) {\r\n                // Do not attempt to fall back if a start request is ongoing during a transport failure.\r\n                // Instead, trigger an error and stop the connection.\r\n                wrappedError = signalR._.error(signalR.resources.errorDuringStartRequest, error);\r\n\r\n                connection.log(transport.name + \" transport failed during the start request. Stopping the connection.\");\r\n                $(connection).triggerHandler(events.onError, [wrappedError]);\r\n                if (deferred) {\r\n                    deferred.reject(wrappedError);\r\n                }\r\n\r\n                connection.stop();\r\n            } else {\r\n                // The start request has completed, but the connection has not stopped.\r\n                // No need to do anything here. The transport should attempt its normal reconnect logic.\r\n            }\r\n        }\r\n    };\r\n\r\n    transportLogic = signalR.transports._logic = {\r\n        ajax: function (connection, options) {\r\n            return $.ajax(\r\n                $.extend(/*deep copy*/ true, {}, $.signalR.ajaxDefaults, {\r\n                    type: \"GET\",\r\n                    data: {},\r\n                    xhrFields: { withCredentials: connection.withCredentials },\r\n                    contentType: connection.contentType,\r\n                    dataType: connection.ajaxDataType\r\n                }, options));\r\n        },\r\n\r\n        pingServer: function (connection) {\r\n            /// <summary>Pings the server</summary>\r\n            /// <param name=\"connection\" type=\"signalr\">Connection associated with the server ping</param>\r\n            /// <returns type=\"signalR\" />\r\n            var url,\r\n                xhr,\r\n                deferral = $.Deferred();\r\n\r\n            if (connection.transport) {\r\n                url = connection.url + \"/ping\";\r\n\r\n                url = transportLogic.addQs(url, connection.qs);\r\n\r\n                xhr = transportLogic.ajax(connection, {\r\n                    url: url,\r\n                    success: function (result) {\r\n                        var data;\r\n\r\n                        try {\r\n                            data = connection._parseResponse(result);\r\n                        }\r\n                        catch (error) {\r\n                            deferral.reject(\r\n                                signalR._.transportError(\r\n                                    signalR.resources.pingServerFailedParse,\r\n                                    connection.transport,\r\n                                    error,\r\n                                    xhr\r\n                                )\r\n                            );\r\n                            connection.stop();\r\n                            return;\r\n                        }\r\n\r\n                        if (data.Response === \"pong\") {\r\n                            deferral.resolve();\r\n                        }\r\n                        else {\r\n                            deferral.reject(\r\n                                signalR._.transportError(\r\n                                    signalR._.format(signalR.resources.pingServerFailedInvalidResponse, result),\r\n                                    connection.transport,\r\n                                    null /* error */,\r\n                                    xhr\r\n                                )\r\n                            );\r\n                        }\r\n                    },\r\n                    error: function (error) {\r\n                        if (error.status === 401 || error.status === 403) {\r\n                            deferral.reject(\r\n                                signalR._.transportError(\r\n                                    signalR._.format(signalR.resources.pingServerFailedStatusCode, error.status),\r\n                                    connection.transport,\r\n                                    error,\r\n                                    xhr\r\n                                )\r\n                            );\r\n                            connection.stop();\r\n                        }\r\n                        else {\r\n                            deferral.reject(\r\n                                signalR._.transportError(\r\n                                    signalR.resources.pingServerFailed,\r\n                                    connection.transport,\r\n                                    error,\r\n                                    xhr\r\n                                )\r\n                            );\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                deferral.reject(\r\n                    signalR._.transportError(\r\n                        signalR.resources.noConnectionTransport,\r\n                        connection.transport\r\n                    )\r\n                );\r\n            }\r\n\r\n            return deferral.promise();\r\n        },\r\n\r\n        prepareQueryString: function (connection, url) {\r\n            var preparedUrl;\r\n\r\n            // Use addQs to start since it handles the ?/& prefix for us\r\n            preparedUrl = transportLogic.addQs(url, \"clientProtocol=\" + connection.clientProtocol);\r\n\r\n            // Add the user-specified query string params if any\r\n            preparedUrl = transportLogic.addQs(preparedUrl, connection.qs);\r\n\r\n            if (connection.token) {\r\n                preparedUrl += \"&connectionToken=\" + window.encodeURIComponent(connection.token);\r\n            }\r\n\r\n            if (connection.data) {\r\n                preparedUrl += \"&connectionData=\" + window.encodeURIComponent(connection.data);\r\n            }\r\n\r\n            return preparedUrl;\r\n        },\r\n\r\n        addQs: function (url, qs) {\r\n            var appender = url.indexOf(\"?\") !== -1 ? \"&\" : \"?\",\r\n                firstChar;\r\n\r\n            if (!qs) {\r\n                return url;\r\n            }\r\n\r\n            if (typeof (qs) === \"object\") {\r\n                return url + appender + $.param(qs);\r\n            }\r\n\r\n            if (typeof (qs) === \"string\") {\r\n                firstChar = qs.charAt(0);\r\n\r\n                if (firstChar === \"?\" || firstChar === \"&\") {\r\n                    appender = \"\";\r\n                }\r\n\r\n                return url + appender + qs;\r\n            }\r\n\r\n            throw new Error(\"Query string property must be either a string or object.\");\r\n        },\r\n\r\n        // BUG #2953: The url needs to be same otherwise it will cause a memory leak\r\n        getUrl: function (connection, transport, reconnecting, poll, ajaxPost) {\r\n            /// <summary>Gets the url for making a GET based connect request</summary>\r\n            var baseUrl = transport === \"webSockets\" ? \"\" : connection.baseUrl,\r\n                url = baseUrl + connection.appRelativeUrl,\r\n                qs = \"transport=\" + transport;\r\n\r\n            if (!ajaxPost && connection.groupsToken) {\r\n                qs += \"&groupsToken=\" + window.encodeURIComponent(connection.groupsToken);\r\n            }\r\n\r\n            if (!reconnecting) {\r\n                url += \"/connect\";\r\n            } else {\r\n                if (poll) {\r\n                    // longPolling transport specific\r\n                    url += \"/poll\";\r\n                } else {\r\n                    url += \"/reconnect\";\r\n                }\r\n\r\n                if (!ajaxPost && connection.messageId) {\r\n                    qs += \"&messageId=\" + window.encodeURIComponent(connection.messageId);\r\n                }\r\n            }\r\n            url += \"?\" + qs;\r\n            url = transportLogic.prepareQueryString(connection, url);\r\n\r\n            if (!ajaxPost) {\r\n                url += \"&tid=\" + Math.floor(Math.random() * 11);\r\n            }\r\n\r\n            return url;\r\n        },\r\n\r\n        maximizePersistentResponse: function (minPersistentResponse) {\r\n            return {\r\n                MessageId: minPersistentResponse.C,\r\n                Messages: minPersistentResponse.M,\r\n                Initialized: typeof (minPersistentResponse.S) !== \"undefined\" ? true : false,\r\n                ShouldReconnect: typeof (minPersistentResponse.T) !== \"undefined\" ? true : false,\r\n                LongPollDelay: minPersistentResponse.L,\r\n                GroupsToken: minPersistentResponse.G\r\n            };\r\n        },\r\n\r\n        updateGroups: function (connection, groupsToken) {\r\n            if (groupsToken) {\r\n                connection.groupsToken = groupsToken;\r\n            }\r\n        },\r\n\r\n        stringifySend: function (connection, message) {\r\n            if (typeof (message) === \"string\" || typeof (message) === \"undefined\" || message === null) {\r\n                return message;\r\n            }\r\n            return connection.json.stringify(message);\r\n        },\r\n\r\n        ajaxSend: function (connection, data) {\r\n            var payload = transportLogic.stringifySend(connection, data),\r\n                url = getAjaxUrl(connection, \"/send\"),\r\n                xhr,\r\n                onFail = function (error, connection) {\r\n                    $(connection).triggerHandler(events.onError, [signalR._.transportError(signalR.resources.sendFailed, connection.transport, error, xhr), data]);\r\n                };\r\n\r\n\r\n            xhr = transportLogic.ajax(connection, {\r\n                url: url,\r\n                type: connection.ajaxDataType === \"jsonp\" ? \"GET\" : \"POST\",\r\n                contentType: signalR._.defaultContentType,\r\n                data: {\r\n                    data: payload\r\n                },\r\n                success: function (result) {\r\n                    var res;\r\n\r\n                    if (result) {\r\n                        try {\r\n                            res = connection._parseResponse(result);\r\n                        }\r\n                        catch (error) {\r\n                            onFail(error, connection);\r\n                            connection.stop();\r\n                            return;\r\n                        }\r\n\r\n                        transportLogic.triggerReceived(connection, res);\r\n                    }\r\n                },\r\n                error: function (error, textStatus) {\r\n                    if (textStatus === \"abort\" || textStatus === \"parsererror\") {\r\n                        // The parsererror happens for sends that don't return any data, and hence\r\n                        // don't write the jsonp callback to the response. This is harder to fix on the server\r\n                        // so just hack around it on the client for now.\r\n                        return;\r\n                    }\r\n\r\n                    onFail(error, connection);\r\n                }\r\n            });\r\n\r\n            return xhr;\r\n        },\r\n\r\n        ajaxAbort: function (connection, async) {\r\n            if (typeof (connection.transport) === \"undefined\") {\r\n                return;\r\n            }\r\n\r\n            // Async by default unless explicitly overidden\r\n            async = typeof async === \"undefined\" ? true : async;\r\n\r\n            var url = getAjaxUrl(connection, \"/abort\");\r\n\r\n            transportLogic.ajax(connection, {\r\n                url: url,\r\n                async: async,\r\n                timeout: 1000,\r\n                type: \"POST\"\r\n            });\r\n\r\n            connection.log(\"Fired ajax abort async = \" + async + \".\");\r\n        },\r\n\r\n        ajaxStart: function (connection, onSuccess) {\r\n            var rejectDeferred = function (error) {\r\n                    var deferred = connection._deferral;\r\n                    if (deferred) {\r\n                        deferred.reject(error);\r\n                    }\r\n                },\r\n                triggerStartError = function (error) {\r\n                    connection.log(\"The start request failed. Stopping the connection.\");\r\n                    $(connection).triggerHandler(events.onError, [error]);\r\n                    rejectDeferred(error);\r\n                    connection.stop();\r\n                };\r\n\r\n            connection._.startRequest = transportLogic.ajax(connection, {\r\n                url: getAjaxUrl(connection, \"/start\"),\r\n                success: function (result, statusText, xhr) {\r\n                    var data;\r\n\r\n                    try {\r\n                        data = connection._parseResponse(result);\r\n                    } catch (error) {\r\n                        triggerStartError(signalR._.error(\r\n                            signalR._.format(signalR.resources.errorParsingStartResponse, result),\r\n                            error, xhr));\r\n                        return;\r\n                    }\r\n\r\n                    if (data.Response === \"started\") {\r\n                        onSuccess();\r\n                    } else {\r\n                        triggerStartError(signalR._.error(\r\n                            signalR._.format(signalR.resources.invalidStartResponse, result),\r\n                            null /* error */, xhr));\r\n                    }\r\n                },\r\n                error: function (xhr, statusText, error) {\r\n                    if (statusText !== startAbortText) {\r\n                        triggerStartError(signalR._.error(\r\n                            signalR.resources.errorDuringStartRequest,\r\n                            error, xhr));\r\n                    } else {\r\n                        // Stop has been called, no need to trigger the error handler\r\n                        // or stop the connection again with onStartError\r\n                        connection.log(\"The start request aborted because connection.stop() was called.\");\r\n                        rejectDeferred(signalR._.error(\r\n                            signalR.resources.stoppedDuringStartRequest,\r\n                            null /* error */, xhr));\r\n                    }\r\n                }\r\n            });\r\n        },\r\n\r\n        tryAbortStartRequest: function (connection) {\r\n            if (connection._.startRequest) {\r\n                // If the start request has already completed this will noop.\r\n                connection._.startRequest.abort(startAbortText);\r\n                delete connection._.startRequest;\r\n            }\r\n        },\r\n\r\n        tryInitialize: function (connection, persistentResponse, onInitialized) {\r\n            if (persistentResponse.Initialized && onInitialized) {\r\n                onInitialized();\r\n            } else if (persistentResponse.Initialized) {\r\n                connection.log(\"WARNING! The client received an init message after reconnecting.\");\r\n            }\r\n\r\n        },\r\n\r\n        triggerReceived: function (connection, data) {\r\n            if (!connection._.connectingMessageBuffer.tryBuffer(data)) {\r\n                $(connection).triggerHandler(events.onReceived, [data]);\r\n            }\r\n        },\r\n\r\n        processMessages: function (connection, minData, onInitialized) {\r\n            var data;\r\n\r\n            // Update the last message time stamp\r\n            transportLogic.markLastMessage(connection);\r\n\r\n            if (minData) {\r\n                data = transportLogic.maximizePersistentResponse(minData);\r\n\r\n                transportLogic.updateGroups(connection, data.GroupsToken);\r\n\r\n                if (data.MessageId) {\r\n                    connection.messageId = data.MessageId;\r\n                }\r\n\r\n                if (data.Messages) {\r\n                    $.each(data.Messages, function (index, message) {\r\n                        transportLogic.triggerReceived(connection, message);\r\n                    });\r\n\r\n                    transportLogic.tryInitialize(connection, data, onInitialized);\r\n                }\r\n            }\r\n        },\r\n\r\n        monitorKeepAlive: function (connection) {\r\n            var keepAliveData = connection._.keepAliveData;\r\n\r\n            // If we haven't initiated the keep alive timeouts then we need to\r\n            if (!keepAliveData.monitoring) {\r\n                keepAliveData.monitoring = true;\r\n\r\n                transportLogic.markLastMessage(connection);\r\n\r\n                // Save the function so we can unbind it on stop\r\n                connection._.keepAliveData.reconnectKeepAliveUpdate = function () {\r\n                    // Mark a new message so that keep alive doesn't time out connections\r\n                    transportLogic.markLastMessage(connection);\r\n                };\r\n\r\n                // Update Keep alive on reconnect\r\n                $(connection).bind(events.onReconnect, connection._.keepAliveData.reconnectKeepAliveUpdate);\r\n\r\n                connection.log(\"Now monitoring keep alive with a warning timeout of \" + keepAliveData.timeoutWarning + \", keep alive timeout of \" + keepAliveData.timeout + \" and disconnecting timeout of \" + connection.disconnectTimeout);\r\n            } else {\r\n                connection.log(\"Tried to monitor keep alive but it's already being monitored.\");\r\n            }\r\n        },\r\n\r\n        stopMonitoringKeepAlive: function (connection) {\r\n            var keepAliveData = connection._.keepAliveData;\r\n\r\n            // Only attempt to stop the keep alive monitoring if its being monitored\r\n            if (keepAliveData.monitoring) {\r\n                // Stop monitoring\r\n                keepAliveData.monitoring = false;\r\n\r\n                // Remove the updateKeepAlive function from the reconnect event\r\n                $(connection).unbind(events.onReconnect, connection._.keepAliveData.reconnectKeepAliveUpdate);\r\n\r\n                // Clear all the keep alive data\r\n                connection._.keepAliveData = {};\r\n                connection.log(\"Stopping the monitoring of the keep alive.\");\r\n            }\r\n        },\r\n\r\n        startHeartbeat: function (connection) {\r\n            connection._.lastActiveAt = new Date().getTime();\r\n            beat(connection);\r\n        },\r\n\r\n        markLastMessage: function (connection) {\r\n            connection._.lastMessageAt = new Date().getTime();\r\n        },\r\n\r\n        markActive: function (connection) {\r\n            if (transportLogic.verifyLastActive(connection)) {\r\n                connection._.lastActiveAt = new Date().getTime();\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        isConnectedOrReconnecting: function (connection) {\r\n            return connection.state === signalR.connectionState.connected ||\r\n                   connection.state === signalR.connectionState.reconnecting;\r\n        },\r\n\r\n        ensureReconnectingState: function (connection) {\r\n            if (changeState(connection,\r\n                        signalR.connectionState.connected,\r\n                        signalR.connectionState.reconnecting) === true) {\r\n                $(connection).triggerHandler(events.onReconnecting);\r\n            }\r\n            return connection.state === signalR.connectionState.reconnecting;\r\n        },\r\n\r\n        clearReconnectTimeout: function (connection) {\r\n            if (connection && connection._.reconnectTimeout) {\r\n                window.clearTimeout(connection._.reconnectTimeout);\r\n                delete connection._.reconnectTimeout;\r\n            }\r\n        },\r\n\r\n        verifyLastActive: function (connection) {\r\n            if (new Date().getTime() - connection._.lastActiveAt >= connection.reconnectWindow) {\r\n                var message = signalR._.format(signalR.resources.reconnectWindowTimeout, new Date(connection._.lastActiveAt), connection.reconnectWindow);\r\n                connection.log(message);\r\n                $(connection).triggerHandler(events.onError, [signalR._.error(message, /* source */ \"TimeoutException\")]);\r\n                connection.stop(/* async */ false, /* notifyServer */ false);\r\n                return false;\r\n            }\r\n\r\n            return true;\r\n        },\r\n\r\n        reconnect: function (connection, transportName) {\r\n            var transport = signalR.transports[transportName];\r\n\r\n            // We should only set a reconnectTimeout if we are currently connected\r\n            // and a reconnectTimeout isn't already set.\r\n            if (transportLogic.isConnectedOrReconnecting(connection) && !connection._.reconnectTimeout) {\r\n                // Need to verify before the setTimeout occurs because an application sleep could occur during the setTimeout duration.\r\n                if (!transportLogic.verifyLastActive(connection)) {\r\n                    return;\r\n                }\r\n\r\n                connection._.reconnectTimeout = window.setTimeout(function () {\r\n                    if (!transportLogic.verifyLastActive(connection)) {\r\n                        return;\r\n                    }\r\n\r\n                    transport.stop(connection);\r\n\r\n                    if (transportLogic.ensureReconnectingState(connection)) {\r\n                        connection.log(transportName + \" reconnecting.\");\r\n                        transport.start(connection);\r\n                    }\r\n                }, connection.reconnectDelay);\r\n            }\r\n        },\r\n\r\n        handleParseFailure: function (connection, result, error, onFailed, context) {\r\n            var wrappedError = signalR._.transportError(\r\n                signalR._.format(signalR.resources.parseFailed, result),\r\n                connection.transport,\r\n                error,\r\n                context);\r\n\r\n            // If we're in the initialization phase trigger onFailed, otherwise stop the connection.\r\n            if (onFailed && onFailed(wrappedError)) {\r\n                connection.log(\"Failed to parse server response while attempting to connect.\");\r\n            } else {\r\n                $(connection).triggerHandler(events.onError, [wrappedError]);\r\n                connection.stop();\r\n            }\r\n        },\r\n\r\n        initHandler: function (connection) {\r\n            return new InitHandler(connection);\r\n        },\r\n\r\n        foreverFrame: {\r\n            count: 0,\r\n            connections: {}\r\n        }\r\n    };\r\n\r\n}(window.jQuery, window));\r\n/* jquery.signalR.transports.webSockets.js */\r\n// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\n\r\n/*global window:false */\r\n/// <reference path=\"jquery.signalR.transports.common.js\" />\r\n\r\n(function ($, window, undefined) {\r\n\r\n    var signalR = $.signalR,\r\n        events = $.signalR.events,\r\n        changeState = $.signalR.changeState,\r\n        transportLogic = signalR.transports._logic;\r\n\r\n    signalR.transports.webSockets = {\r\n        name: \"webSockets\",\r\n\r\n        supportsKeepAlive: function () {\r\n            return true;\r\n        },\r\n\r\n        send: function (connection, data) {\r\n            var payload = transportLogic.stringifySend(connection, data);\r\n\r\n            try {\r\n                connection.socket.send(payload);\r\n            } catch (ex) {\r\n                $(connection).triggerHandler(events.onError,\r\n                    [signalR._.transportError(\r\n                        signalR.resources.webSocketsInvalidState,\r\n                        connection.transport,\r\n                        ex,\r\n                        connection.socket\r\n                    ),\r\n                    data]);\r\n            }\r\n        },\r\n\r\n        start: function (connection, onSuccess, onFailed) {\r\n            var url,\r\n                opened = false,\r\n                that = this,\r\n                reconnecting = !onSuccess,\r\n                $connection = $(connection);\r\n\r\n            if (!window.WebSocket) {\r\n                onFailed();\r\n                return;\r\n            }\r\n\r\n            if (!connection.socket) {\r\n                if (connection.webSocketServerUrl) {\r\n                    url = connection.webSocketServerUrl;\r\n                } else {\r\n                    url = connection.wsProtocol + connection.host;\r\n                }\r\n\r\n                url += transportLogic.getUrl(connection, this.name, reconnecting);\r\n\r\n                connection.log(\"Connecting to websocket endpoint '\" + url + \"'.\");\r\n                connection.socket = new window.WebSocket(url);\r\n\r\n                connection.socket.onopen = function () {\r\n                    opened = true;\r\n                    connection.log(\"Websocket opened.\");\r\n\r\n                    transportLogic.clearReconnectTimeout(connection);\r\n\r\n                    if (changeState(connection,\r\n                                    signalR.connectionState.reconnecting,\r\n                                    signalR.connectionState.connected) === true) {\r\n                        $connection.triggerHandler(events.onReconnect);\r\n                    }\r\n                };\r\n\r\n                connection.socket.onclose = function (event) {\r\n                    var error;\r\n\r\n                    // Only handle a socket close if the close is from the current socket.\r\n                    // Sometimes on disconnect the server will push down an onclose event\r\n                    // to an expired socket.\r\n\r\n                    if (this === connection.socket) {\r\n                        if (opened && typeof event.wasClean !== \"undefined\" && event.wasClean === false) {\r\n                            // Ideally this would use the websocket.onerror handler (rather than checking wasClean in onclose) but\r\n                            // I found in some circumstances Chrome won't call onerror. This implementation seems to work on all browsers.\r\n                            error = signalR._.transportError(\r\n                                signalR.resources.webSocketClosed,\r\n                                connection.transport,\r\n                                event);\r\n\r\n                            connection.log(\"Unclean disconnect from websocket: \" + (event.reason || \"[no reason given].\"));\r\n                        } else {\r\n                            connection.log(\"Websocket closed.\");\r\n                        }\r\n\r\n                        if (!onFailed || !onFailed(error)) {\r\n                            if (error) {\r\n                                $(connection).triggerHandler(events.onError, [error]);\r\n                            }\r\n\r\n                            that.reconnect(connection);\r\n                        }\r\n                    }\r\n                };\r\n\r\n                connection.socket.onmessage = function (event) {\r\n                    var data;\r\n\r\n                    try {\r\n                        data = connection._parseResponse(event.data);\r\n                    }\r\n                    catch (error) {\r\n                        transportLogic.handleParseFailure(connection, event.data, error, onFailed, event);\r\n                        return;\r\n                    }\r\n\r\n                    if (data) {\r\n                        // data.M is PersistentResponse.Messages\r\n                        if ($.isEmptyObject(data) || data.M) {\r\n                            transportLogic.processMessages(connection, data, onSuccess);\r\n                        } else {\r\n                            // For websockets we need to trigger onReceived\r\n                            // for callbacks to outgoing hub calls.\r\n                            transportLogic.triggerReceived(connection, data);\r\n                        }\r\n                    }\r\n                };\r\n            }\r\n        },\r\n\r\n        reconnect: function (connection) {\r\n            transportLogic.reconnect(connection, this.name);\r\n        },\r\n\r\n        lostConnection: function (connection) {\r\n            this.reconnect(connection);\r\n        },\r\n\r\n        stop: function (connection) {\r\n            // Don't trigger a reconnect after stopping\r\n            transportLogic.clearReconnectTimeout(connection);\r\n\r\n            if (connection.socket) {\r\n                connection.log(\"Closing the Websocket.\");\r\n                connection.socket.close();\r\n                connection.socket = null;\r\n            }\r\n        },\r\n\r\n        abort: function (connection, async) {\r\n            transportLogic.ajaxAbort(connection, async);\r\n        }\r\n    };\r\n\r\n}(window.jQuery, window));\r\n/* jquery.signalR.transports.serverSentEvents.js */\r\n// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\n\r\n/*global window:false */\r\n/// <reference path=\"jquery.signalR.transports.common.js\" />\r\n\r\n(function ($, window, undefined) {\r\n\r\n    var signalR = $.signalR,\r\n        events = $.signalR.events,\r\n        changeState = $.signalR.changeState,\r\n        transportLogic = signalR.transports._logic,\r\n        clearReconnectAttemptTimeout = function (connection) {\r\n            window.clearTimeout(connection._.reconnectAttemptTimeoutHandle);\r\n            delete connection._.reconnectAttemptTimeoutHandle;\r\n        };\r\n\r\n    signalR.transports.serverSentEvents = {\r\n        name: \"serverSentEvents\",\r\n\r\n        supportsKeepAlive: function () {\r\n            return true;\r\n        },\r\n\r\n        timeOut: 3000,\r\n\r\n        start: function (connection, onSuccess, onFailed) {\r\n            var that = this,\r\n                opened = false,\r\n                $connection = $(connection),\r\n                reconnecting = !onSuccess,\r\n                url;\r\n\r\n            if (connection.eventSource) {\r\n                connection.log(\"The connection already has an event source. Stopping it.\");\r\n                connection.stop();\r\n            }\r\n\r\n            if (!window.EventSource) {\r\n                if (onFailed) {\r\n                    connection.log(\"This browser doesn't support SSE.\");\r\n                    onFailed();\r\n                }\r\n                return;\r\n            }\r\n\r\n            url = transportLogic.getUrl(connection, this.name, reconnecting);\r\n\r\n            try {\r\n                connection.log(\"Attempting to connect to SSE endpoint '\" + url + \"'.\");\r\n                connection.eventSource = new window.EventSource(url, { withCredentials: connection.withCredentials });\r\n            }\r\n            catch (e) {\r\n                connection.log(\"EventSource failed trying to connect with error \" + e.Message + \".\");\r\n                if (onFailed) {\r\n                    // The connection failed, call the failed callback\r\n                    onFailed();\r\n                } else {\r\n                    $connection.triggerHandler(events.onError, [signalR._.transportError(signalR.resources.eventSourceFailedToConnect, connection.transport, e)]);\r\n                    if (reconnecting) {\r\n                        // If we were reconnecting, rather than doing initial connect, then try reconnect again\r\n                        that.reconnect(connection);\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n\r\n            if (reconnecting) {\r\n                connection._.reconnectAttemptTimeoutHandle = window.setTimeout(function () {\r\n                    if (opened === false) {\r\n                        // If we're reconnecting and the event source is attempting to connect,\r\n                        // don't keep retrying. This causes duplicate connections to spawn.\r\n                        if (connection.eventSource.readyState !== window.EventSource.OPEN) {\r\n                            // If we were reconnecting, rather than doing initial connect, then try reconnect again\r\n                            that.reconnect(connection);\r\n                        }\r\n                    }\r\n                },\r\n                that.timeOut);\r\n            }\r\n\r\n            connection.eventSource.addEventListener(\"open\", function (e) {\r\n                connection.log(\"EventSource connected.\");\r\n\r\n                clearReconnectAttemptTimeout(connection);\r\n                transportLogic.clearReconnectTimeout(connection);\r\n\r\n                if (opened === false) {\r\n                    opened = true;\r\n\r\n                    if (changeState(connection,\r\n                                         signalR.connectionState.reconnecting,\r\n                                         signalR.connectionState.connected) === true) {\r\n                        $connection.triggerHandler(events.onReconnect);\r\n                    }\r\n                }\r\n            }, false);\r\n\r\n            connection.eventSource.addEventListener(\"message\", function (e) {\r\n                var res;\r\n\r\n                // process messages\r\n                if (e.data === \"initialized\") {\r\n                    return;\r\n                }\r\n\r\n                try {\r\n                    res = connection._parseResponse(e.data);\r\n                }\r\n                catch (error) {\r\n                    transportLogic.handleParseFailure(connection, e.data, error, onFailed, e);\r\n                    return;\r\n                }\r\n\r\n                transportLogic.processMessages(connection, res, onSuccess);\r\n            }, false);\r\n\r\n            connection.eventSource.addEventListener(\"error\", function (e) {\r\n                var error = signalR._.transportError(\r\n                    signalR.resources.eventSourceError,\r\n                    connection.transport,\r\n                    e);\r\n\r\n                // Only handle an error if the error is from the current Event Source.\r\n                // Sometimes on disconnect the server will push down an error event\r\n                // to an expired Event Source.\r\n                if (this !== connection.eventSource) {\r\n                    return;\r\n                }\r\n\r\n                if (onFailed && onFailed(error)) {\r\n                    return;\r\n                }\r\n\r\n                connection.log(\"EventSource readyState: \" + connection.eventSource.readyState + \".\");\r\n\r\n                if (e.eventPhase === window.EventSource.CLOSED) {\r\n                    // We don't use the EventSource's native reconnect function as it\r\n                    // doesn't allow us to change the URL when reconnecting. We need\r\n                    // to change the URL to not include the /connect suffix, and pass\r\n                    // the last message id we received.\r\n                    connection.log(\"EventSource reconnecting due to the server connection ending.\");\r\n                    that.reconnect(connection);\r\n                } else {\r\n                    // connection error\r\n                    connection.log(\"EventSource error.\");\r\n                    $connection.triggerHandler(events.onError, [error]);\r\n                }\r\n            }, false);\r\n        },\r\n\r\n        reconnect: function (connection) {\r\n            transportLogic.reconnect(connection, this.name);\r\n        },\r\n\r\n        lostConnection: function (connection) {\r\n            this.reconnect(connection);\r\n        },\r\n\r\n        send: function (connection, data) {\r\n            transportLogic.ajaxSend(connection, data);\r\n        },\r\n\r\n        stop: function (connection) {\r\n            // Don't trigger a reconnect after stopping\r\n            clearReconnectAttemptTimeout(connection);\r\n            transportLogic.clearReconnectTimeout(connection);\r\n\r\n            if (connection && connection.eventSource) {\r\n                connection.log(\"EventSource calling close().\");\r\n                connection.eventSource.close();\r\n                connection.eventSource = null;\r\n                delete connection.eventSource;\r\n            }\r\n        },\r\n\r\n        abort: function (connection, async) {\r\n            transportLogic.ajaxAbort(connection, async);\r\n        }\r\n    };\r\n\r\n}(window.jQuery, window));\r\n/* jquery.signalR.transports.foreverFrame.js */\r\n// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\n\r\n/*global window:false */\r\n/// <reference path=\"jquery.signalR.transports.common.js\" />\r\n\r\n(function ($, window, undefined) {\r\n\r\n    var signalR = $.signalR,\r\n        events = $.signalR.events,\r\n        changeState = $.signalR.changeState,\r\n        transportLogic = signalR.transports._logic,\r\n        createFrame = function () {\r\n            var frame = window.document.createElement(\"iframe\");\r\n            frame.setAttribute(\"style\", \"position:absolute;top:0;left:0;width:0;height:0;visibility:hidden;\");\r\n            return frame;\r\n        },\r\n        // Used to prevent infinite loading icon spins in older versions of ie\r\n        // We build this object inside a closure so we don't pollute the rest of\r\n        // the foreverFrame transport with unnecessary functions/utilities.\r\n        loadPreventer = (function () {\r\n            var loadingFixIntervalId = null,\r\n                loadingFixInterval = 1000,\r\n                attachedTo = 0;\r\n\r\n            return {\r\n                prevent: function () {\r\n                    // Prevent additional iframe removal procedures from newer browsers\r\n                    if (signalR._.ieVersion <= 8) {\r\n                        // We only ever want to set the interval one time, so on the first attachedTo\r\n                        if (attachedTo === 0) {\r\n                            // Create and destroy iframe every 3 seconds to prevent loading icon, super hacky\r\n                            loadingFixIntervalId = window.setInterval(function () {\r\n                                var tempFrame = createFrame();\r\n\r\n                                window.document.body.appendChild(tempFrame);\r\n                                window.document.body.removeChild(tempFrame);\r\n\r\n                                tempFrame = null;\r\n                            }, loadingFixInterval);\r\n                        }\r\n\r\n                        attachedTo++;\r\n                    }\r\n                },\r\n                cancel: function () {\r\n                    // Only clear the interval if there's only one more object that the loadPreventer is attachedTo\r\n                    if (attachedTo === 1) {\r\n                        window.clearInterval(loadingFixIntervalId);\r\n                    }\r\n\r\n                    if (attachedTo > 0) {\r\n                        attachedTo--;\r\n                    }\r\n                }\r\n            };\r\n        })();\r\n\r\n    signalR.transports.foreverFrame = {\r\n        name: \"foreverFrame\",\r\n\r\n        supportsKeepAlive: function () {\r\n            return true;\r\n        },\r\n\r\n        // Added as a value here so we can create tests to verify functionality\r\n        iframeClearThreshold: 50,\r\n\r\n        start: function (connection, onSuccess, onFailed) {\r\n            var that = this,\r\n                frameId = (transportLogic.foreverFrame.count += 1),\r\n                url,\r\n                frame = createFrame(),\r\n                frameLoadHandler = function () {\r\n                    connection.log(\"Forever frame iframe finished loading and is no longer receiving messages.\");\r\n                    if (!onFailed || !onFailed()) {\r\n                        that.reconnect(connection);\r\n                    }\r\n                };\r\n\r\n            if (window.EventSource) {\r\n                // If the browser supports SSE, don't use Forever Frame\r\n                if (onFailed) {\r\n                    connection.log(\"Forever Frame is not supported by SignalR on browsers with SSE support.\");\r\n                    onFailed();\r\n                }\r\n                return;\r\n            }\r\n\r\n            frame.setAttribute(\"data-signalr-connection-id\", connection.id);\r\n\r\n            // Start preventing loading icon\r\n            // This will only perform work if the loadPreventer is not attached to another connection.\r\n            loadPreventer.prevent();\r\n\r\n            // Build the url\r\n            url = transportLogic.getUrl(connection, this.name);\r\n            url += \"&frameId=\" + frameId;\r\n\r\n            // add frame to the document prior to setting URL to avoid caching issues.\r\n            window.document.documentElement.appendChild(frame);\r\n\r\n            connection.log(\"Binding to iframe's load event.\");\r\n\r\n            if (frame.addEventListener) {\r\n                frame.addEventListener(\"load\", frameLoadHandler, false);\r\n            } else if (frame.attachEvent) {\r\n                frame.attachEvent(\"onload\", frameLoadHandler);\r\n            }\r\n\r\n            frame.src = url;\r\n            transportLogic.foreverFrame.connections[frameId] = connection;\r\n\r\n            connection.frame = frame;\r\n            connection.frameId = frameId;\r\n\r\n            if (onSuccess) {\r\n                connection.onSuccess = function () {\r\n                    connection.log(\"Iframe transport started.\");\r\n                    onSuccess();\r\n                };\r\n            }\r\n        },\r\n\r\n        reconnect: function (connection) {\r\n            var that = this;\r\n\r\n            // Need to verify connection state and verify before the setTimeout occurs because an application sleep could occur during the setTimeout duration.\r\n            if (transportLogic.isConnectedOrReconnecting(connection) && transportLogic.verifyLastActive(connection)) {\r\n                window.setTimeout(function () {\r\n                    // Verify that we're ok to reconnect.\r\n                    if (!transportLogic.verifyLastActive(connection)) {\r\n                        return;\r\n                    }\r\n\r\n                    if (connection.frame && transportLogic.ensureReconnectingState(connection)) {\r\n                        var frame = connection.frame,\r\n                            src = transportLogic.getUrl(connection, that.name, true) + \"&frameId=\" + connection.frameId;\r\n                        connection.log(\"Updating iframe src to '\" + src + \"'.\");\r\n                        frame.src = src;\r\n                    }\r\n                }, connection.reconnectDelay);\r\n            }\r\n        },\r\n\r\n        lostConnection: function (connection) {\r\n            this.reconnect(connection);\r\n        },\r\n\r\n        send: function (connection, data) {\r\n            transportLogic.ajaxSend(connection, data);\r\n        },\r\n\r\n        receive: function (connection, data) {\r\n            var cw,\r\n                body,\r\n                response;\r\n\r\n            if (connection.json !== connection._originalJson) {\r\n                // If there's a custom JSON parser configured then serialize the object\r\n                // using the original (browser) JSON parser and then deserialize it using\r\n                // the custom parser (connection._parseResponse does that). This is so we\r\n                // can easily send the response from the server as \"raw\" JSON but still\r\n                // support custom JSON deserialization in the browser.\r\n                data = connection._originalJson.stringify(data);\r\n            }\r\n\r\n            response = connection._parseResponse(data);\r\n\r\n            transportLogic.processMessages(connection, response, connection.onSuccess);\r\n\r\n            // Protect against connection stopping from a callback trigger within the processMessages above.\r\n            if (connection.state === $.signalR.connectionState.connected) {\r\n                // Delete the script & div elements\r\n                connection.frameMessageCount = (connection.frameMessageCount || 0) + 1;\r\n                if (connection.frameMessageCount > signalR.transports.foreverFrame.iframeClearThreshold) {\r\n                    connection.frameMessageCount = 0;\r\n                    cw = connection.frame.contentWindow || connection.frame.contentDocument;\r\n                    if (cw && cw.document && cw.document.body) {\r\n                        body = cw.document.body;\r\n\r\n                        // Remove all the child elements from the iframe's body to conserver memory\r\n                        while (body.firstChild) {\r\n                            body.removeChild(body.firstChild);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        stop: function (connection) {\r\n            var cw = null;\r\n\r\n            // Stop attempting to prevent loading icon\r\n            loadPreventer.cancel();\r\n\r\n            if (connection.frame) {\r\n                if (connection.frame.stop) {\r\n                    connection.frame.stop();\r\n                } else {\r\n                    try {\r\n                        cw = connection.frame.contentWindow || connection.frame.contentDocument;\r\n                        if (cw.document && cw.document.execCommand) {\r\n                            cw.document.execCommand(\"Stop\");\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        connection.log(\"Error occurred when stopping foreverFrame transport. Message = \" + e.message + \".\");\r\n                    }\r\n                }\r\n\r\n                // Ensure the iframe is where we left it\r\n                if (connection.frame.parentNode === window.document.body) {\r\n                    window.document.body.removeChild(connection.frame);\r\n                }\r\n\r\n                delete transportLogic.foreverFrame.connections[connection.frameId];\r\n                connection.frame = null;\r\n                connection.frameId = null;\r\n                delete connection.frame;\r\n                delete connection.frameId;\r\n                delete connection.onSuccess;\r\n                delete connection.frameMessageCount;\r\n                connection.log(\"Stopping forever frame.\");\r\n            }\r\n        },\r\n\r\n        abort: function (connection, async) {\r\n            transportLogic.ajaxAbort(connection, async);\r\n        },\r\n\r\n        getConnection: function (id) {\r\n            return transportLogic.foreverFrame.connections[id];\r\n        },\r\n\r\n        started: function (connection) {\r\n            if (changeState(connection,\r\n                signalR.connectionState.reconnecting,\r\n                signalR.connectionState.connected) === true) {\r\n\r\n                $(connection).triggerHandler(events.onReconnect);\r\n            }\r\n        }\r\n    };\r\n\r\n}(window.jQuery, window));\r\n/* jquery.signalR.transports.longPolling.js */\r\n// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\n\r\n/*global window:false */\r\n/// <reference path=\"jquery.signalR.transports.common.js\" />\r\n\r\n(function ($, window, undefined) {\r\n\r\n    var signalR = $.signalR,\r\n        events = $.signalR.events,\r\n        changeState = $.signalR.changeState,\r\n        isDisconnecting = $.signalR.isDisconnecting,\r\n        transportLogic = signalR.transports._logic;\r\n\r\n    signalR.transports.longPolling = {\r\n        name: \"longPolling\",\r\n\r\n        supportsKeepAlive: function () {\r\n            return false;\r\n        },\r\n\r\n        reconnectDelay: 3000,\r\n\r\n        start: function (connection, onSuccess, onFailed) {\r\n            /// <summary>Starts the long polling connection</summary>\r\n            /// <param name=\"connection\" type=\"signalR\">The SignalR connection to start</param>\r\n            var that = this,\r\n                fireConnect = function () {\r\n                    fireConnect = $.noop;\r\n\r\n                    connection.log(\"LongPolling connected.\");\r\n\r\n                    if (onSuccess) {\r\n                        onSuccess();\r\n                    } else {\r\n                        connection.log(\"WARNING! The client received an init message after reconnecting.\");\r\n                    }\r\n                },\r\n                tryFailConnect = function (error) {\r\n                    if (onFailed(error)) {\r\n                        connection.log(\"LongPolling failed to connect.\");\r\n                        return true;\r\n                    }\r\n\r\n                    return false;\r\n                },\r\n                privateData = connection._,\r\n                reconnectErrors = 0,\r\n                fireReconnected = function (instance) {\r\n                    window.clearTimeout(privateData.reconnectTimeoutId);\r\n                    privateData.reconnectTimeoutId = null;\r\n\r\n                    if (changeState(instance,\r\n                                    signalR.connectionState.reconnecting,\r\n                                    signalR.connectionState.connected) === true) {\r\n                        // Successfully reconnected!\r\n                        instance.log(\"Raising the reconnect event\");\r\n                        $(instance).triggerHandler(events.onReconnect);\r\n                    }\r\n                },\r\n                // 1 hour\r\n                maxFireReconnectedTimeout = 3600000;\r\n\r\n            if (connection.pollXhr) {\r\n                connection.log(\"Polling xhr requests already exists, aborting.\");\r\n                connection.stop();\r\n            }\r\n\r\n            connection.messageId = null;\r\n\r\n            privateData.reconnectTimeoutId = null;\r\n\r\n            privateData.pollTimeoutId = window.setTimeout(function () {\r\n                (function poll(instance, raiseReconnect) {\r\n                    var messageId = instance.messageId,\r\n                        connect = (messageId === null),\r\n                        reconnecting = !connect,\r\n                        polling = !raiseReconnect,\r\n                        url = transportLogic.getUrl(instance, that.name, reconnecting, polling, true /* use Post for longPolling */),\r\n                        postData = {};\r\n\r\n                    if (instance.messageId) {\r\n                        postData.messageId = instance.messageId;\r\n                    }\r\n\r\n                    if (instance.groupsToken) {\r\n                        postData.groupsToken = instance.groupsToken;\r\n                    }\r\n\r\n                    // If we've disconnected during the time we've tried to re-instantiate the poll then stop.\r\n                    if (isDisconnecting(instance) === true) {\r\n                        return;\r\n                    }\r\n\r\n                    connection.log(\"Opening long polling request to '\" + url + \"'.\");\r\n                    instance.pollXhr = transportLogic.ajax(connection, {\r\n                        xhrFields: {\r\n                            onprogress: function () {\r\n                                transportLogic.markLastMessage(connection);\r\n                            }\r\n                        },\r\n                        url: url,\r\n                        type: \"POST\",\r\n                        contentType: signalR._.defaultContentType,\r\n                        data: postData,\r\n                        timeout: connection._.pollTimeout,\r\n                        success: function (result) {\r\n                            var minData,\r\n                                delay = 0,\r\n                                data,\r\n                                shouldReconnect;\r\n\r\n                            connection.log(\"Long poll complete.\");\r\n\r\n                            // Reset our reconnect errors so if we transition into a reconnecting state again we trigger\r\n                            // reconnected quickly\r\n                            reconnectErrors = 0;\r\n\r\n                            try {\r\n                                // Remove any keep-alives from the beginning of the result\r\n                                minData = connection._parseResponse(result);\r\n                            }\r\n                            catch (error) {\r\n                                transportLogic.handleParseFailure(instance, result, error, tryFailConnect, instance.pollXhr);\r\n                                return;\r\n                            }\r\n\r\n                            // If there's currently a timeout to trigger reconnect, fire it now before processing messages\r\n                            if (privateData.reconnectTimeoutId !== null) {\r\n                                fireReconnected(instance);\r\n                            }\r\n\r\n                            if (minData) {\r\n                                data = transportLogic.maximizePersistentResponse(minData);\r\n                            }\r\n\r\n                            transportLogic.processMessages(instance, minData, fireConnect);\r\n\r\n                            if (data &&\r\n                                $.type(data.LongPollDelay) === \"number\") {\r\n                                delay = data.LongPollDelay;\r\n                            }\r\n\r\n                            if (isDisconnecting(instance) === true) {\r\n                                return;\r\n                            }\r\n\r\n                            shouldReconnect = data && data.ShouldReconnect;\r\n                            if (shouldReconnect) {\r\n                                // Transition into the reconnecting state\r\n                                // If this fails then that means that the user transitioned the connection into a invalid state in processMessages.\r\n                                if (!transportLogic.ensureReconnectingState(instance)) {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            // We never want to pass a raiseReconnect flag after a successful poll.  This is handled via the error function\r\n                            if (delay > 0) {\r\n                                privateData.pollTimeoutId = window.setTimeout(function () {\r\n                                    poll(instance, shouldReconnect);\r\n                                }, delay);\r\n                            } else {\r\n                                poll(instance, shouldReconnect);\r\n                            }\r\n                        },\r\n\r\n                        error: function (data, textStatus) {\r\n                            var error = signalR._.transportError(signalR.resources.longPollFailed, connection.transport, data, instance.pollXhr);\r\n\r\n                            // Stop trying to trigger reconnect, connection is in an error state\r\n                            // If we're not in the reconnect state this will noop\r\n                            window.clearTimeout(privateData.reconnectTimeoutId);\r\n                            privateData.reconnectTimeoutId = null;\r\n\r\n                            if (textStatus === \"abort\") {\r\n                                connection.log(\"Aborted xhr request.\");\r\n                                return;\r\n                            }\r\n\r\n                            if (!tryFailConnect(error)) {\r\n\r\n                                // Increment our reconnect errors, we assume all errors to be reconnect errors\r\n                                // In the case that it's our first error this will cause Reconnect to be fired\r\n                                // after 1 second due to reconnectErrors being = 1.\r\n                                reconnectErrors++;\r\n\r\n                                if (connection.state !== signalR.connectionState.reconnecting) {\r\n                                    connection.log(\"An error occurred using longPolling. Status = \" + textStatus + \".  Response = \" + data.responseText + \".\");\r\n                                    $(instance).triggerHandler(events.onError, [error]);\r\n                                }\r\n\r\n                                // We check the state here to verify that we're not in an invalid state prior to verifying Reconnect.\r\n                                // If we're not in connected or reconnecting then the next ensureReconnectingState check will fail and will return.\r\n                                // Therefore we don't want to change that failure code path.\r\n                                if ((connection.state === signalR.connectionState.connected ||\r\n                                    connection.state === signalR.connectionState.reconnecting) &&\r\n                                    !transportLogic.verifyLastActive(connection)) {\r\n                                    return;\r\n                                }\r\n\r\n                                // Transition into the reconnecting state\r\n                                // If this fails then that means that the user transitioned the connection into the disconnected or connecting state within the above error handler trigger.\r\n                                if (!transportLogic.ensureReconnectingState(instance)) {\r\n                                    return;\r\n                                }\r\n\r\n                                // Call poll with the raiseReconnect flag as true after the reconnect delay\r\n                                privateData.pollTimeoutId = window.setTimeout(function () {\r\n                                    poll(instance, true);\r\n                                }, that.reconnectDelay);\r\n                            }\r\n                        }\r\n                    });\r\n\r\n                    // This will only ever pass after an error has occurred via the poll ajax procedure.\r\n                    if (reconnecting && raiseReconnect === true) {\r\n                        // We wait to reconnect depending on how many times we've failed to reconnect.\r\n                        // This is essentially a heuristic that will exponentially increase in wait time before\r\n                        // triggering reconnected.  This depends on the \"error\" handler of Poll to cancel this\r\n                        // timeout if it triggers before the Reconnected event fires.\r\n                        // The Math.min at the end is to ensure that the reconnect timeout does not overflow.\r\n                        privateData.reconnectTimeoutId = window.setTimeout(function () { fireReconnected(instance); }, Math.min(1000 * (Math.pow(2, reconnectErrors) - 1), maxFireReconnectedTimeout));\r\n                    }\r\n                }(connection));\r\n            }, 250); // Have to delay initial poll so Chrome doesn't show loader spinner in tab\r\n        },\r\n\r\n        lostConnection: function (connection) {\r\n            if (connection.pollXhr) {\r\n                connection.pollXhr.abort(\"lostConnection\");\r\n            }\r\n        },\r\n\r\n        send: function (connection, data) {\r\n            transportLogic.ajaxSend(connection, data);\r\n        },\r\n\r\n        stop: function (connection) {\r\n            /// <summary>Stops the long polling connection</summary>\r\n            /// <param name=\"connection\" type=\"signalR\">The SignalR connection to stop</param>\r\n\r\n            window.clearTimeout(connection._.pollTimeoutId);\r\n            window.clearTimeout(connection._.reconnectTimeoutId);\r\n\r\n            delete connection._.pollTimeoutId;\r\n            delete connection._.reconnectTimeoutId;\r\n\r\n            if (connection.pollXhr) {\r\n                connection.pollXhr.abort();\r\n                connection.pollXhr = null;\r\n                delete connection.pollXhr;\r\n            }\r\n        },\r\n\r\n        abort: function (connection, async) {\r\n            transportLogic.ajaxAbort(connection, async);\r\n        }\r\n    };\r\n\r\n}(window.jQuery, window));\r\n/* jquery.signalR.hubs.js */\r\n// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\n/*global window:false */\r\n/// <reference path=\"jquery.signalR.core.js\" />\r\n\r\n(function ($, window, undefined) {\r\n\r\n    var eventNamespace = \".hubProxy\",\r\n        signalR = $.signalR;\r\n\r\n    function makeEventName(event) {\r\n        return event + eventNamespace;\r\n    }\r\n\r\n    // Equivalent to Array.prototype.map\r\n    function map(arr, fun, thisp) {\r\n        var i,\r\n            length = arr.length,\r\n            result = [];\r\n        for (i = 0; i < length; i += 1) {\r\n            if (arr.hasOwnProperty(i)) {\r\n                result[i] = fun.call(thisp, arr[i], i, arr);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function getArgValue(a) {\r\n        return $.isFunction(a) ? null : ($.type(a) === \"undefined\" ? null : a);\r\n    }\r\n\r\n    function hasMembers(obj) {\r\n        for (var key in obj) {\r\n            // If we have any properties in our callback map then we have callbacks and can exit the loop via return\r\n            if (obj.hasOwnProperty(key)) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    function clearInvocationCallbacks(connection, error) {\r\n        /// <param name=\"connection\" type=\"hubConnection\" />\r\n        var callbacks = connection._.invocationCallbacks,\r\n            callback;\r\n\r\n        if (hasMembers(callbacks)) {\r\n            connection.log(\"Clearing hub invocation callbacks with error: \" + error + \".\");\r\n        }\r\n\r\n        // Reset the callback cache now as we have a local var referencing it\r\n        connection._.invocationCallbackId = 0;\r\n        delete connection._.invocationCallbacks;\r\n        connection._.invocationCallbacks = {};\r\n\r\n        // Loop over the callbacks and invoke them.\r\n        // We do this using a local var reference and *after* we've cleared the cache\r\n        // so that if a fail callback itself tries to invoke another method we don't\r\n        // end up with its callback in the list we're looping over.\r\n        for (var callbackId in callbacks) {\r\n            callback = callbacks[callbackId];\r\n            callback.method.call(callback.scope, { E: error });\r\n        }\r\n    }\r\n\r\n    // hubProxy\r\n    function hubProxy(hubConnection, hubName) {\r\n        /// <summary>\r\n        ///     Creates a new proxy object for the given hub connection that can be used to invoke\r\n        ///     methods on server hubs and handle client method invocation requests from the server.\r\n        /// </summary>\r\n        return new hubProxy.fn.init(hubConnection, hubName);\r\n    }\r\n\r\n    hubProxy.fn = hubProxy.prototype = {\r\n        init: function (connection, hubName) {\r\n            this.state = {};\r\n            this.connection = connection;\r\n            this.hubName = hubName;\r\n            this._ = {\r\n                callbackMap: {}\r\n            };\r\n        },\r\n\r\n        constructor: hubProxy,\r\n\r\n        hasSubscriptions: function () {\r\n            return hasMembers(this._.callbackMap);\r\n        },\r\n\r\n        on: function (eventName, callback) {\r\n            /// <summary>Wires up a callback to be invoked when a invocation request is received from the server hub.</summary>\r\n            /// <param name=\"eventName\" type=\"String\">The name of the hub event to register the callback for.</param>\r\n            /// <param name=\"callback\" type=\"Function\">The callback to be invoked.</param>\r\n            var that = this,\r\n                callbackMap = that._.callbackMap;\r\n\r\n            // Normalize the event name to lowercase\r\n            eventName = eventName.toLowerCase();\r\n\r\n            // If there is not an event registered for this callback yet we want to create its event space in the callback map.\r\n            if (!callbackMap[eventName]) {\r\n                callbackMap[eventName] = {};\r\n            }\r\n\r\n            // Map the callback to our encompassed function\r\n            callbackMap[eventName][callback] = function (e, data) {\r\n                callback.apply(that, data);\r\n            };\r\n\r\n            $(that).bind(makeEventName(eventName), callbackMap[eventName][callback]);\r\n\r\n            return that;\r\n        },\r\n\r\n        off: function (eventName, callback) {\r\n            /// <summary>Removes the callback invocation request from the server hub for the given event name.</summary>\r\n            /// <param name=\"eventName\" type=\"String\">The name of the hub event to unregister the callback for.</param>\r\n            /// <param name=\"callback\" type=\"Function\">The callback to be invoked.</param>\r\n            var that = this,\r\n                callbackMap = that._.callbackMap,\r\n                callbackSpace;\r\n\r\n            // Normalize the event name to lowercase\r\n            eventName = eventName.toLowerCase();\r\n\r\n            callbackSpace = callbackMap[eventName];\r\n\r\n            // Verify that there is an event space to unbind\r\n            if (callbackSpace) {\r\n                // Only unbind if there's an event bound with eventName and a callback with the specified callback\r\n                if (callbackSpace[callback]) {\r\n                    $(that).unbind(makeEventName(eventName), callbackSpace[callback]);\r\n\r\n                    // Remove the callback from the callback map\r\n                    delete callbackSpace[callback];\r\n\r\n                    // Check if there are any members left on the event, if not we need to destroy it.\r\n                    if (!hasMembers(callbackSpace)) {\r\n                        delete callbackMap[eventName];\r\n                    }\r\n                } else if (!callback) { // Check if we're removing the whole event and we didn't error because of an invalid callback\r\n                    $(that).unbind(makeEventName(eventName));\r\n\r\n                    delete callbackMap[eventName];\r\n                }\r\n            }\r\n\r\n            return that;\r\n        },\r\n\r\n        invoke: function (methodName) {\r\n            /// <summary>Invokes a server hub method with the given arguments.</summary>\r\n            /// <param name=\"methodName\" type=\"String\">The name of the server hub method.</param>\r\n\r\n            var that = this,\r\n                connection = that.connection,\r\n                args = $.makeArray(arguments).slice(1),\r\n                argValues = map(args, getArgValue),\r\n                data = { H: that.hubName, M: methodName, A: argValues, I: connection._.invocationCallbackId },\r\n                d = $.Deferred(),\r\n                callback = function (minResult) {\r\n                    var result = that._maximizeHubResponse(minResult),\r\n                        source,\r\n                        error;\r\n\r\n                    // Update the hub state\r\n                    $.extend(that.state, result.State);\r\n\r\n                    if (result.Progress) {\r\n                        if (d.notifyWith) {\r\n                            // Progress is only supported in jQuery 1.7+\r\n                            d.notifyWith(that, [result.Progress.Data]);\r\n                        } else if(!connection._.progressjQueryVersionLogged) {\r\n                            connection.log(\"A hub method invocation progress update was received but the version of jQuery in use (\" + $.prototype.jquery + \") does not support progress updates. Upgrade to jQuery 1.7+ to receive progress notifications.\");\r\n                            connection._.progressjQueryVersionLogged = true;\r\n                        }\r\n                    } else if (result.Error) {\r\n                        // Server hub method threw an exception, log it & reject the deferred\r\n                        if (result.StackTrace) {\r\n                            connection.log(result.Error + \"\\n\" + result.StackTrace + \".\");\r\n                        }\r\n\r\n                        // result.ErrorData is only set if a HubException was thrown\r\n                        source = result.IsHubException ? \"HubException\" : \"Exception\";\r\n                        error = signalR._.error(result.Error, source);\r\n                        error.data = result.ErrorData;\r\n\r\n                        connection.log(that.hubName + \".\" + methodName + \" failed to execute. Error: \" + error.message);\r\n                        d.rejectWith(that, [error]);\r\n                    } else {\r\n                        // Server invocation succeeded, resolve the deferred\r\n                        connection.log(\"Invoked \" + that.hubName + \".\" + methodName);\r\n                        d.resolveWith(that, [result.Result]);\r\n                    }\r\n                };\r\n\r\n            connection._.invocationCallbacks[connection._.invocationCallbackId.toString()] = { scope: that, method: callback };\r\n            connection._.invocationCallbackId += 1;\r\n\r\n            if (!$.isEmptyObject(that.state)) {\r\n                data.S = that.state;\r\n            }\r\n\r\n            connection.log(\"Invoking \" + that.hubName + \".\" + methodName);\r\n            connection.send(data);\r\n\r\n            return d.promise();\r\n        },\r\n\r\n        _maximizeHubResponse: function (minHubResponse) {\r\n            return {\r\n                State: minHubResponse.S,\r\n                Result: minHubResponse.R,\r\n                Progress: minHubResponse.P ? {\r\n                    Id: minHubResponse.P.I,\r\n                    Data: minHubResponse.P.D\r\n                } : null,\r\n                Id: minHubResponse.I,\r\n                IsHubException: minHubResponse.H,\r\n                Error: minHubResponse.E,\r\n                StackTrace: minHubResponse.T,\r\n                ErrorData: minHubResponse.D\r\n            };\r\n        }\r\n    };\r\n\r\n    hubProxy.fn.init.prototype = hubProxy.fn;\r\n\r\n    // hubConnection\r\n    function hubConnection(url, options) {\r\n        /// <summary>Creates a new hub connection.</summary>\r\n        /// <param name=\"url\" type=\"String\">[Optional] The hub route url, defaults to \"/signalr\".</param>\r\n        /// <param name=\"options\" type=\"Object\">[Optional] Settings to use when creating the hubConnection.</param>\r\n        var settings = {\r\n            qs: null,\r\n            logging: false,\r\n            useDefaultPath: true\r\n        };\r\n\r\n        $.extend(settings, options);\r\n\r\n        if (!url || settings.useDefaultPath) {\r\n            url = (url || \"\") + \"/signalr\";\r\n        }\r\n        return new hubConnection.fn.init(url, settings);\r\n    }\r\n\r\n    hubConnection.fn = hubConnection.prototype = $.connection();\r\n\r\n    hubConnection.fn.init = function (url, options) {\r\n        var settings = {\r\n                qs: null,\r\n                logging: false,\r\n                useDefaultPath: true\r\n            },\r\n            connection = this;\r\n\r\n        $.extend(settings, options);\r\n\r\n        // Call the base constructor\r\n        $.signalR.fn.init.call(connection, url, settings.qs, settings.logging);\r\n\r\n        // Object to store hub proxies for this connection\r\n        connection.proxies = {};\r\n\r\n        connection._.invocationCallbackId = 0;\r\n        connection._.invocationCallbacks = {};\r\n\r\n        // Wire up the received handler\r\n        connection.received(function (minData) {\r\n            var data, proxy, dataCallbackId, callback, hubName, eventName;\r\n            if (!minData) {\r\n                return;\r\n            }\r\n\r\n            // We have to handle progress updates first in order to ensure old clients that receive\r\n            // progress updates enter the return value branch and then no-op when they can't find\r\n            // the callback in the map (because the minData.I value will not be a valid callback ID)\r\n            if (typeof (minData.P) !== \"undefined\") {\r\n                // Process progress notification\r\n                dataCallbackId = minData.P.I.toString();\r\n                callback = connection._.invocationCallbacks[dataCallbackId];\r\n                if (callback) {\r\n                    callback.method.call(callback.scope, minData);\r\n                }\r\n            } else if (typeof (minData.I) !== \"undefined\") {\r\n                // We received the return value from a server method invocation, look up callback by id and call it\r\n                dataCallbackId = minData.I.toString();\r\n                callback = connection._.invocationCallbacks[dataCallbackId];\r\n                if (callback) {\r\n                    // Delete the callback from the proxy\r\n                    connection._.invocationCallbacks[dataCallbackId] = null;\r\n                    delete connection._.invocationCallbacks[dataCallbackId];\r\n\r\n                    // Invoke the callback\r\n                    callback.method.call(callback.scope, minData);\r\n                }\r\n            } else {\r\n                data = this._maximizeClientHubInvocation(minData);\r\n\r\n                // We received a client invocation request, i.e. broadcast from server hub\r\n                connection.log(\"Triggering client hub event '\" + data.Method + \"' on hub '\" + data.Hub + \"'.\");\r\n\r\n                // Normalize the names to lowercase\r\n                hubName = data.Hub.toLowerCase();\r\n                eventName = data.Method.toLowerCase();\r\n\r\n                // Trigger the local invocation event\r\n                proxy = this.proxies[hubName];\r\n\r\n                // Update the hub state\r\n                $.extend(proxy.state, data.State);\r\n                $(proxy).triggerHandler(makeEventName(eventName), [data.Args]);\r\n            }\r\n        });\r\n\r\n        connection.error(function (errData, origData) {\r\n            var callbackId, callback;\r\n\r\n            if (!origData) {\r\n                // No original data passed so this is not a send error\r\n                return;\r\n            }\r\n\r\n            callbackId = origData.I;\r\n            callback = connection._.invocationCallbacks[callbackId];\r\n\r\n            // Verify that there is a callback bound (could have been cleared)\r\n            if (callback) {\r\n                // Delete the callback\r\n                connection._.invocationCallbacks[callbackId] = null;\r\n                delete connection._.invocationCallbacks[callbackId];\r\n\r\n                // Invoke the callback with an error to reject the promise\r\n                callback.method.call(callback.scope, { E: errData });\r\n            }\r\n        });\r\n\r\n        connection.reconnecting(function () {\r\n            if (connection.transport && connection.transport.name === \"webSockets\") {\r\n                clearInvocationCallbacks(connection, \"Connection started reconnecting before invocation result was received.\");\r\n            }\r\n        });\r\n\r\n        connection.disconnected(function () {\r\n            clearInvocationCallbacks(connection, \"Connection was disconnected before invocation result was received.\");\r\n        });\r\n    };\r\n\r\n    hubConnection.fn._maximizeClientHubInvocation = function (minClientHubInvocation) {\r\n        return {\r\n            Hub: minClientHubInvocation.H,\r\n            Method: minClientHubInvocation.M,\r\n            Args: minClientHubInvocation.A,\r\n            State: minClientHubInvocation.S\r\n        };\r\n    };\r\n\r\n    hubConnection.fn._registerSubscribedHubs = function () {\r\n        /// <summary>\r\n        ///     Sets the starting event to loop through the known hubs and register any new hubs\r\n        ///     that have been added to the proxy.\r\n        /// </summary>\r\n        var connection = this;\r\n\r\n        if (!connection._subscribedToHubs) {\r\n            connection._subscribedToHubs = true;\r\n            connection.starting(function () {\r\n                // Set the connection's data object with all the hub proxies with active subscriptions.\r\n                // These proxies will receive notifications from the server.\r\n                var subscribedHubs = [];\r\n\r\n                $.each(connection.proxies, function (key) {\r\n                    if (this.hasSubscriptions()) {\r\n                        subscribedHubs.push({ name: key });\r\n                        connection.log(\"Client subscribed to hub '\" + key + \"'.\");\r\n                    }\r\n                });\r\n\r\n                if (subscribedHubs.length === 0) {\r\n                    connection.log(\"No hubs have been subscribed to.  The client will not receive data from hubs.  To fix, declare at least one client side function prior to connection start for each hub you wish to subscribe to.\");\r\n                }\r\n\r\n                connection.data = connection.json.stringify(subscribedHubs);\r\n            });\r\n        }\r\n    };\r\n\r\n    hubConnection.fn.createHubProxy = function (hubName) {\r\n        /// <summary>\r\n        ///     Creates a new proxy object for the given hub connection that can be used to invoke\r\n        ///     methods on server hubs and handle client method invocation requests from the server.\r\n        /// </summary>\r\n        /// <param name=\"hubName\" type=\"String\">\r\n        ///     The name of the hub on the server to create the proxy for.\r\n        /// </param>\r\n\r\n        // Normalize the name to lowercase\r\n        hubName = hubName.toLowerCase();\r\n\r\n        var proxy = this.proxies[hubName];\r\n        if (!proxy) {\r\n            proxy = hubProxy(this, hubName);\r\n            this.proxies[hubName] = proxy;\r\n        }\r\n\r\n        this._registerSubscribedHubs();\r\n\r\n        return proxy;\r\n    };\r\n\r\n    hubConnection.fn.init.prototype = hubConnection.fn;\r\n\r\n    $.hubConnection = hubConnection;\r\n\r\n}(window.jQuery, window));\r\n/* jquery.signalR.version.js */\r\n// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\n\r\n/*global window:false */\r\n/// <reference path=\"jquery.signalR.core.js\" />\r\n(function ($, undefined) {\r\n    $.signalR.version = \"2.2.1\";\r\n}(window.jQuery));\r\n"]}